{"version":3,"sources":["assets/images/logo.png","assets/images/loading.gif","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/error/styles.js","pages/error/Error.js","pages/UserManage/Admins/styles.js","components/PageTitle/styles.js","components/PageTitle/PageTitle.js","components/Status/styles.js","components/Status/Status.js","components/Loading/BackdropLoading.js","redux/constants/AdminActionType.js","redux/constants/UserActionType.js","redux/constants/UserViewActionType.js","redux/constants/ClientActionType.js","redux/constants/ClientViewActionType.js","redux/constants/CompanyActionType.js","redux/constants/ScheduleActionType.js","redux/constants/ScheduleViewActionType.js","redux/constants/SalesClientActionType.js","redux/constants/SalesClientViewActionType.js","redux/constants/SalesOrderReviewType.js","redux/constants/SalesOrderHistoryType.js","redux/constants/SalesOrderItemType.js","redux/constants/SalesDiscountType.js","redux/constants/SalesPromotionType.js","redux/constants/SalesCouponType.js","redux/constants/SalesGroupType.js","common/config.js","services/admins/AdminService.js","redux/actions/AdminAction.js","services/auth/Auth.js","context/UserContext.js","pages/UserManage/Admins/Admins.js","components/Widget/styles.js","components/Widget/Widget.js","components/FormControls/styles.js","components/FormControls/CustomDatePicker.js","components/FormControls/CustomInput.js","components/FormControls/CustomCombobox.js","components/Notification/styles.js","components/Notification/Notification.js","services/company/CompanyService.js","redux/actions/CompanyAction.js","pages/UserManage/Admins/EditAdmin.js","pages/UserManage/Admins/AddAdmin.js","pages/UserManage/Users/styles.js","services/users/UserService.js","redux/actions/UserAction.js","pages/UserManage/Users/Users.js","pages/UserManage/Users/EditUser.js","pages/UserManage/Users/AddUser.js","pages/Companys/styles.js","pages/Companys/Companys.js","http_common.js","services/upload_pdf/upload-files.service.js","components/Upload/upload-files.component.js","pages/Companys/AddCompany.js","pages/Companys/EditCompany.js","pages/Client/styles.js","services/client/ClientService.js","redux/actions/ClientAction.js","pages/Client/Client.js","pages/Client/AddClient.js","pages/Client/EditClient.js","pages/Sales/styles.js","redux/reducers/SalesReducer.js","services/sales/SalesClientService.js","redux/actions/SalesClientAction.js","pages/Sales/Sales.js","pages/Sales/EditSales.js","pages/Sales/AddSales.js","pages/Schedule/styles.js","services/schedule/ScheduleService.js","redux/actions/ScheduleAction.js","pages/Schedule/Schedule.js","components/Footer/styles.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Sidebar/Sidebar1.js","pages/UserView/styles.js","services/users/UserViewService.js","redux/actions/UserViewAction.js","pages/UserView/UserView.js","pages/ScheduleView/styles.js","services/scheduleview/ScheduleViewService.js","redux/actions/ScheduleViewAction.js","pages/ScheduleView/ScheduleView.js","pages/ClientView/styles.js","redux/reducers/ClientViewReducer.js","services/clientview/ClientViewService.js","redux/actions/ClientViewAction.js","pages/ClientView/Client.js","pages/ClientView/AddClient.js","pages/ClientView/EditClient.js","pages/SalesView/styles.js","services/salesview/SalesClientViewService.js","redux/actions/SalesClientViewAction.js","pages/SalesView/Sales.js","pages/SalesView/EditSales.js","pages/SalesView/AddSales.js","pages/Report/ScheduleReport/styles.js","pages/Report/ScheduleReport/ScheduleReport.js","pages/SalesOrder/styles.js","redux/reducers/SalesReviewReducer.js","services/salesorder/SalesReviewService.js","redux/actions/OrderReviewAction.js","components/Status/Status3.js","pages/SalesOrder/Review.js","redux/reducers/SalesHistoryReducer.js","services/salesorder/SalesHistoryService.js","redux/actions/OrderHistoryAction.js","pages/SalesOrder/History.js","pages/SalesOrder/Item/styles.js","redux/reducers/SalesItemReducer.js","services/salesorder/SalesItemService.js","redux/actions/OrderItemAction.js","pages/SalesOrder/Item/Item.js","pages/SalesOrder/Item/AddItem.js","pages/SalesOrder/Item/EditItem.js","pages/SalesOrder/Discount/styles.js","redux/reducers/SalesDiscountReducer.js","services/salesorder/SalesDiscountService.js","redux/actions/OrderDiscountAction.js","pages/SalesOrder/Discount/Discount.js","pages/SalesOrder/Discount/AddDiscount.js","pages/SalesOrder/Discount/EditDiscount.js","pages/SalesOrder/Promotion/styles.js","redux/reducers/SalesPromotionReducer.js","services/salesorder/SalesPromotionService.js","redux/actions/OrderPromotionAction.js","services/salesorder/SalesCouponService.js","redux/actions/OrderCouponAction.js","pages/SalesOrder/Promotion/Promotion.js","pages/SalesOrder/Promotion/AddPromotion.js","pages/SalesOrder/Promotion/EditPromotion.js","pages/SalesOrder/Promotion/AddCoupon.js","pages/SalesOrder/Promotion/EditCoupon.js","pages/Report/SalesOrderReport/styles.js","pages/Report/SalesOrderReport/components/TotalWidget/styles.js","pages/Report/SalesOrderReport/components/TotalWidget/TotalWidget.js","pages/Report/SalesOrderReport/components/CashFlow/styles.js","pages/Report/SalesOrderReport/components/CashFlow/CashFlow.js","pages/Report/SalesOrderReport/components/TopWidget/styles.js","pages/Report/SalesOrderReport/components/TopWidget/TopWidget.js","pages/Report/SalesOrderReport/CompanyTarget.js","pages/Report/SalesOrderReport/ItemTarget.js","redux/reducers/SalesGroupReducer.js","services/salesorder/SalesGroupService.js","redux/actions/OrderGroupAction.js","pages/Report/SalesOrderReport/Target.js","pages/SalesOrder/Group/styles.js","pages/SalesOrder/Group/Group.js","pages/SalesOrder/Group/AddGroup.js","pages/SalesOrder/Group/EditGroup.js","pages/SalesOrder/ItemCategory/styles.js","pages/SalesOrder/ItemCategory/ItemCategory.js","pages/SalesOrder/ItemCategory/EditItemCategory.js","pages/SalesOrder/CompanyUsers/styles.js","pages/SalesOrder/CompanyUsers/CompanyUsers.js","pages/SalesOrder/CompanyUsers/EditCompanyUser.js","pages/SalesOrder/CompanyUsers/Setting/styles.js","pages/SalesOrder/CompanyUsers/Setting/Setting.js","components/Layout/Layout1.js","pages/success/styles.js","pages/success/success.js","pages/login/styles.js","pages/login/Login.js","components/App.js","serviceWorker.js","redux/reducers/AdminReducer.js","redux/reducers/UserReducer.js","redux/reducers/CompanyReducer.js","redux/reducers/ClientReducer.js","redux/reducers/ScheduleReducer.js","redux/reducers/UserViewReducer.js","redux/reducers/ScheduleViewReducer.js","redux/reducers/SalesViewReducer.js","redux/reducers/SalesCouponReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","themes_default","palette","primary","main","light","tinycolor","lighten","toHexString","dark","darken","white","myprimary","bright","favorite","secondary","contrastText","mysecondary","warning","success","info","text","hint","background","default","blue","green","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","backgroundColor","MuiMenu","paper","boxShadow","MuiSelect","icon","color","MuiListItem","&$selected","&:focus","button","&:hover, &:focus","MuiTouchRipple","child","MuiTable","border","MUIDataTableBodyCell","paddingTop","paddingBottom","MuiTableCell","borderColor","fontSize","head","height","MuiTableRow","MUIDataTableHeadCell","fixedHeaderCommon","MUIDataTableSelectCell","headerCell","MuiTypography","body1","MuiMenuItem","padding","themes","createMuiTheme","Object","objectSpread2","defaultTheme","typography","h1","h2","h3","h4","h5","h6","makeStyles","theme","display","maxWidth","overflowX","content","flexGrow","spacing","width","minHeight","contentShift","concat","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","mainContainer","padding1600","paddingLeft","paddingRight","padding1800","_inputRoot","logotype","defineProperty","marginLeft","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","zIndex","drawer","leavingScreen","hide","grow","search","position","borderRadius","fade","common","black","&:hover","cursor","searchFocused","up","searchIcon","right","alignItems","justifyContent","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","whiteColor","badge","Typography","_ref2","children","weight","size","colorBrightness","props","objectWithoutProperties","useTheme","react_default","a","createElement","assign","style","getColor","getFontWeight","getFontSize","variant","brigtness","arguments","length","undefined","multiplier","defaultSize","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","state","action","type","isSidebarOpened","Error","LayoutProvider","_ref","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","dispatch","Provider","value","useLayoutState","context","useContext","useLayoutDispatch","toggleSidebar","Header","classes","useStyles","layoutDispatch","Grid","container","Toolbar","className","IconButton","onClick","classNames","FormatAlignJustifyOutlined","FormatAlignLeftOutlined","Wrappers_Typography","float","localStorage","getItem","_mobileBackButton","menuButton","flexShrink","drawerPaper","drawerOpen","drawerClose","sidebarList","mobileBackButton","only","logotypeImage","link","linkActive","linkNestedActive","linkNested","linkIcon","linkIconActive","linkText","largeText","smallText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","listItem","dotBase","dotSmall","dotLarge","Dot","_classnames","classnames","SidebarLink","_classnames2","_classnames4","_classnames6","label","location","nested","_useState","useState","_useState2","isOpen","setIsOpen","isLinkActive","pathname","indexOf","Divider","Fragment","ListItem","component","Link","e","preventDefault","to","disableRipple","ListItemIcon","Inbox","ListItemText","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","childrenLink","key","linkRoot","structure","id","AccountCircleOutlined","BusinessOutlined","PeopleAltOutlined","TransferWithinAStationOutlined","TimerOutlined","withRouter","_classNames","_classNames2","isPermanent","setPermanent","useEffect","window","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","open","ArrowBack","alignSelf","clear","reload","isSmallScreen","innerWidth","values","md","top","left","logotypeText","logotypeIcon","paperRoot","textRow","textAlign","errorCode","safetyText","backButton","Paper","colorbrightness","Button","dashedBorder","formControl","filePicker","fileInput","selectEmpty","formContainer","typo","buttonContainer","statusTextContainer","statusText","invoiceContainer","backgroundImage","iconContainer","cardTitle","letterSpacing","cardRoot","displayColumn","lineHeight","headerContainer","rightAlign","cardFooterRoot","editButton","printButton","shareButton","actionButton","notificationItem","notificationCloseButton","toastsContainer","progress","visibility","notification","overflow","notificationComponent","pageTitleContainer","&:active","buttonGroup","PageTitle","iconVar","Add_default","Print","CloudUpload_default","CloudDownload_default","buttonCount","lgSpan","mdSpan","smSpan","item","lg","sm","xs","title","includes","startIcon","category","console","log","history","push","buttonHandler","status","draft","paid","pending","Status","toUpperCase","backdrop","BackdropLoading","_React$useState","_React$useState2","setOpen","Backdrop","src","loadingImage","alt","FETCH_ADMIN_REQUEST","FETCH_ADMIN_SUCCESS","FETCH_ADMIN_ERROR","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_ERROR","FETCH_USERVIEW_REQUEST","FETCH_USERVIEW_SUCCESS","FETCH_USERVIEW_ERROR","FETCH_CLIENT_REQUEST","FETCH_CLIENT_SUCCESS","FETCH_CLIENT_ERROR","FETCH_CLIENTVIEW_REQUEST","FETCH_CLIENTVIEW_SUCCESS","FETCH_CLIENTVIEW_ERROR","FETCH_COMPANY_REQUEST","FETCH_COMPANY_SUCCESS","FETCH_COMPANY_ERROR","FETCH_SCHEDULE_REQUEST","FETCH_SCHEDULE_SUCCESS","FETCH_SCHEDULE_ERROR","FETCH_SCHEDULEVIEW_REQUEST","FETCH_SCHEDULEVIEW_SUCCESS","FETCH_SCHEDULEVIEW_ERROR","FETCH_SALESCLIENT_REQUEST","FETCH_SALESCLIENT_SUCCESS","FETCH_SALESCLIENT_ERROR","FETCH_SALESCLIENTVIEW_REQUEST","FETCH_SALESCLIENTVIEW_SUCCESS","FETCH_SALESCLIENTVIEW_ERROR","FETCH_SALESREVIEW_REQUEST","FETCH_SALESREVIEW_SUCCESS","FETCH_SALESREVIEW_ERROR","FETCH_SALESHISTORY_REQUEST","FETCH_SALESHISTORY_SUCCESS","FETCH_SALESHISTORY_ERROR","FETCH_SALESITEM_REQUEST","FETCH_SALESITEM_SUCCESS","FETCH_SALESITEM_ERROR","FETCH_DISCOUNT_REQUEST","FETCH_DISCOUNT_SUCCESS","FETCH_DISCOUNT_ERROR","FETCH_PROMOTION_REQUEST","FETCH_PROMOTION_SUCCESS","FETCH_PROMOTION_ERROR","FETCH_COUPON_REQUEST","FETCH_COUPON_SUCCESS","FETCH_COUPON_ERROR","FETCH_GROUP_REQUEST","FETCH_GROUP_SUCCESS","FETCH_GROUP_ERROR","SERVER_URL","GOOGLE_MAP_API_KEY","fetchAdmins","body","isAdmin","setTimeout","fetch","method","JSON","stringify","headers","Content-Type","then","res","json","error","admin","catch","fetchAdminError","loginApi","user","Accept","Promise","resolve","reject","axios","post","err","signUpApi","UserStateContext","UserDispatchContext","adminID","userReducer","loading","isAuthenticated","isSignup","UserProvider","useUserState","connect","bindActionCreators","useHistory","dataSource","setDataSource","adminData","useSelector","_useState3","_useState4","columns","name","options","filter","sort","customBodyRender","tableMeta","updateValue","actionEdit","Edit","i","filterType","pagination","print","download","responsive","fixedHeader","elevation","rowsPerPageOptions","resizableColumns","onRowsDelete","rowsDeleted","delete_id","data","newDeleteId","dataIndex","user_id","requestOptions","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","ok","message","abrupt","stop","_x","apply","this","toast","onTableChange","tableState","tmp","ThemeProvider","dist_default","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","moreButton","Widget","noBodyPadding","bodyClass","disableWidgetMenu","_ref$menuItems","menuItems","header","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","aria-owns","aria-haspopup","buttonRef","MoreVert","Menu","anchorEl","onClose","disableAutoFocusItem","menu","index","MenuItem","addButton","comboContainer","addIcon","autoRoot","CustomDatePicker","DatePicker","required","animateYearScrolling","autoOk","clearable","selectedDate","onChange","handleChange","CustomInput","FormControl","TextField","multiline","rows","disabled","CustomCombobox","defaultProps","items","getOptionLabel","option","addbtn","Autocomplete","debug","multiple","openOnFocus","renderOption","renderInput","params","req","Tooltip","notificationContainer","notificationContained","notificationContainedShadowless","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","containedTypography","messageContainer","extraButton","typesIcons","e-commerce","ShoppingCart","NotificationsNone","offer","LocalOffer","ThumbUp","Email","feedback","SmsFailed","customer","AccountBox","shipped","Done","delivered","BusinessCenter","defence","esm_Error","report","Report","upload","Publish","disc","DiscFull","Notification","getIconByType","iconWithStyles","cloneElement","notificationIcon","shadowless","setAlpha","toRgbString","typographyVariant","extraButtonClick","fetchCompany","company","fetchCompanyError","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","errorToastId","setErrorToastId","_useState5","_useState6","notificationsPosition","_useState7","_useState8","companyData","notify","_useState9","full_name","email","phone_number","company_id","company_entity_name","isActive","allow_so","sales_target","_useState10","setState","update_id","match","getAdminInfo","getCompanyNamefromCompanyID","split","companyIDList","companies","original","Boolean","objArray2Array","setCompanyIdfromCompanyName","object","toString","_loop","l","setCompanyList","companyList","field","target","checked","_e$target","prevState","onSaveandBack","test","join","_callee2","_context2","handleNotificationCall","_x2","updateAdminInfo","react_toastify","closeButton","_ref3","closeToast","Close","closeOnClick","progressClassName","notificationProgress","InputLabel","Select","labelId","event","input","Input","renderValue","selected","Checkbox","FormControlLabel","control","Switch","Cancel","Save","retryErrorNotification","update","render","notificationType","componentProps","toastId","sendNotification","validateEmail","password","maxLength","onSaveandNew","fetchUsers","fetchUserError","selectedRowIndex","setSelectedRowIndex","userData","getUserInfo","onSave","updateUserInfo","href","baseURL","upload_files_service","file","onUploadProgress","formData","FormData","append","http","get","BorderLinearProgress","withStyles","colorPrimary","bar","LinearProgress","UploadFiles","_this","classCallCheck","_super","call","selectedFiles","currentFile","isError","fileInfos","files","_this2","fileNameList","UploadService","Math","round","loaded","total","fileName","pop","setFileList","_this$state","Box","mr","htmlFor","selectFile","bind","Component","AddCompany","entity_name","owner_name","address","time_limit_per_schedule","late_policy","min_schedule_time","max_schedule_time","notes","company_info","CloseButton","upload_files_component_UploadFiles","company_owner_name","company_infoList","getCompanyInfo","updateCompanyInfo","_ref4","table","difference","fetchClient","client","fetchClientError","clientData","client_id","addWithCSV","row","saveData","client_entity_name","custom_field","approved","created_by","reqOption","react_csv_reader_default","onFileLoaded","importCSV","Geocode","setApiKey","fromAddress","_response$results$0$g","results","geometry","lat","lng","_e$target2","getClientInfo","updateClientInfo","Number","initialState","sales","fetchSalesClient","fetchSalesClientError","salesData","sales_client_id","client_name","user_name","clients","getSalesClientInfo","getClientNameList","optionData","users","getUserNameList","handleUserChange","temp","getClientsByCompanyId","userList","handleClientChange","_callee3","_context3","_x3","userIDList","setUserList","getUsersbyCompanyId","handleCompanyChange","_objectSpread2","getUserIDbyUserName","_ref5","_callee4","_context4","_x4","fetchSchedule","schedule","fetchScheduleError","scheduleData","schedule_id","version","Footer","matches1600","useMediaQuery","matches1800","layoutState","Sidebar_Sidebar","react_router","exact","path","AdminPage","EditAdminPage","AddAdminPage","UserPage","EditUserPage","AddUserPage","CompanyPage","AddCompanyPage","EditCompanyPage","ClientsPage","AddClientPage","EditClientPage","SalesPage","EditSalesPage","AddSalesPage","SchedulePage","VisibilityOutlined_default","BusinessOutlined_default","SpellcheckOutlined_default","StorageOutlined_default","LocalOfferOutlined_default","TrendingUpOutlined_default","ShoppingCartOutlined_default","HistoryOutlined_default","AssessmentOutlined","fetchUserView","userview","fetchUserViewError","userviewData","selectableRows","fetchScheduleView","scheduleview","fetchScheduleViewError","scheduleviewData","clientview","fetchClientView","fetchClientViewError","clientViewData","fetchSalesClientView","salesview","fetchSalesClientViewError","salesviewData","clientList","setReport","curDate","Date","_useState11","start_date","getFullYear","getMonth","end_date","_useState12","moment","firstDay","startOf","format","lastDay","endOf","getReportData","reportData","userviewData0","_iterator","_step","createForOfIteratorHelper","s","n","done","schedule_number","new_client","percentage","t0","t1","f","finish","date","handleDateChange","s_date","e_date","modal","overflowY","salesreview","fetchSalesReview","fetchSalesReviewError","Status3","_state$selectedOrder","_state$selectedOrder2","_state$selectedOrder3","_state$selectedOrder4","_state$selectedOrder5","_state$selectedOrder6","_state$selectedOrder7","_state$selectedOrder8","_state$selectedOrder9","_state$selectedOrder10","_state$selectedOrder11","_state$selectedOrder12","_state$selectedOrder13","_state$selectedOrder14","_state$selectedOrder15","setAnchorEl","reviewData","showModal","selectedOrder","actionView","Visibility_default","actionClick","MoreHoriz_default","keepMounted","actionClose","currentTarget","order_id","k","Modal","aria-labelledby","aria-describedby","order_date","due_date","net_total","promotions","tax","shipping_cost","order_items","saleshistory","fetchSalesHistory","fetchSalesHistoryError","historyData","salesitem","fetchSalesItem","fetchSalesItemError","itemData","getItemsbyCompanyId","com_id","item_id","item_name","category_id","unit_price","unit","category_name","tag","categoryList","categoryNameList","unitList","showDiscount","discount_type","min_qty","max_qty","amount","discountList","getGroup","getUnit","list","unit_name","setGroupIdfromGroupName","_ref6","aria-label","discount_id","_callee5","_context5","_x5","onDelete","Delete_default","min_quantity","max_quantity","onAddDiscount","getGroupbyId","getDiscount","_ref8","_ref7","_callee7","_context7","_x7","_callee6","_context6","_x6","discount","fetchDiscount","fetchDiscountError","discountData","itemList","itemNameList","getItems","setItemIdfromItemName","Discount","getDiscountbyId","promotion","fetchPromotion","fetchPromotionError","fetchCoupon","coupon","fetchCouponError","promotion_id","code","promotionData","couponData","getMuiTheme","coupon_columns","actionCouponEdit","coupon_options","coupon_id","typeList","clientNameList","getClient","handleTypeChange","getPromotion","getCoupon","incomeWidget","expenseWidget","profitWidget","iconArea","incomeIcon","expenseIcon","profitIcon","totalRight","TotalWidget","_classnames3","current_total_sales","LocalAtm","createIcon","CashFlow","react_chartjs_2_es","TopWidget","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","companyTarget","itemTarget","group","fetchGroup","fetchGroupError","activate","setActivate","groupData","top3Data","graphData","getSalesTargetbyCompanyId","getCurrentSalesbyCompanyID","getUsersTargetbyCompanyID","s_date1","e_date1","getGraphData","getCategorySalesTarget","getCompanyList","getItemList","current_total","getCurrentSalesbyCategoryID","quantity","_x10","_x8","_x9","_callee8","_context8","toConsumableArray","slice","_x14","_x11","_x12","_x13","_ref9","_callee10","_context10","_ref10","_callee9","_context9","_x18","_x15","_x16","_x17","_ref11","_callee11","_context11","_x19","getItemCategoryTarget","_ref12","_callee12","_context12","_x20","handleItemChange","_ref13","_callee13","_context13","_x21","_x22","views","labels","datasets","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","SalesOrderReport_CompanyTarget","SalesOrderReport_ItemTarget","group_id","Settings","itemcategory","userViewData","getSalesTarget","Sidebar1","UserViewPage","ScheduleViewPage","ClientViewPage","SalesViewPage","ScheduleReportPage","TargetPage","ReviewPage","HistoryPage","ItemPage","AddItemPage","EditItemPage","DiscountPage","AddDiscountPage","EditDiscountPage","PromotionPage","AddPromotionPage","EditPromotionPage","AddCouponPage","EditCouponPage","GroupPage","AddGroupPage","EditGroupPage","ItemCategoryPage","EditItemCategoryPage","CompanyUsersPage","SettingPage","EditCompanyUserPage","Success","_logotypeContainer","logotypeContainer","form","tab","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","&:before","borderBottomColor","&:after","&:hover:before","textField","formButtons","forgetButton","loginLoader","copyright","bottom","userDispatch","useUserDispatch","isLoading","setIsLoading","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","_useState13","_useState14","confirmValue","setConfirmValue","_useState15","_useState16","phoneNumberValue","setPhoneNumberValue","_useState17","_useState18","companyIDValue","setCompanyIDValue","Tabs","indicatorColor","textColor","centered","Tab","Fade","InputProps","underline","placeholder","fullWidth","CircularProgress","login","check_id","isSuperAdmin","setItem","token","rememberToken","loginUser","signUp","App","_useUserState","react_router_dom","PrivateRoute","Layout","Layout1","PublicRoute","Login","rest","from","hostname","ScheduleReducer","ScheduleViewReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","Themes","CssBaseline","useUtils_cfb96ac9","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1967b33c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.40a2ca7d.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.80a83396.gif\";","import tinycolor from \"tinycolor2\";\n\nconst primary = \"#536DFE\";//#6200ee\nconst secondary = \"#FF5C93\";\nconst myprimary = \"#0B1A2D\"; //0B1A2D 07112C\nconst mysecondary = \"#00A3EE\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\nconst blue = \"#2196f3\";\nconst green = \"#4caf50\";\nconst white = \"#FFF\";\nconst favorite = \"#4302a0\";\n\nconst lightenRate = 7.5;\nconst brightenRate = 15;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    myprimary: {\n      main: myprimary,\n      bright: tinycolor(myprimary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(myprimary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(myprimary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    favorite: {\n      main: favorite,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    mysecondary: {\n      main: mysecondary,\n      bright: tinycolor(mysecondary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(mysecondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(mysecondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n      white: \"#FFF\"\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n    blue: {\n      main: blue,\n      light: tinycolor(blue)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(blue)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    green: {\n      main: green,\n      light: tinycolor(green)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(green)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTable: {\n      root: {\n        border: \"1px solid rgba(224, 224, 224, .5)\",\n      }\n    },\n    MUIDataTableBodyCell: {\n      root: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n        height: 50,\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 75,\n      },\n    },\n    MUIDataTableHeadCell: {\n      fixedHeaderCommon: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MUIDataTableSelectCell: {\n      headerCell: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MuiTypography: {\n      body1: {\n        fontSize: '0.8125rem',\n      }\n    },    \n    MuiMenuItem: {\n      root: {\n        fontSize: '0.8125rem',\n        padding: 36,\n        paddingTop: 12,\n        paddingBottom: 12,\n      }\n    },    \n  },\n};\n","import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overflowX: \"hidden\",\n    background: '#fff',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw - 240px)`,\n    minHeight: \"100vh\",\n  },\n  contentShift: {\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  fakeToolbar: {\n    ...theme.mixins.toolbar,\n  },\n  mainContainer: {\n    paddingTop: 40,\n    // paddingLeft: 40,\n    // paddingRight: 40,\n    // paddingLeft: `calc(100vw - 240px) * 0.2`,\n  },\n  padding1600: {\n    paddingLeft: 80,\n    paddingRight: 80,\n  },\n  padding1800: {\n    paddingLeft: 120,\n    paddingRight: 120,\n  },\n\n}));\n","import { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport blue from '@material-ui/core/colors/blue';\n\nexport default makeStyles(theme => ({\n  logotype: {\n    color: \"white\",\n    marginLeft: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    fontWeight: 500,\n    fontSize: 18,\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  appBar: {\n    width: \"100%\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    width: \"100%\",\n    // background: \"#6200ee;\",\n    background: theme.palette.mysecondary.main,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    background: \"white\",\n    position: \"relative\",\n    borderRadius: 25,\n    paddingLeft: theme.spacing(2.5),\n    width: 36,\n    backgroundColor: fade(theme.palette.common.black, 0),\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\n    \"&:hover\": {\n      cursor: \"pointer\",\n      // background: \"#FFF\",\n      backgroundColor: fade(theme.palette.common.black, 0.08),\n    },\n  },\n  searchFocused: {\n    backgroundColor: fade(theme.palette.common.black, 0.08),\n    // backgroundColor: fade(theme.palette.common.white, 1),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 250,\n    },\n  },\n  searchIcon: {\n    width: 36,\n    right: 0,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    transition: theme.transitions.create(\"right\"),\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  searchIconOpened: {\n    right: theme.spacing(1.25),\n  },\n  inputRoot: {\n    color: \"#B9B9B9\",\n    color: theme.palette.primary.light,\n    width: \"100%\",\n  },\n  inputInput: {\n    height: 36,\n    padding: 0,\n    paddingRight: 36 + theme.spacing(1.25),\n    width: \"100%\",\n  },\n  messageContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenu: {\n    marginTop: theme.spacing(7),\n  },\n  headerMenuList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenuItem: {\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\",\n    },\n  },\n  headerMenuButton: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5),\n  },\n  headerMenuButtonCollapse: {\n    marginRight: theme.spacing(2),\n  },\n  headerIcon: {\n    fontSize: 28,\n    color: \"rgba(255, 255, 255, 0.35)\",\n  },\n  headerIconCollapse: {\n    color: \"white\",\n  },\n  profileMenu: {\n    minWidth: 265,\n  },\n  profileMenuUser: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n  profileMenuItem: {\n    color: theme.palette.text.hint,\n  },\n  profileMenuIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.text.hint,\n  },\n  profileMenuLink: {\n    fontSize: 16,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  messageNotification: {\n    height: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  messageNotificationSide: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  messageNotificationBodySide: {\n    alignItems: \"flex-start\",\n    marginRight: 0,\n  },\n  sendMessageButton: {\n    margin: theme.spacing(4),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textTransform: \"none\",\n  },\n  sendButtonIcon: {\n    marginLeft: theme.spacing(2),\n  },\n  whiteColor: {\n    color: \"white\"\n  }\n}));\n","import React from \"react\";\nimport {\n  withStyles,\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({ children, colorBrightness, color, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {styledProps => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({ children, color, className, ...props }) {\n  var theme = useTheme();\n\n  var Styled = createStyled({\n    root: {\n      color: getColor(color, theme),\n      width: '100%',\n    },\n    contained: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n      \"&:active\": {\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n    outlined: {\n      color: getColor(color, theme),\n      borderColor: getColor(color, theme),\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase\n          classes={{\n            contained: classes.contained,\n            root: classes.root,\n            outlined: classes.outlined,\n          }}\n          {...props}\n          className={classnames(\n            {\n              [classes.select]: props.select,\n            },\n            className,\n          )}\n        >\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function(props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n","import React from \"react\";\n\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\",\n  });\n}\n","import React from \"react\";\nimport {\n  Toolbar,\n  IconButton,\n  Grid\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n  FormatAlignJustifyOutlined,\n  FormatAlignLeftOutlined,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers/Wrappers\";\nimport { toggleSidebar, useLayoutDispatch, useLayoutState } from \"../../context/LayoutContext\";\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  // var layoutState = useLayoutState();\n\n  return (\n    <Grid container spacing={4}>\n      <Toolbar className={classes.toolbar} style={{display: 'flex', justifyContent: 'space-between'}}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {isSidebarOpened ? (\n            <FormatAlignJustifyOutlined\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n              <FormatAlignLeftOutlined\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n        </IconButton>\n        <Typography variant=\"h4\" weight=\"medium\" className={classes.logotype}>\n          ASILE\n          </Typography>\n\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ float: 'center', marginLeft: 30 }}>\n          Hi, {localStorage.getItem('full_name')}\n        </Typography>\n      </Toolbar>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nconst drawerWidth = 240;\n\nexport default makeStyles(theme => ({\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerPaper: {\n    // background: \"#6200ee\",\n    background: theme.palette.myprimary.main,\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n    },\n  },\n  toolbar: {\n    marginTop: 15,\n    color: \"#FFF\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sidebarList: {\n    padding: theme.spacing(1),\n  },\n  mobileBackButton: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: theme.spacing(0.625),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    width: 40,\n    marginRight: theme.spacing(1),\n  },\n  logotype: {\n    marginRight: theme.spacing(1),\n  }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\",\n      backgroundColor: theme.palette.myprimary.light,\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: \"inherit\"\n    },\n  },\n  linkActive: {\n    // backgroundColor: theme.palette.favorite.main,\n    backgroundColor: theme.palette.myprimary.bright,\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkNestedActive: {\n    // backgroundColor: theme.palette.favorite.main\n    backgroundColor: theme.palette.myprimary.bright,\n  },\n  linkNested: {\n    paddingLeft: 0,\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\"\n      backgroundColor: theme.palette.myprimary.light\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main,\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.primary.white,\n  },\n  linkIconActive: {\n    color: theme.palette.primary.white,\n  },\n  linkText: {\n    padding: 0,\n    color: theme.palette.text.white + \"\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 14,\n  },\n  largeText: {\n    fontSize: 14,\n  },\n  smallText: {\n    fontSize: 13,\n  },\n  linkTextActive: {\n    // color: theme.palette.text.primary,\n    color: theme.palette.text.white,\n    fontWeight: \"550\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(3),\n    fontSize: '12px!important',\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n  listItem: {\n    padding: 5\n  }\n}));\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  dotBase: {\n    width: 8,\n    height: 8,\n    backgroundColor: theme.palette.text.hint,\n    borderRadius: \"50%\",\n    transition: theme.transitions.create(\"background-color\"),\n  },\n  dotSmall: {\n    width: 5,\n    height: 5\n  },\n  dotLarge: {\n    width: 11,\n    height: 11,\n  },\n}));\n\nexport default function Dot({ size, color }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classnames(classes.dotBase, {\n        [classes.dotLarge]: size === \"large\",\n        [classes.dotSmall]: size === \"small\",\n      })}\n      style={{\n        backgroundColor:\n          color && theme.palette[color] && theme.palette[color].main,\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n            [classes.linkNestedActive]: isLinkActive && nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n              [classes.largeText]: !nested,\n              [classes.smallText]: nested,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding className={classes.listItem}>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  MenuOpen, LocalAtmOutlined, ShoppingCartOutlined,\n  AccountBalanceOutlined, AssessmentOutlined,\n  FormatAlignJustifyOutlined, FormatAlignLeftOutlined, People, Settings, AccountCircleOutlined, BusinessOutlined, PeopleAltOutlined, TransferWithinAStationOutlined, TimerOutlined\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/usermanage\",\n    icon: <AccountCircleOutlined fontSize=\"small\" />,\n    children: [\n      { label: \"Administrators\", link: \"/app/usermanage/admin\" },\n      { label: \"Users\", link: \"/app/usermanage/user\" },\n    ],\n  },\n  {\n    id: 1,\n    label: \"Company\",\n    link: \"/app/company\",\n    icon: <BusinessOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 2,\n    label: \"Client\",\n    link: \"/app/client\",\n    icon: <PeopleAltOutlined fontSize=\"small\" />,\n\n  },\n  {\n    id: 3,\n    label: \"Sales Client\",\n    link: \"/app/sales\",\n    icon: <TransferWithinAStationOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 4,\n    label: \"Schedule\",\n    link: \"/app/schedule\",\n    icon: <TimerOutlined fontSize=\"small\" />,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{ color: 'white' }}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n      <div className={classes.sidebarList} style={{ justifyContent: 'center', alignSelf: 'center',  marginTop: 20}}>\n        <IconButton style={{ color: 'white', fontSize: 14, fontWeight: 'bold' }}\n          onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }}>\n          <ArrowBackIcon style={{marginRight: 5}}/>\n          Log Out\n        </IconButton>\n      </div>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Error() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      {/* <div className={classes.logotype}>\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\n          Diago Admin\n        </Typography>\n      </div> */}\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h1\"\n          color=\"primary\"\n          className={classnames(classes.textRow, classes.errorCode)}\n        >\n          404\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Oops. Looks like the page you're looking for no longer exists\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          color=\"text\"\n          colorbrightness=\"secondary\"\n          className={classnames(classes.textRow, classes.safetyText)}\n        >\n          But we're here to bring you back to safety\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  pageTitleContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n  typo: {\n    color: theme.palette.text.hint,\n  },\n  button: {\n    padding: '8px 8px',\n    fontSize: 12,\n    width: '100%',\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    \"&:active\": {\n      boxShadow: theme.customShadows.widgetWide,\n    },\n  },\n  buttonContainer: {\n    padding: 5,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: 'max-content',\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: 'flex-end',\n    padding: \"5px 0 5px 0\"\n  }\n}));\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\nimport { Print } from \"@material-ui/icons\";\n\nexport default function PageTitle(props) {\n  var classes = useStyles();\n\n  const iconVar = [];\n  iconVar[\"Add New\"] = <AddIcon />\n  iconVar[\"Add Income\"] = <AddIcon />\n  iconVar[\"Add Expense\"] = <AddIcon />\n  iconVar[\"Print\"] = <Print />\n  iconVar[\"Import\"] = <CloudUploadIcon />\n  iconVar[\"Export\"] = <CloudDownloadIcon />\n\n  let buttonCount = 1;\n  let lgSpan = [0];\n  let mdSpan = [0];\n  let smSpan = [0];\n  if (props.button) {\n    buttonCount = props.button.length;\n    lgSpan = [2, 4, 4, 6]\n    mdSpan = [4, 6, 6, 8]\n    smSpan = [4, 4, 8, 12]\n  }\n\n  const buttonHandler = (e, item, category) => {\n    console.log(e, item, category);\n    switch (category) {\n      case 'admin':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/admin/add\");\n        }\n        break;\n      case 'user':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/user/add\");\n        }\n        break;\n      case 'company':\n        if (item === 'Add New') {\n          props.history.push(\"/app/company/add\");\n        }\n        break;\n      case 'client':\n        if (item === 'Add New') {\n          props.history.push(\"/app/client/add\");\n        }\n        break;\n      case 'sales':\n        if (item === 'Add New') {\n          props.history.push(\"/app/sales/add\");\n        }\n        break;\n      case 'salesview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesview/add\");\n        }\n        break;\n      case 'clientview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/clientview/add\");\n        }\n        break;\n      case 'salesorder_item':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/item/add\");\n        }\n        break;\n      case 'salesorder_discount':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/discount/add\");\n        }\n        break;\n      case 'salesorder_promotion':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/promotion/add\");\n        }\n        break;\n      case 'salesorder_coupon':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/coupon/add\");\n        }\n        break;\n      case 'category':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/group/add\");\n        }\n        break;\n      case 'item_category':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/itemcategory/add\");\n        }\n        break;\n      default:\n        console.log();\n    }\n  }\n\n  return (\n    <div className={classes.pageTitleContainer}>\n      <Grid container spacing={1} >\n        <Grid item\n          lg={12 - lgSpan[buttonCount - 1]}\n          md={12 - mdSpan[buttonCount - 1]}\n          sm={smSpan[buttonCount - 1] === 12 ? 12 : 12 - smSpan[buttonCount - 1]}\n          xs={12}>\n          <Typography className={classes.typo} variant=\"h2\" size=\"sm\" color=\"myprimary\" weight=\"bold\">\n            {props.title}\n          </Typography>\n        </Grid>\n        {props.button && (\n          <Grid item lg={lgSpan[buttonCount - 1]} md={mdSpan[buttonCount - 1]} sm={smSpan[buttonCount - 1]} xs={12}>\n            <Grid container className={classes.buttonGroup}>\n              {\n                props.button.length > 0 && props.button.map((item, key) => (\n                  <Grid key={key} item className={classes.buttonContainer} lg={12 / buttonCount} md={12 / buttonCount} sm={12 / buttonCount} xs={12}>\n                    <Button\n                      variant={!item.includes(\"Add\") ? \"outlined\" : \"contained\"}\n                      classes={{ root: classes.button }}\n                      size=\"large\"\n                      color=\"primary\"\n                      startIcon={iconVar[item]}\n                      onClick={(e) => buttonHandler(e, item, props.category)}\n                    >\n                      {item}\n                    </Button>\n                  </Grid>\n                ))\n              }\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  status: {\n    width: 50,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 50,\n    fontSize: 10,\n    color: \"#FFF\"\n  },\n  draft: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paid: {\n    backgroundColor: theme.palette.success.main\n  },\n  pending: {\n    backgroundColor: theme.palette.secondary.main\n  },\n\n}));\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nexport default function Status({ color = \"primary\", ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classNames(classes.status, {[classes.draft]: props.status === 'yes',[classes.paid]: props.status === 'no'}, )}\n    >\n        {props.status.toUpperCase()}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport loadingImage from '../../assets/images/loading.gif';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: '#fff',\r\n    backgroundColor: '#ffffff44',\r\n  },\r\n}));\r\n\r\nexport default function BackdropLoading(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={props.open} onClick={handleClose}>\r\n        <img src={loadingImage} alt=\"Loading ...\"/>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","export const FETCH_ADMIN_REQUEST = 'FETCH_ADMIN_REQUEST';\r\nexport const FETCH_ADMIN_SUCCESS = 'FETCH_ADMIN_SUCCESS';\r\nexport const FETCH_ADMIN_ERROR = 'FETCH_ADMIN_ERROR';","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';","export const FETCH_USERVIEW_REQUEST = 'FETCH_USERVIEW_REQUEST';\r\nexport const FETCH_USERVIEW_SUCCESS = 'FETCH_USERVIEW_SUCCESS';\r\nexport const FETCH_USERVIEW_ERROR = 'FETCH_USERVIEW_ERROR';","export const FETCH_CLIENT_REQUEST = 'FETCH_CLIENT_REQUEST';\r\nexport const FETCH_CLIENT_SUCCESS = 'FETCH_CLIENT_SUCCESS';\r\nexport const FETCH_CLIENT_ERROR = 'FETCH_CLIENT_ERROR';","export const FETCH_CLIENTVIEW_REQUEST = 'FETCH_CLIENTVIEW_REQUEST';\r\nexport const FETCH_CLIENTVIEW_SUCCESS = 'FETCH_CLIENTVIEW_SUCCESS';\r\nexport const FETCH_CLIENTVIEW_ERROR = 'FETCH_CLIENTVIEW_ERROR';","export const FETCH_COMPANY_REQUEST = 'FETCH_COMPANY_REQUEST';\r\nexport const FETCH_COMPANY_SUCCESS = 'FETCH_COMPANY_SUCCESS';\r\nexport const FETCH_COMPANY_ERROR = 'FETCH_COMPANY_ERROR';","export const FETCH_SCHEDULE_REQUEST = 'FETCH_SCHEDULE_REQUEST';\r\nexport const FETCH_SCHEDULE_SUCCESS = 'FETCH_SCHEDULE_SUCCESS';\r\nexport const FETCH_SCHEDULE_ERROR = 'FETCH_SCHEDULE_ERROR';","export const FETCH_SCHEDULEVIEW_REQUEST = 'FETCH_SCHEDULEVIEW_REQUEST';\r\nexport const FETCH_SCHEDULEVIEW_SUCCESS = 'FETCH_SCHEDULEVIEW_SUCCESS';\r\nexport const FETCH_SCHEDULEVIEW_ERROR = 'FETCH_SCHEDULEVIEW_ERROR';","export const FETCH_SALESCLIENT_REQUEST = 'FETCH_SALESCLIENT_REQUEST';\r\nexport const FETCH_SALESCLIENT_SUCCESS = 'FETCH_SALESCLIENT_SUCCESS';\r\nexport const FETCH_SALESCLIENT_ERROR = 'FETCH_SALESCLIENT_ERROR';","export const FETCH_SALESCLIENTVIEW_REQUEST = 'FETCH_SALESCLIENTVIEW_REQUEST';\r\nexport const FETCH_SALESCLIENTVIEW_SUCCESS = 'FETCH_SALESCLIENTVIEW_SUCCESS';\r\nexport const FETCH_SALESCLIENTVIEW_ERROR = 'FETCH_SALESCLIENTVIEW_ERROR';","export const FETCH_SALESREVIEW_REQUEST = 'FETCH_SALESREVIEW_REQUEST';\r\nexport const FETCH_SALESREVIEW_SUCCESS = 'FETCH_SALESREVIEW_SUCCESS';\r\nexport const FETCH_SALESREVIEW_ERROR = 'FETCH_SALESREVIEW_ERROR';","export const FETCH_SALESHISTORY_REQUEST = 'FETCH_SALESHISTORY_REQUEST';\r\nexport const FETCH_SALESHISTORY_SUCCESS = 'FETCH_SALESHISTORY_SUCCESS';\r\nexport const FETCH_SALESHISTORY_ERROR = 'FETCH_SALESHISTORY_ERROR';","export const FETCH_SALESITEM_REQUEST = 'FETCH_SALESITEM_REQUEST';\r\nexport const FETCH_SALESITEM_SUCCESS = 'FETCH_SALESITEM_SUCCESS';\r\nexport const FETCH_SALESITEM_ERROR = 'FETCH_SALESITEM_ERROR';","export const FETCH_DISCOUNT_REQUEST = 'FETCH_DISCOUNT_REQUEST';\r\nexport const FETCH_DISCOUNT_SUCCESS = 'FETCH_DISCOUNT_SUCCESS';\r\nexport const FETCH_DISCOUNT_ERROR = 'FETCH_DISCOUNT_ERROR';","export const FETCH_PROMOTION_REQUEST = 'FETCH_PROMOTION_REQUEST';\r\nexport const FETCH_PROMOTION_SUCCESS = 'FETCH_PROMOTION_SUCCESS';\r\nexport const FETCH_PROMOTION_ERROR = 'FETCH_PROMOTION_ERROR';","export const FETCH_COUPON_REQUEST = 'FETCH_COUPON_REQUEST';\r\nexport const FETCH_COUPON_SUCCESS = 'FETCH_COUPON_SUCCESS';\r\nexport const FETCH_COUPON_ERROR = 'FETCH_COUPON_ERROR';","export const FETCH_GROUP_REQUEST = 'FETCH_GROUP_REQUEST';\r\nexport const FETCH_GROUP_SUCCESS = 'FETCH_GROUP_SUCCESS';\r\nexport const FETCH_GROUP_ERROR = 'FETCH_GROUP_ERROR';","// export const SERVER_URL = \"http://localhost:5000/\";\r\nexport const SERVER_URL = \"http://admin-test.asile.id:5000/\";\r\nexport const GOOGLE_MAP_API_KEY = \"AIzaSyDJe5pWyxzTkHoBFRdwJ1-6UcZ_DJZZ2dQ\"","import { fetchAdminRequest, fetchAdminSuccess, fetchAdminError } from \"../../redux/actions/AdminAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import AdminReducer from \"../../redux/reducers/AdminReducer\";\r\n\r\nfunction fetchAdmins() {\r\n    return dispatch => {\r\n        dispatch(fetchAdminRequest());\r\n        const body = { isAdmin: 1 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchAdminSuccess(res));\r\n                console.log(\"Get Admin===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchAdminError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchAdmins;","import {\r\n  FETCH_ADMIN_REQUEST,\r\n  FETCH_ADMIN_SUCCESS,\r\n  FETCH_ADMIN_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchAdminRequest() {\r\n    return {\r\n        type: FETCH_ADMIN_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchAdminSuccess(admin) {\r\n  console.log(\"action===>\", admin)\r\n    return {\r\n        type: FETCH_ADMIN_SUCCESS,\r\n        admin: admin\r\n    }\r\n}\r\n\r\nexport function fetchAdminError(error) {\r\n    return {\r\n        type: FETCH_ADMIN_ERROR,\r\n        error: error\r\n    }\r\n}","import axios from \"axios\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nexport const loginApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}login`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            console.log(\"login response ===> \", res);\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}\r\n\r\nexport const signUpApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}signup`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}","import React from \"react\";\nimport { loginApi, signUpApi } from \"../services/auth/Auth\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\nvar adminID = 0;\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return { ...state, loading: true, isAuthenticated: true };\n    case \"LOGIN_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: true, adminID: adminID };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"LOGIN_FAILURE\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"SIGNUP_REQUEST\":\n      return { ...state, loading: true, isSignup: true };\n    case \"SIGNUP_SUCCESS\":\n      return { ...state, loading: false, isSignup: state.isSignup };\n    case \"SIGNUP_FAILURE\":\n      return { ...state, loading: false, isSignup: 0 };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n    adminID: localStorage.getItem(\"id_token\")\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signUp, signOut };\n\n// ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'LOGIN_REQUEST', history: history });\n\n  // auth api\n  loginApi({ email: login, password: password }).then(res => {\n    console.log(\"Login=====> \", res)\n    if (res.data.user_id == 0 || res.data.user_id == undefined) {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login');\n    } else {\n      let check_id = res.data.isSuperAdmin;\n      if (check_id == 1) {\n        localStorage.setItem('id_token', 1)\n        localStorage.setItem('user_id', res.data.user_id)\n        localStorage.setItem('full_name', res.data.full_name)\n        adminID = 1\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS', token: res.data.rememberToken })\n\n        history.push('/app')\n      } else if (check_id == 0) {\n        localStorage.setItem('id_token', 2)\n        localStorage.setItem('company_id', res.data.company_id)\n        localStorage.setItem('user_id', res.data.user_id)\n        localStorage.setItem('full_name', res.data.full_name)\n        localStorage.setItem('allow_so', res.data.allow_so)\n        adminID = 2\n        setError(null)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS' })\n\n        history.push('/app')\n      } else {\n        history.push('/login');\n      }\n    }\n  }).catch(err => {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login')\n      setError(err);\n      setIsLoading(false);\n  })\n\n}\n\nfunction signUp(dispatch, full_name, password, email, phone_number, company_id, isAdmin, isActive, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'SIGNUP_REQUEST', history: history });\n\n  // auth api\n  signUpApi({ full_name: full_name, password: password, email: email, phone_number: phone_number, company_id: company_id, isAdmin: isAdmin, isActive: isActive }).then(res => {\n    if (res.data.user_id != null) {\n      setError(\"This user is already exist!\\n Please use another email.\")\n      history.push('/login');\n    } else if (res.data == null) {\n      setError(\"The company id is not exist.\")\n      history.push('/login');\n    } else {\n      setTimeout(() => {\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'SIGNUP_SUCCESS' })\n        history.push('/success')\n      }, 2000);\n    }\n  }).catch(err => {\n    dispatch({ type: \"SIGNUP_FAILURE\" });\n    history.push('/login')\n    setError(err);\n    setIsLoading(false);\n  })\n\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchAdmins from \"../../../services/admins/AdminService\";\nimport { useUserState } from \"../../../context/UserContext\";\nimport { Edit } from \"@material-ui/icons\";\nimport { toast} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction AdminPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const adminData = useSelector(state => state.admin);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    props.fetchAdmins();// call backend\n    console.log(\"Admin Data === > \", adminData);\n    setDataSource(adminData.admin);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        }\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"sales_target\",\n      label: \"Sales Target\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"allow_so\",\n      label: \"Allow Sales Order\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  console.log(\"Edit Event===> \", value)\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  //Edit admin\n  const actionEdit = (e, i) => {\n    history.push(\"/app/usermanage/admin/\" + i + \"/edit\");\n\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = adminData.admin[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Administrators\" button={[\"Add New\"]} data={dataSource} category=\"admin\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Administrators\"}\n              // data={dataSource}\n              data={adminData.admin}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchAdmins: fetchAdmins\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  menuItems = [],\n  header,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper}>\n      <Paper className={classes.paper} classes={{ root: classes.widgetRoot }}>\n        <div className={classes.widgetHeader}>\n          {header ? (\n            header\n          ) : (\n              <React.Fragment>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                  {title}\n                </Typography>\n                {!disableWidgetMenu && (\n                  <IconButton\n                    color=\"primary\"\n                    classes={{ root: classes.moreButton }}\n                    aria-owns=\"widget-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={() => setMoreMenuOpen(true)}\n                    buttonRef={setMoreButtonRef}\n                  >\n                    <MoreIcon />\n                  </IconButton>\n                )}\n              </React.Fragment>\n            )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        {\n          menuItems.map((menu, index) => (\n            <MenuItem key={index}>\n              <Typography>{menu}</Typography>\n            </MenuItem>\n          ))\n        }\n        {/* <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem> */}\n      </Menu>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n    /**\r\n     * EditInvoice.js\r\n     */\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formContainer: {\r\n      padding: \"0 15px 0 15px\"\r\n    },\r\n    addButton: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    /**\r\n     * Custom Combobox\r\n     */\r\n    comboContainer: {\r\n      marginLeft: theme.spacing(1),\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    addIcon: {\r\n      marginLeft: \"5px\"\r\n    },\r\n    autoRoot: {\r\n      marginTop: \"-8px\",\r\n      marginBottom: 0,\r\n    },\r\n    //Custom Combobox End\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomDatePicker( props ) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <DatePicker className={classes.formControl}\r\n            required\r\n            variant=\"inline\"\r\n            animateYearScrolling\r\n            autoOk\r\n            // views\r\n            clearable='true'\r\n            label={props.title}\r\n            value={props.selectedDate}\r\n            onChange={(e) => props.handleChange(e)}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { TextField, FormControl } from \"@material-ui/core\";\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomInput(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <TextField\r\n                // error\r\n                multiline={props.multiline}\r\n                rows={4}\r\n                required\r\n                label={props.title}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n                value={props.value}\r\n                // helperText=\"Incorrect entry.\"\r\n                onChange={(e) => props.handleChange(e)}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { FormControl, InputLabel, Select, MenuItem, Button, Divider, TextField, Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n/**\r\n * \r\n * @param {\r\n * \r\n * require * value * items\r\n * handleChange, addItem\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomCombobox({ required = false, ...props }) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    const defaultProps = {\r\n        options: props.items,\r\n        getOptionLabel: (option) => option,\r\n    };\r\n    return (\r\n        <Grid container className={classes.comboContainer}>\r\n            <Grid item md={props.addbtn ? 10 : 12}>\r\n                <Autocomplete\r\n                    classes={{root: classes.autoRoot}}\r\n                    {...defaultProps}\r\n                    id={props.name}\r\n                    debug={false}\r\n                    multiple={false}\r\n                    openOnFocus={true}\r\n                    value={props.value}\r\n                    renderOption={(option) => option}\r\n                    onChange={(e, value) => { console.log(e, value); props.handleChange(value) }}\r\n                    renderInput={(params) => <TextField {...params} required={props.req} label={props.name} margin=\"normal\" />}\r\n                />\r\n            </Grid>\r\n            {props.addbtn ? <Grid item md={2}>\r\n                <Tooltip title=\"Add Item\">\r\n                    <IconButton className={classes.addIcon}>\r\n                        <AddIcon></AddIcon>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n                : null}\r\n        </Grid>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  notificationContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  notificationContained: {\n    borderRadius: 45,\n    height: 45,\n    boxShadow: theme.customShadows.widgetDark,\n  },\n  notificationContainedShadowless: {\n    boxShadow: \"none\",\n  },\n  notificationIconContainer: {\n    minWidth: 45,\n    height: 45,\n    borderRadius: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 24,\n  },\n  notificationIconContainerContained: {\n    fontSize: 18,\n    color: \"#FFFFFF80\",\n  },\n  notificationIconContainerRounded: {\n    marginRight: theme.spacing(2),\n  },\n  containedTypography: {\n    color: \"white\",\n  },\n  messageContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexGrow: 1,\n  },\n  extraButton: {\n    color: \"white\",\n    \"&:hover, &:focus\": {\n      background: \"transparent\",\n    },\n  },\n}));\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n","import { fetchCompanyRequest, fetchCompanySuccess, fetchCompanyError } from \"../../redux/actions/CompanyAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchCompany() {\r\n    console.log('fetching Company ...')\r\n    return dispatch => {\r\n        dispatch(fetchCompanyRequest());\r\n        \r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getCompany`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchCompanySuccess(res));\r\n                console.log(\"Get Company===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCompanyError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchCompany;","import {\r\n    FETCH_COMPANY_REQUEST,\r\n    FETCH_COMPANY_SUCCESS,\r\n    FETCH_COMPANY_ERROR\r\n  } from '../constants'\r\n   \r\n  export function fetchCompanyRequest() {\r\n      return {\r\n          type: FETCH_COMPANY_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanySuccess(company) {\r\n      return {\r\n          type: FETCH_COMPANY_SUCCESS,\r\n          company: company\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanyError(error) {\r\n      return {\r\n          type: FETCH_COMPANY_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nfunction EditAdmin(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const adminData = useSelector(state => state.admin);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    company_entity_name: '',\n    isActive: false,\n    allow_so: false,\n    sales_target: 0,\n  })\n\n  const update_id = props.match.params.admin\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n    getAdminInfo(update_id)\n\n  }, [])\n\n  const getAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        getCompanyNamefromCompanyID(data[0].company_id.split(', '))\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          companyIDList: data[0].company_id.split(', '),\n          company_entity_name: data[0].company_entity_name,\n          isActive: data[0].isActive,\n          sales_target: data[0].sales_target,\n          allow_so: data[0].allow_so\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.companyIDList.join(', '),\n        isAdmin: true,\n        isActive: state.isActive,\n        sales_target: state.sales_target,\n        allow_so: state.allow_so\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n        \n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.company)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_entity_name);\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n    if (object[0] != null) {\n      return object[0].company_id.toString()\n      // setState({\n      //   ...state,\n      //   company_id: object[0].company_id.toString()\n      // })\n    }\n\n  }\n\n  const getCompanyNamefromCompanyID = (companyIDList) => {\n    const value = [];\n    for (let i = 0, l = companyIDList.length; i < l; i += 1) {\n      let object = companyData.company.filter(item => item.company_id.toString() == companyIDList[i])\n      if (object[0] != null) {\n        value.push(object[0].company_entity_name)\n        // setState({\n        //   ...state,\n        //   company_id: object[0].company_id.toString()\n        // })\n      }\n      // value.push((companyIDList[i]))\n      setCompanyList(value)\n    }\n\n\n  }\n\n  const [companyList, setCompanyList] = React.useState([]);\n\n  const handleCompanyChange = (event) => {\n    console.log('handleCompanyChange==>', event.target.value)\n    setCompanyList(event.target.value);\n    const options = event.target.value;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      value.push(setCompanyIdfromCompanyName(options[i]))\n    }\n    // console.log('handleCompanyChange==>', value)\n    setState(prevState => ({\n      ...prevState,\n      companyIDList: value\n    }))\n  };\n  //input fields event\n  const handleChange = (e, field) => {\n    if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else if (e.target.name == 'allow_so') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSaveandBack = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.companyIDList == []) {\n      notify(\"Please enter company name.\")\n      return\n    } else {\n      updateAdminInfo(update_id)\n      // history.push(\"/app/usermanage/admin\");\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/admin\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit Admin\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                {/* <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                  handleChange={(e) => handleChange(e, 'company_entity_name')} /> */}\n                <FormControl className={classes.formControl}>\n                  <InputLabel id=\"demo-mutiple-checkbox-label\">Companies</InputLabel>\n                  <Select\n                    labelId=\"demo-mutiple-checkbox-label\"\n                    id=\"demo-mutiple-checkbox\"\n                    multiple\n                    value={companyList}\n                    onChange={handleCompanyChange}\n                    input={<Input />}\n                    renderValue={(selected) => selected.join(', ')}\n                    MenuProps={MenuProps}\n                  >\n                    {companies.map((name) => (\n                      <MenuItem key={name} value={name}>\n                        <Checkbox checked={companyList.indexOf(name) > -1} />\n                        <ListItemText primary={name} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Sales Target\" value={state.sales_target}\n                  handleChange={(e) => handleChange(e, 'sales_target')} />\n              </Grid>\n              \n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Allow Sales Order</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.allow_so} onChange={handleChange} name=\"allow_so\" />}\n                    label=\"Allow\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                                        </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSaveandBack()}\n                    >\n                      Save\n                                        </Button>\n                  </Grid>\n\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditAdmin);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddAdmin(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        companyIDList: [],\r\n        company_entity_name: \"\",\r\n        sales_target: 0,\r\n        allow_so: 0\r\n    })\r\n    const [companyList, setCompanyList] = React.useState([]);\r\n\r\n    const handleCompanyChange = (event) => {\r\n\r\n        setCompanyList(event.target.value);\r\n        const options = event.target.value;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            value.push(setCompanyIdfromCompanyName(options[i]))\r\n        }\r\n        console.log('handleCompanyChange==>', value)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            companyIDList: value\r\n        }))\r\n    };\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            return object[0].company_id.toString()\r\n        }\r\n\r\n    }\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        if (e.target.name == 'allow_so') {\r\n            setState({ ...state, [e.target.name]: e.target.checked });\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.companyIDList == []) {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.companyIDList.join(', '),\r\n                    isAdmin: true,\r\n                    isActive: true,\r\n                    sales_target: state.sales_target,\r\n                    allow_so: state.allow_so\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n            history.push(\"/app/usermanage/admin\");\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.companyIDList == []) {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.companyIDList.join(', '),\r\n                    isAdmin: true,\r\n                    isActive: true,\r\n                    sales_target: state.sales_target,\r\n                    allow_so: state.allow_so\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n            setState(state => ({\r\n                ...state,\r\n                full_name: '',\r\n                password: \"\",\r\n                email: \"\",\r\n                phone_number: '',\r\n                companyIDList: [],\r\n                allow_so: 0,\r\n                sales_target: 0\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/admin\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Admin\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\" maxLength={10}\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                {/* <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} /> */}\r\n                                {/* <CustomInput title=\"Company ID\" value={state.company_id} handleChange={(e) => handleChange(e, 'company_id')} /> */}\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Companies</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-mutiple-checkbox-label\"\r\n                                        id=\"demo-mutiple-checkbox\"\r\n                                        multiple\r\n                                        value={companyList}\r\n                                        onChange={handleCompanyChange}\r\n                                        input={<Input />}\r\n                                        renderValue={(selected) => selected.join(', ')}\r\n                                        MenuProps={MenuProps}\r\n                                    >\r\n                                        {companies.map((name) => (\r\n                                            <MenuItem key={name} value={name}>\r\n                                                <Checkbox checked={companyList.indexOf(name) > -1} />\r\n                                                <ListItemText primary={name} />\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Sales Target\" value={state.sales_target}\r\n                                    handleChange={(e) => handleChange(e, 'sales_target')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Typography>Allow Sales Order</Typography>\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\r\n                                    <FormControlLabel\r\n                                        control={<Switch checked={state.allow_so} onChange={handleChange} name=\"allow_so\" />}\r\n                                        label=\"Allow\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddAdmin);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserRequest, fetchUserSuccess, fetchUserError } from \"../../redux/actions/UserAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUsers() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserRequest());\r\n        const body = { isAdmin: 0 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchUserSuccess(res));\r\n                console.log(\"Get User===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchUserError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchUsers;","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchUserRequest() {\r\n    return {\r\n        type: FETCH_USER_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserSuccess(user) {\r\n  console.log(\"User Action +++>\", user)\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        user: user\r\n    }\r\n}\r\n\r\nexport function fetchUserError(error) {\r\n    return {\r\n        type: FETCH_USER_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel,  Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUsers from \"../../../services/users/UserService\";\nimport { useUserState } from \"../../../context/UserContext\";\n\nfunction UserPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userData = useSelector(state => state.user);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUsers();\n    console.log(userData, props.user, user);\n    setDataSource(userData.data);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                  onClick={(e) => {\n                    actionEdit(e, value)\n                  }}\n                >\n                  <Edit style={{fontSize:'18'}}/>\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  // const actionClick = (event, i) => {\n  //   setSelectedRowIndex(i);\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const actionClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  //Edit user\n  const actionEdit = (e, i) => {\n    setSelectedRowIndex(i)\n    console.log(\"=================>\",selectedRowIndex, i);\n    history.push(\"/app/usermanage/user/\" + i + \"/edit\");\n  }\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n      \n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = userData.user[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n   \n  };\n\n  return (\n    <>\n      <PageTitle title=\"Users\" button={[\"Add New\"]} data={dataSource} category=\"user\" history={history}/>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Users\"}\n              data={userData.user}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open}/>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUsers: fetchUsers\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserPage);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditUser(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const userData = useSelector(state => state.user);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    password: \"\",\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    company_entity_name: '',\n    isActive: false\n  })\n\n  const update_id = props.match.params.user\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.data);\n    getUserInfo(update_id)\n\n  }, [])\n\n  const getUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          password: data[0].password,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          company_id: data[0].company_id.toString(),\n          company_entity_name: data[0].company_entity_name,\n          isActive: data[0].isActive\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.company_id,\n        isAdmin: false,\n        isActive: state.isActive,\n        sales_target: 0,\n        allow_so: 0\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.data)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_entity_name);\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n    if (object[0] != null) {\n      setState({\n        ...state,\n        company_id: object[0].company_id.toString()\n      })\n    }\n\n  }\n  //input fields event\n  const handleChange = (e, field) => {\n    let comboFields = ['company_entity_name'];\n    if (comboFields.includes(field)) {\n      setCompanyIdfromCompanyName(e)\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    } else if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSave = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.company_entity_name.length == null || state.company_entity_name == \"\") {\n      notify(\"Please enter company name.\")\n      return\n    } else {\n      updateUserInfo(update_id)\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/user\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit User\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                  handleChange={(e) => handleChange(e, 'company_entity_name')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSave()}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditUser);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddUser(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        company_id: \"\",\r\n        company_entity_name: \"\",\r\n        sales_target: 0,\r\n        allow_so: 0\r\n    })\r\n\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_entity_name == null || state.company_entity_name == \"\") {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    sales_target: 0,\r\n                    allow_so: 0,\r\n                    isAdmin: false,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            full_name: '',\r\n                            password: \"\",\r\n                            email: \"\",\r\n                            phone_number: '',\r\n                            company_id: \"\",\r\n                            company_entity_name: \"\"\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n    const onSaveandBack = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_entity_name == null || state.company_entity_name == \"\") {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    sales_target: 0,\r\n                    allow_so: 0,\r\n                    isAdmin: false,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            full_name: '',\r\n                            password: \"\",\r\n                            email: \"\",\r\n                            phone_number: '',\r\n                            company_id: \"\",\r\n                            company_entity_name: \"\"\r\n                        }))\r\n                        history.push(\"/app/usermanage/user\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/user\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New User\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\"\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddUser);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from \"@material-ui/icons\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction CompanysPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const companyData = useSelector(state => state.company);\n\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"company_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"time_limit_per_schedule\",\n      label: \"Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"late_policy\",\n      label: \"Late Policy\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"min_schedule_time\",\n      label: \"Min Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"max_schedule_time\",\n      label: \"Max Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"upload\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"company_info\",\n      label: \"Company Information\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          if (value != null) {\n            return (\n              <>\n                <ul>\n                  {\n                    value.split(', ').map((item, index) => {\n                      return (\n                        <li>\n                          <a key={index} href={`${SERVER_URL}pdf/${item}`} target=\"_blank\">{item}</a>\n                        </li>\n\n                      )\n                    })\n                  }\n                </ul>\n              </>\n            )\n          } else {\n            return <></>\n          }\n        }\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    console.log(\"====\", dataSource[i]);\n    history.push(\"/app/company/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = companyData.company[data.dataIndex].company_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            company_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteCompany`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Companies\" button={[\"Add New\"]} data={dataSource} category=\"company\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Companies\"}\n              data={companyData.company}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanysPage);\n","import axios from \"axios\";\r\nimport { SERVER_URL } from './common/config'\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://admin.asile.id:4000',\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n// export default axios.create({\r\n//   baseURL: 'http://localhost:4000',\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json\"\r\n//   }\r\n// });","import http from \"../../http_common\";\r\n\r\nclass UploadFilesService {\r\n  upload(file, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n\r\n    return http.post(\"/upload_pdf\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n    return http.get(\"/files\");\r\n  }\r\n}\r\n\r\nexport default new UploadFilesService();","import React, { Component } from \"react\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Box, Typography, Button, ListItem, withStyles } from '@material-ui/core';\r\nimport UploadService from \"../../services/upload_pdf/upload-files.service\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n        height: 15,\r\n        borderRadius: 5,\r\n    },\r\n    colorPrimary: {\r\n        backgroundColor: \"#EEEEEE\",\r\n    },\r\n    bar: {\r\n        borderRadius: 5,\r\n        backgroundColor: '#1a90ff',\r\n    },\r\n}))(LinearProgress);\r\n\r\nexport default class UploadFiles extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedFiles: undefined,\r\n            currentFile: undefined,\r\n            progress: 0,\r\n            message: \"\",\r\n            isError: false,\r\n            fileInfos: [],\r\n        };\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     UploadService.getFiles().then((response) => {\r\n    //         this.setState({\r\n    //             fileInfos: response.data,\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    selectFile(event) {\r\n        console.log('this=>', event.target.files)\r\n        this.setState({\r\n            selectedFiles: event.target.files,\r\n        });\r\n    }\r\n\r\n    upload() {\r\n        let fileNameList = []        \r\n        for (let index = 0; index < this.state.selectedFiles.length; index++) {\r\n            let currentFile = this.state.selectedFiles[index];\r\n            this.setState({\r\n                progress: 0,\r\n                currentFile: currentFile,\r\n            });\r\n\r\n            UploadService.upload(currentFile, (event) => {\r\n                this.setState({\r\n                    progress: Math.round((100 * event.loaded) / event.total),\r\n                });\r\n            })\r\n                .then((response) => {\r\n                    console.log('pop=>', response.data.fileName.split('/').pop().toString())\r\n                    fileNameList.push(response.data.fileName.split('/').pop().toString())\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        isError: false\r\n                    });\r\n                    // return UploadService.getFiles();\r\n                })\r\n                .then((files) => {\r\n                    this.setState({\r\n                        fileInfos: files.data,\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    this.setState({\r\n                        progress: 0,\r\n                        message: \"Could not upload the file!\",\r\n                        currentFile: undefined,\r\n                        isError: true\r\n                    });\r\n                });\r\n\r\n            this.setState({\r\n                selectedFiles: undefined,\r\n            });\r\n        }\r\n        // let currentFile = this.state.selectedFiles[0];\r\n        console.log('fileNameList=>', fileNameList)\r\n        \r\n        this.setState({\r\n            fileInfos: fileNameList\r\n        })\r\n        this.props.setFileList(fileNameList);\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            selectedFiles,\r\n            currentFile,\r\n            progress,\r\n            fileInfos,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"mg20\">\r\n                {currentFile && (\r\n                    <Box className=\"mb25\" display=\"flex\" alignItems=\"center\">\r\n                        <Box width=\"100%\" mr={1}>\r\n                            <BorderLinearProgress variant=\"determinate\" value={progress} />\r\n                        </Box>\r\n                        <Box minWidth={35}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">{`${progress}%`}</Typography>\r\n                        </Box>\r\n                    </Box>)\r\n                }\r\n\r\n                <label htmlFor=\"btn-upload\">\r\n                    <input\r\n                        id=\"btn-upload\"\r\n                        name=\"btn-upload\"\r\n                        style={{ display: 'none' }}\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={this.selectFile.bind(this)} />\r\n                    <Button\r\n                        className=\"btn-choose\"\r\n                        variant=\"outlined\"\r\n                        component=\"span\" >\r\n                        Choose Files\r\n                </Button>\r\n                </label>\r\n                {/* <div className=\"file-name\">\r\n                    {selectedFiles && selectedFiles.length > 0 ? {\r\n                        var nameList = []\r\n                        selectedFiles.map(file => {\r\n                            nameList.push(file.name)\r\n                        })\r\n                        return nameList.join(', ')\r\n                    } : null}\r\n                </div> */}\r\n                <Button\r\n                    className=\"btn-upload\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    disabled={!selectedFiles}\r\n                    onClick={this.upload.bind(this)}>\r\n                    Upload\r\n              </Button>\r\n{/* \r\n                <Typography variant=\"subtitle2\" className={`upload-message ${isError ? \"error\" : \"\"}`}>\r\n                    {message}\r\n                </Typography> */}\r\n\r\n                <Typography className=\"list-header\">\r\n                    List of Files\r\n                </Typography>\r\n                <ul className=\"list-group\">\r\n                    {fileInfos &&\r\n                        fileInfos.map((file, index) => (\r\n                            <ListItem\r\n                                divider\r\n                                key = {index}\r\n                                >\r\n                                {file}\r\n                            </ListItem>\r\n                        ))}\r\n                </ul>\r\n            </div >\r\n        );\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport UploadFiles from \"../../components/Upload/upload-files.component\";\r\nimport { SERVER_URL } from '../../common/config';\r\n// import LocationPicker from 'react-location-picker';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\n\r\nexport default function AddCompany(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n\r\n    // const [location, setLocation] = useState('');\r\n    // const [defaultPosition, setDefaultPosition] = useState({\r\n    //     lat: 0,\r\n    //     lng: 0\r\n    // })\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    // input form datas\r\n\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: '',\r\n        address: '',\r\n        phone_number: \"\",\r\n        time_limit_per_schedule: 30,\r\n        late_policy: 60,\r\n        min_schedule_time: 60,\r\n        max_schedule_time: 360,\r\n        notes: 1,\r\n        upload: 0,\r\n        company_info: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        // navigator.geolocation.getCurrentPosition(function (position) {\r\n        //     console.log(\"Latitude is :\", position.coords.latitude);\r\n        //     console.log(\"Longitude is :\", position.coords.longitude);\r\n        //     setDefaultPosition({\r\n        //         lat: position.coords.latitude,\r\n        //         lng: position.coords.longitude\r\n        //     })\r\n        // });\r\n    }, [])\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\r\n            setState({ ...state, [e.target.name]: e.target.checked });\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const addItem = (field) => {\r\n        console.log(field)\r\n    }\r\n\r\n    //date picker event\r\n    const handleDateChange = (date, field) => {\r\n        setState(prevState => ({\r\n            ...prevState, [field]: date\r\n        }))\r\n    };\r\n\r\n\r\n    // const handleLocationChange = ({ position, address, places }) => {\r\n\r\n    //     // Set new location\r\n    //     console.log(\"Address ====> \", address)\r\n    //     setLocation({\r\n    //         address: address\r\n    //     });\r\n    // }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter company entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter company owner name.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter company address.\")\r\n            return\r\n        } else if (state.min_schedule_time < 0) {\r\n            notify(\"Please enter valid minimum schedule time.\")\r\n            return\r\n        } else if (state.max_schedule_time < 0) {\r\n            notify(\"Please enter valid maximum schedule time.\")\r\n            return\r\n        } else if (state.min_schedule_time > state.max_schedule_time) {\r\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\r\n            return\r\n        } else if (state.time_limit_per_schedule < 0) {\r\n            notify(\"Please enter valid time limit.\")\r\n            return\r\n        } else if (state.late_policy < 0) {\r\n            notify(\"Please enter valid late policy.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    company_entity_name: state.entity_name,\r\n                    company_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    notes: state.notes,\r\n                    upload: state.upload,\r\n                    time_limit_per_schedule: state.time_limit_per_schedule,\r\n                    late_policy: state.late_policy,\r\n                    min_schedule_time: state.min_schedule_time,\r\n                    max_schedule_time: state.max_schedule_time,\r\n                    company_info: state.company_info.join(', ')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addCompany`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.company_id != null) {\r\n                        notify(\"This company is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState({\r\n                            id: '',\r\n                            entity_name: '',\r\n                            owner_name: '',\r\n                            address: '',\r\n                            phone_number: \"\",\r\n                            time_limit_per_schedule: 30,\r\n                            late_policy: 60,\r\n                            min_schedule_time: 60,\r\n                            max_schedule_time: 360,\r\n                            notes: 1,\r\n                            upload: 0,\r\n                            company_info: []\r\n                        })\r\n                        window.location.reload()\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter company entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter company owner name.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter company address.\")\r\n            return\r\n        } else if (state.min_schedule_time < 0) {\r\n            notify(\"Please enter valid minimum schedule time.\")\r\n            return\r\n        } else if (state.max_schedule_time < 0) {\r\n            notify(\"Please enter valid maximum schedule time.\")\r\n            return\r\n        } else if (state.min_schedule_time > state.max_schedule_time) {\r\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\r\n            return\r\n        } else if (state.time_limit_per_schedule < 0) {\r\n            notify(\"Please enter valid time limit.\")\r\n            return\r\n        } else if (state.late_policy < 0) {\r\n            notify(\"Please enter valid late policy.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    company_entity_name: state.entity_name,\r\n                    company_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    notes: state.notes,\r\n                    upload: state.upload,\r\n                    time_limit_per_schedule: state.time_limit_per_schedule,\r\n                    late_policy: state.late_policy,\r\n                    min_schedule_time: state.min_schedule_time,\r\n                    max_schedule_time: state.max_schedule_time,\r\n                    company_info: state.company_info.join(', ')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addCompany`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.company_id != null) {\r\n                        notify(\"This company is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState({\r\n                            id: '',\r\n                            entity_name: '',\r\n                            owner_name: '',\r\n                            address: '',\r\n                            phone_number: \"\",\r\n                            time_limit_per_schedule: 30,\r\n                            late_policy: 60,\r\n                            min_schedule_time: 60,\r\n                            max_schedule_time: 360,\r\n                            notes: 1,\r\n                            upload: 0,\r\n                            company_info: []\r\n                        })\r\n                        history.push(\"/app/company\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/company\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_schedule_time')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\r\n                                    label=\"Notes\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\r\n                                    label=\"Upload\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Company Information</Typography>\r\n                                </Grid>\r\n                                <UploadFiles setFileList={(fileNameList) => {\r\n                                    setState((state) => ({\r\n                                        ...state,\r\n                                        company_info: fileNameList\r\n                                    }))\r\n\r\n                                }} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\nimport UploadFiles from \"../../components/Upload/upload-files.component\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditCompany(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        phone_number: \"\",\n        time_limit_per_schedule: 0,\n        late_policy: 0,\n        min_schedule_time: 0,\n        max_schedule_time: 0,\n        notes: 0,\n        upload: 0,\n        company_info: [],\n        company_infoList: ''\n    })\n    const update_id = props.match.params.company\n    useEffect(() => {\n        getCompanyInfo(update_id)\n    }, [])\n\n\n    const getCompanyInfo = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getCompanyById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.company_entity_name,\n                    owner_name: data.company_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    time_limit_per_schedule: data.time_limit_per_schedule,\n                    late_policy: data.late_policy,\n                    min_schedule_time: data.min_schedule_time,\n                    max_schedule_time: data.max_schedule_time,\n                    notes: data.notes,\n                    upload: data.upload,\n                    company_infoList: data.company_info\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    const updateCompanyInfo = (company_id) => {\n        \n        console.log(\"========\",state.company_info )\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id,\n                company_entity_name: state.entity_name,\n                company_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                notes: state.notes,\n                upload: state.upload,\n                time_limit_per_schedule: state.time_limit_per_schedule,\n                late_policy: state.late_policy,\n                min_schedule_time: state.min_schedule_time,\n                max_schedule_time: state.max_schedule_time,\n                company_info: state.company_info.length == 0 ? state.company_infoList : state.company_info.join(', ') \n            })\n        };\n        fetch(`${SERVER_URL}updateCompany`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    //input fields event\n    const handleChange = (e, field) => {\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const addItem = (field) => {\n        console.log(field)\n    }\n\n    //date picker event\n    const handleDateChange = (date, field) => {\n        setState(prevState => ({\n            ...prevState, [field]: date\n        }))\n    };\n\n    //file picker event\n    const handleCapture = ({ target }) => {\n        const fileReader = new FileReader();\n        // const name = target.accept.includes('image') ? 'images' : 'videos';\n        setState((prevState) => ({\n            ...prevState, file: target.files[0]\n        }));\n\n        /* fileReader.readAsDataURL(target.files[0]);\n        fileReader.onload = (e) => {\n          setState((prevState) => ({\n            ...prevState, file: e.target.result\n          }));\n        }; */\n    };\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter company owner name.\")\n            return\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.min_schedule_time < 0) {\n            notify(\"Please enter valid minimum schedule time.\")\n            return\n        } else if (state.max_schedule_time < 0) {\n            notify(\"Please enter valid maximum schedule time.\")\n            return\n        } else if (state.min_schedule_time > state.max_schedule_time) {\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\n            return\n        } else if (state.time_limit_per_schedule < 0) {\n            notify(\"Please enter valid time limit.\")\n            return\n        } else if (state.late_policy < 0) {\n            notify(\"Please enter valid late policy.\")\n            return\n        } else {\n            updateCompanyInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/company\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_schedule_time')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\n                                    label=\"Notes\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\n                                    label=\"Upload\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Company Information ( If you want to change, please upload PDFs and save. )</Typography>\n                                </Grid>\n                                <UploadFiles setFileList={(fileNameList) => {\n                                    console.log(\"edit===> \", fileNameList)\n                                    setState((state) => ({\n                                        ...state,\n                                        company_info: fileNameList\n                                    }))\n\n                                }} />\n                            </Grid>\n\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditCompany);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { fetchClientRequest, fetchClientSuccess, fetchClientError } from \"../../redux/actions/ClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ClientReducer from \"../../redux/reducers/ClientReducer\";\r\n\r\nfunction fetchClient() {\r\n    return dispatch => {\r\n        dispatch(fetchClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClient;","import {\r\n    FETCH_CLIENT_REQUEST,\r\n    FETCH_CLIENT_SUCCESS,\r\n    FETCH_CLIENT_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchClientRequest() {\r\n      return {\r\n          type: FETCH_CLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientSuccess(client) {\r\n    console.log(\"action===>\", client)\r\n      return {\r\n          type: FETCH_CLIENT_SUCCESS,\r\n          client: client\r\n      }\r\n  }\r\n  \r\n  export function fetchClientError(error) {\r\n      return {\r\n          type: FETCH_CLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Typography, Button } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport Status from \"../../components/Status/Status\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientsPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientData = useSelector(state => state.client);\n\n  useEffect(() => {\n    console.log(clientData)\n    props.fetchClient()\n    setDataSource(clientData.client);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"custom_field\",\n      label: \"Custom Field\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"approved\",\n      label: \"Approved\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value == 1 ? \"yes\" : \"no\"} />\n          );\n        }\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Created by\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/client/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientData.client[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        client_entity_name: row[0],\n        address: row[1],\n        phone_number: row[3],\n        location: row[2],\n        company_id: row[4],\n        custom_field: row[5],\n        approved: row[6],\n        created_by: row[7]\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addClient`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"client\" history={history} />\n      <Grid container spacing={4}>\n\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Clients\"}\n              data={clientData.client}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientsPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Typography, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\nimport { GOOGLE_MAP_API_KEY } from '../../common/config';\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(GOOGLE_MAP_API_KEY);\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        custom_field: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: '',\r\n        company_entity_name: '',\r\n        approved: '1',\r\n        created_by: localStorage.getItem('user_id'),\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_entity_name'];\r\n        if (field == \"address\") {\r\n            const { name, value } = e.target;\r\n            console.log(\"$$$$$$$$$\", value)\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                address: value\r\n            }))\r\n            Geocode.fromAddress(value).then(\r\n                response => {\r\n                    const { lat, lng } = response.results[0].geometry.location;\r\n                    console.log(lat, lng);\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        location: lat + ' ' + lng\r\n                    }))\r\n                },\r\n                error => {\r\n                    console.error(error);\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        location: ''\r\n                    }))\r\n                }\r\n            );\r\n        } else if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter custom field.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: state.approved,\r\n                    created_by: state.created_by\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                            company_id: '',\r\n                            company_entity_name: '',\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter custom field.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: state.approved,\r\n                    created_by: state.created_by\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                            company_id: '',\r\n                            company_entity_name: '',\r\n                        }))\r\n                        history.push(\"/app/client\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/client\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Custom Field\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\" maxLength={10}\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\nimport { GOOGLE_MAP_API_KEY } from '../../common/config';\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(GOOGLE_MAP_API_KEY);\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        custom_field: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: '',\n        company_entity_name: '',\n        approved: '0',\n        created_by: ''\n    })\n\n    const update_id = props.match.params.client\n    useEffect(() => {\n        props.fetchCompany();\n        setDataSource(companyData.company);\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log('response edit client', data)\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    custom_field: data.custom_field,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    company_id: data.company_id,\n                    company_entity_name: data.company_entity_name,\n                    location: data.location,\n                    approved: data.approved,\n                    created_by: data.created_by\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                custom_field: state.custom_field,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id,\n                approved: state.approved,\n                created_by: state.created_by\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    const objArray2Array = (original) => {\n        console.log('originall ====> ', original, companyData.company)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    tmp.push(item?.company_entity_name);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const companies = objArray2Array(companyData.company)\n\n\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n        if (object[0] != null) {\n            setState({\n                ...state,\n                company_id: object[0].company_id.toString()\n            })\n        }\n\n    }\n    //input fields event\n    const handleChange = (e, field) => {\n        let comboFields = ['company_entity_name'];\n        if (field == \"address\") {\n            const { name, value } = e.target;\n            console.log(\"$$$$$$$$$\", value)\n            setState(prevState => ({\n                ...prevState,\n                address: value\n            }))\n            Geocode.fromAddress(value).then(\n                response => {\n                    const { lat, lng } = response.results[0].geometry.location;\n                    console.log(lat, lng);\n                    setState(prevState => ({\n                        ...prevState,\n                        location: lat + ' ' + lng\n                    }))\n                },\n                error => {\n                    console.error(error);\n                    setState(prevState => ({\n                        ...prevState,\n                        location: ''\n                    }))\n                }\n            );\n        } else if (comboFields.includes(field)) {\n            setCompanyIdfromCompanyName(e)\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else if (e.target.name == \"approved\") {\n            console.log('approved====>', e.target.checked)\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter client entity name.\")\n            return\n        } else if (state.custom_field == null || state.custom_field == \"\") {\n            notify(\"Please enter custom field.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter client address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter client location.\")\n            return\n        } else if (state.phone_number.length < 7) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_entity_name.length == null || state.company_entity_name == \"\") {\n            notify(\"Please enter company name.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/client\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Custom Field(For example: Gender: Male, Age: 28)\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Approved</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={Number(state.approved)} onChange={handleChange} name=\"approved\" />}\n                                    label=\"Approved\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { FETCH_SALESCLIENT_REQUEST, FETCH_SALESCLIENT_SUCCESS, FETCH_SALESCLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    sales: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                sales: action.sales\r\n            }\r\n        case FETCH_SALESCLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchSalesClientRequest, fetchSalesClientSuccess, fetchSalesClientError } from \"../../redux/actions/SalesClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClient() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientSuccess(res));\r\n                console.log(\"Get SalesClient===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClient;","import {\r\n    FETCH_SALESCLIENT_REQUEST,\r\n    FETCH_SALESCLIENT_SUCCESS,\r\n    FETCH_SALESCLIENT_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesClientRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientSuccess(sales) {\r\n    console.log(\"action===>\", sales)\r\n      return {\r\n          type: FETCH_SALESCLIENT_SUCCESS,\r\n          sales: sales\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchSalesClient from \"../../services/sales/SalesClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesData = useSelector(state => state.sales);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    console.log(salesData)\n    props.fetchSalesClient()\n    setDataSource(salesData.sales);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/sales/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesData.sales[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const importCSV = (data) => {\n    console.log(data)\n\n    addWithCSV(data)\n\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        user_id: row[0],\n        client_id: row[1],\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addSalesClientWithCSV`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"sales\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Sales Clients\"}\n              // data={dataSource}\n              data={salesData.sales}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClient: fetchSalesClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport fetchUsers from \"../../services/users/UserService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.user);\n    const clientData = useSelector(state => state.client);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.sales\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: '',\n        clients: [],\n    })\n\n    useEffect(() => {\n        props.fetchUsers();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getClientsByCompanyId = (user_name) => {\n        let company_id = userData.user.filter(item => item.full_name == user_name)[0].company_id.toString()\n        console.log(\"======================>\", company_id)\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                // clientData.client = data\n                let temp = getClientNameList(data)\n                setState(prevState => ({\n                    ...prevState,\n                    client_name: '',\n                    clients: temp\n                }))\n\n            })\n            .catch(error => {\n                notify('Something went wrong!\\n' + error)\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.client)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    // const clients = getClientNameList(clientData.client)\n\n    // console.log(\"Client Data =====> \", clients.map(item => {\n    //     return item?.value\n    // }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.user)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.user)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n            getClientsByCompanyId(e)\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (state.clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: state.clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/sales\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={state.clients.map(item => {\n                                    return item?.value\n                                })} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUsers: fetchUsers,\n    fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\nimport { SERVER_URL } from '../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: '',\r\n        company_id: '',\r\n        clients: [],\r\n        users: [],\r\n        userIDList: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n    }, [])\r\n\r\n    const [userList, setUserList] = React.useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n            getUsersbyCompanyId(object[0].company_id.toString())\r\n            getClientsByCompanyId(object[0].company_id.toString())\r\n        }\r\n\r\n    }\r\n\r\n    const getClientsByCompanyId = (company_id) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                company_id: company_id\r\n            })\r\n        };\r\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                console.log(\"Response Data=============>\", data)\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                // clientData.client = data\r\n                let temp = getClientNameList(data)\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    clients: temp\r\n                }))\r\n\r\n            })\r\n            .catch(error => {\r\n                notify('Something went wrong!\\n' + error)\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    const getClientNameList = (original) => {\r\n        // console.log('originall ====> ', original, clientData.client)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getUserNameList = (original) => {\r\n        // console.log('originall ====> ', original, clientData.client)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getUsersbyCompanyId = (company_id) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                company_id: company_id\r\n            })\r\n        };\r\n        fetch(`${SERVER_URL}getUserById`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                console.log(\"Response Data=============>\", data)\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                // clientData.client = data\r\n                let temp = getUserNameList(data)\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    users: temp\r\n                }))\r\n\r\n            })\r\n            .catch(error => {\r\n                notify('Something went wrong!\\n' + error)\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    //input fields event\r\n    const handleCompanyChange = (e, field) => {\r\n\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                [field]: e,\r\n                client_name: ''\r\n            }))\r\n            setUserList([])\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClientChange = (e, field) => {\r\n\r\n        if (field == \"client_name\") {\r\n            if (state.clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_name: e,\r\n                    client_id: state.clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n\r\n        setUserList(event.target.value)\r\n        const options = event.target.value;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            value.push(getUserIDbyUserName(options[i]))\r\n        }\r\n        console.log('handleCompanyChange==>', value)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            userIDList: value\r\n        }))\r\n    };\r\n\r\n    const getUserIDbyUserName = (user_name) => {\r\n        console.log(\"state.user===>\", state.users)\r\n        let object = state.users.filter(item => item.value == user_name)\r\n        if (object[0] != null) {\r\n            return object[0].key\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        console.log('save data ==> ', state.userIDList, state.client_id)\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                            company_id: '',\r\n                            users: []\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        console.log('save data ==> ', state.userIDList, state.client_id)\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                            company_id: '',\r\n                            users: []\r\n                        }))\r\n                        history.push(\"/app/sales\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/sales\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleCompanyChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Users</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-mutiple-checkbox-label\"\r\n                                        id=\"demo-mutiple-checkbox\"\r\n                                        multiple\r\n                                        value={userList}\r\n                                        onChange={handleNameChange}\r\n                                        input={<Input />}\r\n                                        renderValue={(selected) => selected.join(', ')}\r\n                                        MenuProps={MenuProps}\r\n                                    >\r\n                                        {state.users.map((name) => (\r\n                                            <MenuItem key={name.value} value={name.value}>\r\n                                                <Checkbox checked={userList.indexOf(name.value) > -1} />\r\n                                                <ListItemText primary={name.value} />\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={state.clients.map(item => {\r\n                                    return item?.value\r\n                                })} value={state.client_name}\r\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { fetchScheduleRequest, fetchScheduleSuccess, fetchScheduleError } from \"../../redux/actions/ScheduleAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ScheduleReducer from \"../../redux/reducers/ScheduleReducer\";\r\n\r\nfunction fetchSchedule() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSchedule`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSchedule;","import {\r\n    FETCH_SCHEDULE_REQUEST,\r\n    FETCH_SCHEDULE_SUCCESS,\r\n    FETCH_SCHEDULE_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchScheduleRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULE_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleSuccess(schedule) {\r\n    console.log(\"action===>\", schedule)\r\n      return {\r\n          type: FETCH_SCHEDULE_SUCCESS,\r\n          schedule: schedule\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULE_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSchedule from \"../../services/schedule/ScheduleService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction SchedulePage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleData = useSelector(state => state.schedule);\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  useEffect(() => {\n    console.log(scheduleData)\n    props.fetchSchedule();\n    setDataSource(scheduleData.data);\n  }, [])\n\n  console.log(\"schedule data=====>\", scheduleData)\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}upload/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check In\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Visiting Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Late\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Present/Absent\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value != \"0000-00-00 00:00:00\"? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"signature\",\n      label: \"Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n      },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  /// Table Action event end\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = scheduleData.schedule[data.dataIndex].schedule_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            schedule_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSchedule`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Schedules\"}\n              data={scheduleData.schedule}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  schedule: state.schedule\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSchedule: fetchSchedule\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SchedulePage);\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n  container: {\r\n    paddingTop: 20\r\n  },\r\n  version: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport { Typography } from \"../Wrappers/Wrappers\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// components\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function Footer(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Powered By Asile\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} className={classes.version}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Version 0.0.1\r\n                </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport AdminPage from \"../../pages/UserManage/Admins/Admins\";\nimport EditAdminPage from \"../../pages/UserManage/Admins/EditAdmin\";\nimport AddAdminPage from \"../../pages/UserManage/Admins/AddAdmin\";\nimport UserPage from \"../../pages/UserManage/Users/Users\";\nimport EditUserPage from \"../../pages/UserManage/Users/EditUser\";\nimport AddUserPage from \"../../pages/UserManage/Users/AddUser\";\n\nimport CompanyPage from \"../../pages/Companys/Companys\";\nimport AddCompanyPage from \"../../pages/Companys/AddCompany\";\nimport EditCompanyPage from \"../../pages/Companys/EditCompany\";\nimport ClientsPage from \"../../pages/Client/Client\";\nimport AddClientPage from \"../../pages/Client/AddClient\";\nimport EditClientPage from \"../../pages/Client/EditClient\";\nimport SalesPage from \"../../pages/Sales/Sales\";\nimport EditSalesPage from \"../../pages/Sales/EditSales\";\nimport AddSalesPage from \"../../pages/Sales/AddSales\";\nimport SchedulePage from \"../../pages/Schedule/Schedule\";\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n            \n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer,{\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n            }\n          )}>\n            <Grid>\n              <Switch>\n                <Route exact path=\"/app/usermanage\" component={AdminPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/usermanage/admin\" />}\n                />\n                <Route exact path=\"/app/usermanage/admin\" component={AdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/:admin/edit\" component={EditAdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/add\" component={AddAdminPage} />\n                <Route exact path=\"/app/usermanage/user\" component={UserPage} /> \n                <Route exact path=\"/app/usermanage/user/:user/edit\" component={EditUserPage} /> \n                <Route exact path=\"/app/usermanage/user/add\" component={AddUserPage} />\n                <Route exact path=\"/app/company\" component={CompanyPage} />\n                <Route exact path=\"/app/company/add\" component={AddCompanyPage} />\n                <Route exact path=\"/app/company/:company/edit\" component={EditCompanyPage} />\n                <Route exact path=\"/app/client\" component={ClientsPage} />\n                <Route exact path=\"/app/client/add\" component={AddClientPage} />\n                <Route exact path=\"/app/client/:client/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/sales\" component={SalesPage} />\n                <Route exact path=\"/app/sales/:sales/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/sales/add\" component={AddSalesPage} />\n                <Route exact path=\"/app/schedule\" component={SchedulePage} />\n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  AssessmentOutlined,\n  AccountCircleOutlined,\n  PeopleAltOutlined,\n  TransferWithinAStationOutlined,\n  TimerOutlined,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport HistoryOutlinedIcon from '@material-ui/icons/HistoryOutlined';\nimport StorageOutlinedIcon from '@material-ui/icons/StorageOutlined';\nimport TrendingUpOutlinedIcon from '@material-ui/icons/TrendingUpOutlined';\nimport SpellcheckOutlinedIcon from '@material-ui/icons/SpellcheckOutlined';\nimport BusinessOutlinedIcon from '@material-ui/icons/BusinessOutlined';\nimport LocalOfferOutlinedIcon from '@material-ui/icons/LocalOfferOutlined';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = localStorage.getItem('allow_so') != 0 ? [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/userview\",\n    icon: <AccountCircleOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 1,\n    label: \"CRM\",\n    link: \"/app/clientview\",\n    icon: <PeopleAltOutlined fontSize=\"small\" />,\n    children: [\n      {\n        label: \"Clients\",\n        link: \"/app/clientview\",\n        icon: <VisibilityOutlinedIcon fontSize=\"small\" />,\n      },\n      {\n        label: \"Sales Client\",\n        link: \"/app/salesview\",\n        icon: <TransferWithinAStationOutlined fontSize=\"small\" />,\n      },\n    ]\n  },\n  {\n    id: 2,\n    label: \"Inventory\",\n    link: \"/app/salesorder/group\",\n    icon: <BusinessOutlinedIcon fontSize=\"small\" />,\n    children: [\n      {\n        label: \"Category\",\n        link: \"/app/salesorder/group\",\n        icon: <SpellcheckOutlinedIcon fontSize=\"small\" />,\n      },\n      {\n        label: \"Items Database\",\n        link: \"/app/salesorder/item\",\n        icon: <StorageOutlinedIcon fontSize=\"small\" />,\n      },\n    ]\n  },\n  {\n    id: 7,\n    label: \"Promotions\",\n    link: \"/app/salesorder/promotion\",\n    icon: <LocalOfferOutlinedIcon fontSize=\"small\" />,\n  },\n  {\n    id: 3,\n    label: \"Sales Target\",\n    link: \"/app/salesorder/itemcategory\",\n    icon: <TrendingUpOutlinedIcon fontSize=\"small\" />,\n    children: [\n      {\n        label: \"Item Categories\",\n        link: \"/app/salesorder/itemcategory\",\n        icon: <SpellcheckOutlinedIcon fontSize=\"small\" />,\n      },\n      {\n        label: \"Company Users\",\n        link: \"/app/salesorder/companyusers\",\n        icon: <StorageOutlinedIcon fontSize=\"small\" />,\n      }\n    ]\n  },\n  {\n    id: 4,\n    label: \"Schedule\",\n    link: \"/app/scheduleview\",\n    icon: <TimerOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 6,\n    label: \"Sales Order\",\n    link: \"/app/salesorder/review\",\n    icon: <ShoppingCartOutlinedIcon fontSize=\"small\" />,\n    children: [\n      {\n        label: \"Review Orders\",\n        link: \"/app/salesorder/review\",\n        icon: <VisibilityOutlinedIcon fontSize=\"small\" />,\n      },\n      {\n        label: \"Orders History\",\n        link: \"/app/salesorder/history\",\n        icon: <HistoryOutlinedIcon fontSize=\"small\" />,\n      },\n    ],\n  },\n  {\n    id: 5,\n    label: \"Report\",\n    link: \"/app/schedule_report\",\n    icon: <AssessmentOutlined fontSize=\"small\" />,\n    children: [\n      {\n        label: \"Schedules Report\",\n        link: \"/app/schedule_report\",\n        icon: <VisibilityOutlinedIcon fontSize=\"small\" />,\n      },\n      {\n        label: \"Sales Order Report\",\n        link: \"/app/salesorder_report\",\n        icon: <HistoryOutlinedIcon fontSize=\"small\" />,\n      }]\n  },\n\n] : [\n    {\n      id: 0,\n      label: \"User\",\n      link: \"/app/userview\",\n      icon: <AccountCircleOutlined fontSize=\"small\" />,\n    },\n    {\n      id: 1,\n      label: \"CRM\",\n      link: \"/app/clientview\",\n      icon: <PeopleAltOutlined fontSize=\"small\" />,\n      children: [\n        {\n          label: \"Clients\",\n          link: \"/app/clientview\",\n          icon: <VisibilityOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Sales Client\",\n          link: \"/app/salesview\",\n          icon: <TransferWithinAStationOutlined fontSize=\"small\" />,\n        },\n      ]\n    },\n    {\n      id: 2,\n      label: \"Inventory\",\n      link: \"/app/salesorder/group\",\n      icon: <BusinessOutlinedIcon fontSize=\"small\" />,\n      children: [\n        {\n          label: \"Category\",\n          link: \"/app/salesorder/group\",\n          icon: <SpellcheckOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Items Database\",\n          link: \"/app/salesorder/item\",\n          icon: <StorageOutlinedIcon fontSize=\"small\" />,\n        },\n      ]\n    },\n    {\n      id: 6,\n      label: \"Promotions\",\n      link: \"/app/salesorder/promotion\",\n      icon: <LocalOfferOutlinedIcon fontSize=\"small\" />,\n    },\n    {\n      id: 3,\n      label: \"Sales Target\",\n      link: \"/app/salesorder/itemcategory\",\n      icon: <TrendingUpOutlinedIcon fontSize=\"small\" />,\n      children: [\n        {\n          label: \"Item Categories\",\n          link: \"/app/salesorder/itemcategory\",\n          icon: <SpellcheckOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Company Users\",\n          link: \"/app/salesorder/companyusers\",\n          icon: <StorageOutlinedIcon fontSize=\"small\" />,\n        }\n      ]\n    },\n    {\n      id: 4,\n      label: \"Schedule\",\n      link: \"/app/scheduleview\",\n      icon: <TimerOutlined fontSize=\"small\" />,\n    },\n    {\n      id: 5,\n      label: \"Report\",\n      link: \"/app/schedule_report\",\n      icon: <AssessmentOutlined fontSize=\"small\" />,\n      children: [\n        {\n          label: \"Schedules Report\",\n          link: \"/app/schedule_report\",\n          icon: <VisibilityOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Sales Order Report\",\n          link: \"/app/salesorder_report\",\n          icon: <HistoryOutlinedIcon fontSize=\"small\" />,\n        }]\n    },\n\n  ];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n\n\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{ color: 'white' }}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n      <div style={{ justifyContent: 'center', alignSelf: 'center', marginTop: 20 }}>\n        <IconButton style={{ color: 'white', fontSize: 14, fontWeight: 'bold' }}\n          onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }}>\n          <ArrowBackIcon\n            style={{ marginRight: 5 }}\n          />\n          Log Out\n        </IconButton>\n      </div>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserViewRequest, fetchUserViewSuccess, fetchUserViewError } from \"../../redux/actions/UserViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUserView() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUserById`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        throw (res.error);\r\n                    }\r\n                    dispatch(fetchUserViewSuccess(res));\r\n                    return res;\r\n                })\r\n                .catch(error => {\r\n                    dispatch(fetchUserViewError(error));\r\n                })\r\n        }, 1000);\r\n\r\n    }\r\n}\r\n\r\nexport default fetchUserView;","import {\r\n  FETCH_USERVIEW_REQUEST,\r\n  FETCH_USERVIEW_SUCCESS,\r\n  FETCH_USERVIEW_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchUserViewRequest() {\r\n    return {\r\n        type: FETCH_USERVIEW_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserViewSuccess(userview) {\r\n    return {\r\n        type: FETCH_USERVIEW_SUCCESS,\r\n        userview: userview\r\n    }\r\n}\r\n\r\nexport function fetchUserViewError(error) {\r\n    return {\r\n        type: FETCH_USERVIEW_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { useUserState } from \"../../context/UserContext\";\n\n\nfunction UserViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userviewData = useSelector(state => state.userview);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUserView();\n    setDataSource(userviewData.userview);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n          height: '50px'\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    },\n    onRowsDelete: (rowsDeleted) => {\n\n    },\n  };\n\n  if (userviewData.loading) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Users\" data={dataSource} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Users\"}\n              data={userviewData.userview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userview: state.userview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUserView: fetchUserView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserViewPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchScheduleViewRequest, fetchScheduleViewSuccess, fetchScheduleViewError } from \"../../redux/actions/ScheduleViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ScheduleViewReducer from \"../../redux/reducers/ScheduleViewReducer\";\r\n\r\nfunction fetchScheduleView() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getScheduleByCompanyId`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleViewSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchScheduleView;","import {\r\n    FETCH_SCHEDULEVIEW_REQUEST,\r\n    FETCH_SCHEDULEVIEW_SUCCESS,\r\n    FETCH_SCHEDULEVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchScheduleViewRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewSuccess(scheduleview) {\r\n    console.log(\"action===>\", scheduleview)\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_SUCCESS,\r\n          scheduleview: scheduleview\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchScheduleView from \"../../services/scheduleview/ScheduleViewService\";\nimport { bindActionCreators } from \"redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction ScheduleViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleviewData = useSelector(state => state.scheduleview);\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    console.log(scheduleviewData)\n    props.fetchScheduleView();\n    setDataSource(scheduleviewData.scheduleview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}upload/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check In\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check Out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Visiting Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Late\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Present/Absent\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value != \"0000-00-00 00:00:00\" ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"signature\",\n      label: \"Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n    },\n\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Schedules\"}\n              data={scheduleviewData.scheduleview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  scheduleview: state.scheduleview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchScheduleView: fetchScheduleView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleViewPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { FETCH_CLIENTVIEW_REQUEST, FETCH_CLIENTVIEW_SUCCESS, FETCH_CLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    clientview: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENTVIEW_REQUEST:\r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                clientview: action.clientview\r\n            }\r\n        case FETCH_CLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchClientViewRequest, fetchClientViewSuccess, fetchClientViewError } from \"../../redux/actions/ClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport ClientViewReducer from \"../../redux/reducers/ClientViewReducer\";\r\n\r\nfunction fetchClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientViewSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClientView;","import {\r\n    FETCH_CLIENTVIEW_REQUEST,\r\n    FETCH_CLIENTVIEW_SUCCESS,\r\n    FETCH_CLIENTVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchClientViewRequest() {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewSuccess(clientview) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_SUCCESS,\r\n          clientview: clientview\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewError(error) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Button } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Status from \"../../components/Status/Status\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientViewPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientViewData = useSelector(state => state.clientview);\n\n  useEffect(() => {\n    console.log(clientViewData)\n    props.fetchClientView()\n    setDataSource(clientViewData.clientview);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"custom_field\",\n      label: \"Custom Field\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"approved\",\n      label: \"Approved\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value == 1 ? \"yes\" : \"no\"} />\n          );\n        }\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Created by\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/clientview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientViewData.clientview[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const importCSV = (data) => {\n    console.log(data)\n\n\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        client_entity_name: row[0],\n        address: row[1],\n        phone_number: row[3],\n        location: row[2],\n        company_id: row[4],\n        custom_field: row[5],\n        approved: row[6],\n        created_by: row[7]\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addClient`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"clientview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Clients\"}\n              data={clientViewData.clientview}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientViewPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\nimport { GOOGLE_MAP_API_KEY } from '../../common/config';\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(GOOGLE_MAP_API_KEY);\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form data\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        custom_field: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: '',\r\n        companyIDList: localStorage.getItem('company_id').split(', ')\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.company);\r\n    }, [])\r\n\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    if (state.companyIDList.includes(item?.company_id.toString())) {\r\n                        tmp.push(item?.company_entity_name);\r\n                    }\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n\r\n        let comboFields = ['company_entity_name'];\r\n        if (field == \"address\") {\r\n            const { name, value } = e.target;\r\n            console.log(\"$$$$$$$$$\", value)\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                address: value\r\n            }))\r\n            Geocode.fromAddress(value).then(\r\n                response => {\r\n                    const { lat, lng } = response.results[0].geometry.location;\r\n                    console.log(lat, lng);\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        location: lat + ' ' + lng\r\n                    }))\r\n                },\r\n                error => {\r\n                    console.error(error);\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        location: ''\r\n                    }))\r\n                }\r\n            );\r\n        } else if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter client Custom Field.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: 1,\r\n                    created_by: localStorage.getItem('user_id')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(state => ({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter client Custom Field.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: 1,\r\n                    created_by: localStorage.getItem('user_id')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    if (!response.ok) {\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(state => ({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                        }))\r\n                        history.push(\"/app/clientview\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/clientview\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Custom Field\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(lat lng)\" value={state.location} disabled handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../common/config';\nimport { GOOGLE_MAP_API_KEY } from '../../common/config';\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(GOOGLE_MAP_API_KEY);\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const companyData = useSelector(state => state.company);\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        custom_field: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: '',\n        company_entity_name: '',\n        companyIDList: localStorage.getItem('company_id').split(', '),\n        approved: '0',\n        created_by: ''\n    })\n\n    const update_id = props.match.params.clientview\n    useEffect(() => {\n        props.fetchCompany();\n        setDataSource(companyData.company);\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    custom_field: data.custom_field,\n                    address: data.address,\n                    company_id: data.company_id.toString(),\n                    company_entity_name: data.company_entity_name,\n                    phone_number: data.phone_number,\n                    location: data.location,\n                    approved: data.approved,\n                    created_by: data.created_by\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                custom_field: state.custom_field,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id.toString(),\n                approved: state.approved,\n                created_by: state.created_by\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    const objArray2Array = (original) => {\n        console.log('originall ====> ', original, companyData.company)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    if (state.companyIDList.includes(item?.company_id.toString())) {\n                        tmp.push(item?.company_entity_name);\n                    }\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const companies = objArray2Array(companyData.company)\n\n\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n        if (object[0] != null) {\n            setState({\n                ...state,\n                company_id: object[0].company_id.toString()\n            })\n        }\n\n    }\n\n    //input fields event\n    const handleChange = (e, field) => {\n        let comboFields = ['company_entity_name'];\n        if (field == \"address\") {\n            const { name, value } = e.target;\n            console.log(\"$$$$$$$$$\", value)\n            setState(prevState => ({\n                ...prevState,\n                address: value\n            }))\n            Geocode.fromAddress(value).then(\n                response => {\n                    const { lat, lng } = response.results[0].geometry.location;\n                    console.log(lat, lng);\n                    setState(prevState => ({\n                        ...prevState,\n                        location: lat + ' ' + lng\n                    }))\n                },\n                error => {\n                    console.error(error);\n                    setState(prevState => ({\n                        ...prevState,\n                        location: ''\n                    }))\n                }\n            );\n        } else if(comboFields.includes(field)) {\n            setCompanyIdfromCompanyName(e)\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else if (e.target.name == \"approved\") {\n            console.log('approved====>', e.target.checked)\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.custom_field == null || state.custom_field == \"\") {\n            notify(\"Please enter company custom field.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter company location.\")\n            return\n        } else if (state.phone_number.length < 7) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_id.length < 1) {\n            notify(\"Please enter company id.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/clientview\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Custom Field\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(lat lng)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Approved</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={Number(state.approved)} onChange={handleChange} name=\"approved\" />}\n                                    label=\"Approved\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { fetchSalesClientViewRequest, fetchSalesClientViewSuccess, fetchSalesClientViewError } from \"../../redux/actions/SalesClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientViewSuccess(res));\r\n                console.log(\"Get SalesClientView===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClientView;","import {\r\n    FETCH_SALESCLIENTVIEW_REQUEST,\r\n    FETCH_SALESCLIENTVIEW_SUCCESS,\r\n    FETCH_SALESCLIENTVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesClientViewRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewSuccess(salesview) {\r\n    console.log(\"action===>\", salesview)\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_SUCCESS,\r\n          salesview: salesview\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesviewData = useSelector(state => state.salesview);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    props.fetchSalesClientView()\n    setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesviewData.salesview[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        user_id: row[0],\n        client_id: row[1],\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addSalesClientWithCSV`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"salesview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Sales Clients\"}\n              // data={dataSource}\n              data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesViewPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.userview);\n    const clientData = useSelector(state => state.clientview);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.salesview\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: ''\n    })\n\n    useEffect(() => {\n        props.fetchClientView()\n        props.fetchUserView();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.clientview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const clients = getClientNameList(clientData.clientview)\n\n    console.log(\"Client Data =====> \", clients.map(item => {\n        return item?.value\n    }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.userview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.userview)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesview\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    const clientList = clients.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUserView: fetchUserView,\n    fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\r\nimport fetchUserView from \"../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const userData = useSelector(state => state.userview);\r\n    const clientData = useSelector(state => state.clientview);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: '',\r\n        userIDList: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchClientView()\r\n        props.fetchUserView();\r\n    }, [])\r\n\r\n    const [userList, setUserList] = React.useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n    const getClientNameList = (original) => {\r\n        console.log('originall ====> ', original, clientData.clientview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const clients = getClientNameList(clientData.clientview)\r\n\r\n    console.log(\"Client Data =====> \", clients.map(item => {\r\n        return item?.value\r\n    }))\r\n\r\n    const getUserNameList = (original) => {\r\n        console.log('originall ====> ', original, userData.userview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const users = getUserNameList(userData.userview)\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        if (field == \"client_name\") {\r\n            if (clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_name: e,\r\n                    client_id: clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n\r\n        setUserList(event.target.value)\r\n        const options = event.target.value;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            value.push(getUserIDbyUserName(options[i]))\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            userIDList: value\r\n        }))\r\n    };\r\n\r\n    const getUserIDbyUserName = (user_name) => {\r\n        console.log(\"state.user===>\", users)\r\n        let object = userData.userview.filter(item => item.full_name == user_name)\r\n        if (object[0] != null) {\r\n            return object[0].user_id\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(()=>({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                        }))\r\n                        \r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(()=>({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                        }))\r\n                        history.push(\"/app/salesview\");\r\n                        \r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesview\");\r\n    }\r\n\r\n    const clientList = clients.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\r\n                                    handleChange={(e) => handleChange(e, 'client_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Users</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-mutiple-checkbox-label\"\r\n                                        id=\"demo-mutiple-checkbox\"\r\n                                        multiple\r\n                                        value={userList}\r\n                                        onChange={handleNameChange}\r\n                                        input={<Input />}\r\n                                        renderValue={(selected) => selected.join(', ')}\r\n                                        MenuProps={MenuProps}\r\n                                    >\r\n                                        {users.map((name) => (\r\n                                            <MenuItem key={name.value} value={name.value}>\r\n                                                <Checkbox checked={userList.indexOf(name.value) > -1} />\r\n                                                <ListItemText primary={name.value} />\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUserView from \"../../../services/users/UserViewService\";\nimport { useUserState } from \"../../../context/UserContext\";\nimport moment from 'moment'\nimport { SERVER_URL } from '../../../common/config';\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\n\nfunction ScheduleReportPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userviewData = useSelector(state => state.userview);\n\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n  const [report, setReport] = useState([])\n  const curDate = new Date()\n  const [state, setState] = useState({\n\n    start_date: new Date(curDate.getFullYear(), curDate.getMonth(), 1),\n    end_date: new Date(curDate.getFullYear(), curDate.getMonth() + 1, 0),\n\n  })\n  useEffect(() => {\n    props.fetchUserView();\n    // setDataSource(userviewData.userview);     // from backend(redux)\n    // setDataSource(data);\n\n  }, [])\n\n  useEffect(() => {\n    if (!props.userview.loading && props.userview.userview.length > 0) {\n      setDataSource(userviewData.userview.userview);     // from backend(redux)\n      let start_date = moment(firstDay).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let end_date = moment(lastDay).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      console.log(moment(firstDay).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\"), moment(lastDay).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\"))\n\n      getReportData(start_date, end_date, props.userview.userview)\n    }\n  }, [props.userview]);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n          height: '50px'\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"full_name\",\n      label: \"Sales Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_number\",\n      label: \"No of Schedules\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"success\",\n      label: \"Success\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"percentage\",\n      label: \"Success Percentage (%)\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"new_client\",\n      label: \"New Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    },\n    onRowsDelete: (rowsDeleted) => {\n\n    },\n  };\n\n  var reportData = []\n  const getReportData = async (start_date, end_date, userviewData0) => {\n    reportData = []\n    console.log('userviewData0 ========== ', userviewData0)\n    for (let item of userviewData0) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          user_id: item.user_id,\n          start_date: start_date,\n          end_date: end_date\n        })\n      };\n      try {\n        let response = await fetch(`${SERVER_URL}getReport`, requestOptions);\n        const data = await response.json();\n        reportData.push({\n          full_name: item.full_name,\n          schedule_number: data.schedule_number,\n          success: data.success,\n          new_client: data.new_client,\n          percentage: data.percentage\n        })\n      } catch (err) {\n      }\n    }\n    console.log('################### ', reportData)\n    setReport(reportData)\n  }\n\n  console.log('***&&&&&&&&&&&&&& ', props.userview.userview)\n\n  console.log('state ^^^^^^^^^^^ ', report)\n\n  if (props.userview.loading) {\n    return (\n      <div>Loading...</div>\n    )\n  } else {\n    var date = new Date();\n\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  }\n\n  const handleDateChange = (date, field) => {\n    setState(prevState => ({\n      ...prevState, [field]: date\n    }))\n    if (field == 'start_date') {\n      let s_date = moment(date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(state.end_date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      getReportData(s_date, e_date, props.userview.userview)\n    } else if (field == 'end_date') {\n      let s_date = moment(state.start_date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      getReportData(s_date, e_date, props.userview.userview)\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Schedules Report\" data={dataSource} />\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n          <CustomDatePicker title=\"Start Date\" selectedDate={state.start_date} handleChange={(e) => handleDateChange(e, 'start_date')} />\n        </Grid>\n        <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n          <CustomDatePicker title=\"End Date\" selectedDate={state.end_date} handleChange={(e) => handleDateChange(e, 'end_date')} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Schedules Report\"}\n              data={report}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userview: state.userview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUserView: fetchUserView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleReportPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    // paddingTop: theme.spacing(4),\n    // paddingBottom: theme.spacing(4),\n    // marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  modal: {\n    padding: 150,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflowY: 'auto'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    margin: 'auto',\n    padding: theme.spacing(2, 4, 3),\n  },\n  //End Client Edit\n}));\n","import { FETCH_SALESREVIEW_REQUEST, FETCH_SALESREVIEW_SUCCESS, FETCH_SALESREVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    salesreview: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesReviewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESREVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESREVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                salesreview: action.salesreview\r\n            }\r\n        case FETCH_SALESREVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchSalesReviewRequest, fetchSalesReviewSuccess, fetchSalesReviewError } from \"../../redux/actions/OrderReviewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReviewReducer from \"../../redux/reducers/SalesReviewReducer\";\r\n\r\nfunction fetchSalesReview() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesReviewRequest());\r\n        // let body = {\r\n        //     company_id: localStorage.getItem('company_id')\r\n        // }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getReview`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                // body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesReviewSuccess(res));\r\n                console.log(\"Get SalesReview===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesReviewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesReview;","import {\r\n    FETCH_SALESREVIEW_REQUEST,\r\n    FETCH_SALESREVIEW_SUCCESS,\r\n    FETCH_SALESREVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesReviewRequest() {\r\n      return {\r\n          type: FETCH_SALESREVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesReviewSuccess(salesreview) {\r\n    console.log(\"action===>\", salesreview)\r\n      return {\r\n          type: FETCH_SALESREVIEW_SUCCESS,\r\n          salesreview: salesreview\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesReviewError(error) {\r\n      return {\r\n          type: FETCH_SALESREVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nexport default function Status3({ color = \"primary\", ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classNames(classes.status, {\n        [classes.draft]: props.status === 'reject',\n        [classes.paid]: props.status === 'accept',\n        [classes.pending]: props.status === 'pending'\n      }\n      )}\n    >\n      {props.status.toUpperCase()}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Tooltip, Menu, MenuItem, Typography, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchSalesReview from \"../../services/salesorder/SalesReviewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\nimport Status3 from \"../../components/Status/Status3\";\nimport Status2 from \"../../components/Status/Status2\";\nimport Modal from '@material-ui/core/Modal';\n\nfunction ReviewPage(props) {\n  let history = useHistory();\n  var classes = useStyles();\n  const [dataSource, setDataSource] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const reviewData = useSelector(state => state.salesreview);\n\n  const [state, setState] = useState({\n    showModal: false,\n    selectedOrder: null,\n  })\n\n  useEffect(() => {\n    console.log(reviewData)\n    props.fetchSalesReview()\n    setDataSource(reviewData.salesreview);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  const columns = [\n    {\n      name: \"order_date\",\n      label: \"Order Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"due_date\",\n      label: \"Due Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Sales Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"net_total\",\n      label: \"Total Amount\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Area\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"status\",\n      label: \"Order Status\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status3 status={\n              value == 0 ? 'pending' : (value == 1 ? 'accept' : 'reject')\n            } />\n          );\n        }\n      }\n    },\n    {\n      name: \"order_id\",\n      label: \"View Details\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionView(e, value)\n                }}\n              >\n                <VisibilityIcon style={{ fontSize: '20' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n    {\n      name: \"order_id\",\n      label: \"Accept/Reject\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          return (\n            <>\n              <Tooltip title=\"Accept/Reject\">\n                <IconButton\n                  onClick={(e) => {\n                    actionClick(e, value)\n                  }}\n                >\n                  <MoreHorizIcon />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                id=\"accept\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={actionClose}\n              >\n                <MenuItem onClick={() => {\n                  actionEdit(value, 1)\n                }}>Accept</MenuItem>\n                <MenuItem onClick={() => actionEdit(value, -1)}>Reject</MenuItem>\n              </Menu>\n            </>\n          );\n        }\n      },\n    },\n  ];\n  const actionClick = (event, i) => {\n    setSelectedRowIndex(i);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const actionView = (event, i) => {\n    console.log(i)\n    reviewData.salesreview.filter(item => item.order_id == i).map(k => {\n      console.log(\"KKKKKKKKKKKKK==>\", k)\n      setState({\n        ...state,\n        showModal: true,\n        selectedOrder: k\n      })\n    }\n    )\n  };\n\n  const actionEdit = (value, state) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        order_id: selectedRowIndex,\n        status: state\n      })\n    };\n    fetch(`${SERVER_URL}setStatus`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n        }\n        actionClose()\n        props.fetchSalesReview()\n        setDataSource(reviewData.salesreview);\n      })\n      .catch(error => {\n        notify('Something went wrong!\\n' + error)\n        console.error('There was an error!', error);\n      });\n  }\n\n  const actionClose = () => {\n    setAnchorEl(null);\n  };\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = reviewData.salesreview[data.dataIndex].order_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            order_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removeOrder`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Review Orders\" data={dataSource} category=\"review\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Review Orders\"}\n              data={reviewData.salesreview}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n            <Modal\n              open={state.showModal}\n              onClose={() => setState(\n                {\n                  ...state,\n                  showModal: false,\n                  selectedOrder: null\n                }\n              )}\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classes.modal}\n            >\n\n              <Widget title=\"View Detail\" disableWidgetMenu>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Sales name : {state.selectedOrder?.full_name}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Client Name : {state.selectedOrder?.client_entity_name}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Order date : {state.selectedOrder?.order_date}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Due date : {state.selectedOrder?.due_date}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Total Amount : {state.selectedOrder?.net_total}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Area : {state.selectedOrder?.company_entity_name}</Typography>\n                  </Grid>\n\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Status3 status={\n                      state.selectedOrder?.status == 0 ? 'pending' : (state.selectedOrder?.status == 1 ? 'accept' : 'reject')\n                    } />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Promotion : {state.selectedOrder?.promotions}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Tax : {state.selectedOrder?.tax}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Shipping Cost : {state.selectedOrder?.shipping_cost}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Items : {state.selectedOrder?.order_items}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Notes : {state.selectedOrder?.notes}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                {\n                  state.selectedOrder?.custom_field != null ? \n                  <Grid container spacing={4}>\n                    {\n                      state.selectedOrder?.custom_field.split(', ').map(item => {\n                        return <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                          <Typography variant={'subtitle1'}>{item.split(\":\")[0]}: {item.split(\":\")[1]}</Typography>\n                        </Grid>\n                      })\n                    }\n                  </Grid> : null\n                }\n              </Widget>\n\n            </Modal>\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  salesreview: state.salesreview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesReview: fetchSalesReview\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReviewPage);\n","import { FETCH_SALESHISTORY_REQUEST, FETCH_SALESHISTORY_SUCCESS, FETCH_SALESHISTORY_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    saleshistory: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesHistoryReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESHISTORY_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESHISTORY_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                saleshistory: action.saleshistory\r\n            }\r\n        case FETCH_SALESHISTORY_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchSalesHistoryRequest, fetchSalesHistorySuccess, fetchSalesHistoryError } from \"../../redux/actions/OrderHistoryAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesHistoryReducer from \"../../redux/reducers/SalesHistoryReducer\";\r\n\r\nfunction fetchSalesHistory() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesHistoryRequest());\r\n        // let body = {\r\n        //     company_id: localStorage.getItem('company_id')\r\n        // }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getHistory`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                // body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesHistorySuccess(res));\r\n                console.log(\"Get SalesHistory===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesHistoryError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesHistory;","import {\r\n    FETCH_SALESHISTORY_REQUEST,\r\n    FETCH_SALESHISTORY_SUCCESS,\r\n    FETCH_SALESHISTORY_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesHistoryRequest() {\r\n      return {\r\n          type: FETCH_SALESHISTORY_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesHistorySuccess(saleshistory) {\r\n    console.log(\"action===>\", saleshistory)\r\n      return {\r\n          type: FETCH_SALESHISTORY_SUCCESS,\r\n          saleshistory: saleshistory\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesHistoryError(error) {\r\n      return {\r\n          type: FETCH_SALESHISTORY_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Typography, Divider, MenuItem } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchSalesHistory from \"../../services/salesorder/SalesHistoryService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\nimport Status3 from \"../../components/Status/Status3\";\nimport Status2 from \"../../components/Status/Status2\";\nimport moment from 'moment'\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Modal from '@material-ui/core/Modal';\n\nfunction HistoryPage(props) {\n  let history = useHistory();\n  var classes = useStyles();\n  const [dataSource, setDataSource] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const historyData = useSelector(state => state.saleshistory);\n  console.log(\"sales history===============>\", historyData);\n  const curDate = new Date()\n  const [state, setState] = useState({\n    start_date: new Date(curDate.getFullYear(), curDate.getMonth(), 1),\n    end_date: new Date(curDate.getFullYear(), curDate.getMonth() + 1, 0),\n    showModal: false,\n    selectedOrder: null,\n  })\n\n  const handleDateChange = (date, field) => {\n    setState(prevState => ({\n      ...prevState, [field]: date\n    }))\n    if (field == 'start_date') {\n      let s_date = moment(date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(state.end_date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      // getReportData(s_date, e_date, props.userview.userview)\n    } else if (field == 'end_date') {\n      let s_date = moment(state.start_date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      // getReportData(s_date, e_date, props.userview.userview)\n    }\n\n  };\n  useEffect(() => {\n    props.fetchSalesHistory()\n    // setDataSource(historyData.saleshistory);\n  }, [])\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  const columns = [\n    {\n      name: \"order_date\",\n      label: \"Order Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"due_date\",\n      label: \"Due Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Sales Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"net_total\",\n      label: \"Total Amount\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Area\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"status\",\n      label: \"Order Status\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status3 status={\n              value == 0 ? 'pending' : (value == 1 ? 'accept' : 'reject')\n            } />\n          );\n        }\n      }\n    },\n    {\n      name: \"order_id\",\n      label: \"View\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionView(e, value)\n                }}\n              >\n                <VisibilityIcon style={{ fontSize: '20' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  const actionView = (e, i) => {\n\n    historyData.saleshistory.filter(item => item.order_id == i).map(k => {\n      setState({\n        ...state,\n        showModal: true,\n        selectedOrder: k\n      })\n    }\n    )\n\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = historyData.saleshistory[data.dataIndex].order_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            order_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removeOrder`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Orders History\" data={dataSource} category=\"history\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            {/* <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomDatePicker title=\"Start Date\" selectedDate={state.start_date} handleChange={(e) => handleDateChange(e, 'start_date')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomDatePicker title=\"End Date\" selectedDate={state.end_date} handleChange={(e) => handleDateChange(e, 'end_date')} />\n              </Grid>\n            </Grid> */}\n            <MUIDataTable\n              title={\"Orders History\"}\n              data={historyData.saleshistory}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n            <Modal\n              open={state.showModal}\n              onClose={() => setState(\n                {\n                  ...state,\n                  showModal: false,\n                  selectedOrder: null\n                }\n              )}\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classes.modal}\n            >\n\n              <Widget title=\"View Detail\" disableWidgetMenu>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Sales name : {state.selectedOrder?.full_name}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Client Name : {state.selectedOrder?.client_entity_name}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Order date : {state.selectedOrder?.order_date}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Due date : {state.selectedOrder?.due_date}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Total Amount : {state.selectedOrder?.net_total}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Area : {state.selectedOrder?.company_entity_name}</Typography>\n                  </Grid>\n\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Status3 status={\n                      state.selectedOrder?.status == 0 ? 'pending' : (state.selectedOrder?.status == 1 ? 'accept' : 'reject')\n                    } />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Promotion : {state.selectedOrder?.promotions}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Tax : {state.selectedOrder?.tax}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Shipping Cost : {state.selectedOrder?.shipping_cost}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Items : {state.selectedOrder?.order_items}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                    <Typography variant={'subtitle1'}>Notes : {state.selectedOrder?.notes}</Typography>\n                  </Grid>\n                </Grid>\n                <Divider />\n                {\n                  state.selectedOrder?.custom_field != null ?\n                    <Grid container spacing={4}>\n                      {\n                        state.selectedOrder?.custom_field.split(', ').map(item => {\n                          return <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                            <Typography variant={'subtitle1'}>{item.split(\":\")[0]}: {item.split(\":\")[1]}</Typography>\n                          </Grid>\n                        })\n                      }\n                    </Grid> : null\n                }\n              </Widget>\n\n            </Modal>\n\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  saleshistory: state.saleshistory\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesHistory: fetchSalesHistory\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HistoryPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { FETCH_SALESITEM_REQUEST, FETCH_SALESITEM_SUCCESS, FETCH_SALESITEM_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    salesitem: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesItemReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESITEM_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESITEM_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                salesitem: action.salesitem\r\n            }\r\n        case FETCH_SALESITEM_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchSalesItemRequest, fetchSalesItemSuccess, fetchSalesItemError } from \"../../redux/actions/OrderItemAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesItemReducer from \"../../redux/reducers/SalesItemReducer\";\r\n\r\nfunction fetchSalesItem(company_id) {\r\n    return dispatch => {\r\n        dispatch(fetchSalesItemRequest());\r\n        let body = {\r\n            company_id: company_id\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getItemsbyCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesItemSuccess(res));\r\n                console.log(\"Get SalesItem===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesItemError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesItem;","import {\r\n    FETCH_SALESITEM_REQUEST,\r\n    FETCH_SALESITEM_SUCCESS,\r\n    FETCH_SALESITEM_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesItemRequest() {\r\n      return {\r\n          type: FETCH_SALESITEM_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesItemSuccess(salesitem) {\r\n    console.log(\"action===>\", salesitem)\r\n      return {\r\n          type: FETCH_SALESITEM_SUCCESS,\r\n          salesitem: salesitem\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesItemError(error) {\r\n      return {\r\n          type: FETCH_SALESITEM_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSalesItem from \"../../../services/salesorder/SalesItemService\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction ItemPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const companyData = useSelector(state => state.company);\n\n  const [state, setState] = useState({\n    company_id: localStorage.getItem('company_id'),\n    company_entity_name: 'All',\n    companyIDList: localStorage.getItem('company_id').split(', '),\n    itemData: []\n  })\n\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n    getItemsbyCompanyId(state.company_id)\n  }, [])\n\n  const getItemsbyCompanyId = (company_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        company_id: company_id,\n      })\n    };\n    fetch(`${SERVER_URL}getItemsbyCompanyId`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        if (!response.ok) {\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(state => ({\n          ...state,\n          itemData: data\n        }))\n      })\n      .catch(error => {\n        notify('Something went wrong!\\n' + error)\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        if (state.companyIDList.length != 1) {\n          tmp.push(\"All\")\n        }\n        original.map(item => {\n          if (state.companyIDList.includes(item?.company_id.toString())) {\n            tmp.push(item?.company_entity_name);\n          }\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n  const companies = objArray2Array(companyData.company)\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let com_id = ''\n    if (company_entity_name == \"All\") {\n      com_id = state.companyIDList.join(', ');\n      setState({\n        ...state,\n        company_id: com_id\n      })\n      getItemsbyCompanyId(com_id)\n    } else {\n      let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n      if (object[0] != null) {\n        com_id = object[0].company_id.toString()\n        setState({\n          ...state,\n          company_id: com_id\n        })\n        getItemsbyCompanyId(com_id)\n      }\n    }\n  }\n\n  //input fields event\n  const handleChange = (e, field) => {\n\n    let comboFields = ['company_entity_name'];\n    if (comboFields.includes(field)) {\n      setCompanyIdfromCompanyName(e)\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"item_name\",\n      label: \"Item Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"category_name\",\n      label: \"Category\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"unit_price\",\n      label: \"Unit Price\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"unit\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"tag\",\n      label: \"Tag\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"item_id\",\n      label: \"Edit\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/salesorder/item/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = state.itemData.salesitem[data.dataIndex].order_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            item_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removeItem`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        item_name: row[0],\n        category_id: row[1],\n        company_id: row[2],\n        unit_price: row[3],\n        unit: row[4],\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      setTimeout(\n        fetch(`${SERVER_URL}createItem`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        }), 100\n      )\n      \n    }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Items Database\" button={[\"Add New\"]} data={dataSource} category=\"salesorder_item\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <Grid item xs={12} md={4}>\n            <CustomCombobox req={true} name=\"Company\"\n              items={companies} value={companies.length == 1 ? companies[0] : state.company_entity_name}\n              handleChange={(e) => handleChange(e, 'company_entity_name')} />\n          </Grid>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Items Database\"}\n              // data={dataSource}\n              data={state.itemData}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  salesitem: state.salesitem,\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesItem: fetchSalesItem,\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ItemPage);\n\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddItemPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        company_entity_name: '',\r\n        item_name: \"\",\r\n        company_id: '',\r\n        category_id: '',\r\n        category_name: '',\r\n        unit_price: '',\r\n        unit: '',\r\n        tag: '',\r\n        companyIDList: localStorage.getItem('company_id').split(', '),\r\n        categoryList: [],\r\n        categoryNameList: [],\r\n        unitList: [],\r\n        item_id: 0,\r\n        showDiscount: false,\r\n        discount_type: \"UNIT\",\r\n        min_qty: '',\r\n        max_qty: '',\r\n        amount: '',\r\n        discountList: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        getGroup()\r\n        getUnit()\r\n    }, [])\r\n\r\n    const getGroup = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(`${SERVER_URL}getCategory`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                console.log(\"groupdData--> \", data)\r\n                let list = []\r\n                data.map(item => {\r\n                    list.push(item.category_name)\r\n                })\r\n                setState((state) => ({\r\n                    ...state,\r\n                    categoryList: data,\r\n                    categoryNameList: [...list]\r\n                }))\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    console.log('********************** state.categoryNameList ==>', state.categoryNameList)\r\n\r\n    const getUnit = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(`${SERVER_URL}getUnit`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                console.log(\"unitData--> \", data, state)\r\n                let list = []\r\n                data.map(unit => {\r\n                    list.push(unit.unit_name)\r\n                })\r\n                setState((state) => ({\r\n                    ...state,\r\n                    unitList: [...list],\r\n                }))\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', state.companyIDList)\r\n        let tmp = [\"All\"];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    if (state.companyIDList.includes(item.company_id.toString()))\r\n                        tmp.push(item?.company_entity_name);\r\n                })\r\n                console.log('Temp==> ', tmp)\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let com_id = ''\r\n        if (company_entity_name == \"All\") {\r\n            com_id = state.companyIDList.join(', ');\r\n            setState({\r\n                ...state,\r\n                company_id: com_id\r\n            })\r\n        } else {\r\n            let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n            if (object[0] != null) {\r\n                com_id = object[0].company_id.toString()\r\n                setState({\r\n                    ...state,\r\n                    company_id: com_id\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const setGroupIdfromGroupName = (category_name) => {\r\n        let object = state.categoryList.filter(item => item.category_name == category_name)\r\n        if (object[0] != null) {\r\n            console.log(\"object[0].category_id==>\", object[0].category_id)\r\n            setState({\r\n                ...state,\r\n                category_id: object[0].category_id\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e, field) => {\r\n\r\n        if (field == 'company_entity_name') {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else if (field == 'category_name') {\r\n            setGroupIdfromGroupName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else if (field == 'unit') {\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else if (field == \"discount_type\") {\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.category_name == null || state.category_name == \"\") {\r\n            notify(\"Please enter group name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    item_name: state.item_name,\r\n                    category_id: state.category_id,\r\n                    company_id: state.company_id,\r\n                    unit_price: state.unit_price,\r\n                    unit: state.unit,\r\n                    tag: state.tag\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createItem`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.id == 0) {\r\n                        notify(\"This item is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        setState((state) => ({\r\n                            ...state,\r\n                            item_id: data.id,\r\n                            showDiscount: true\r\n                        }))\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n    const onAddDiscount = () => {\r\n        if (state.min_qty == \"\") {\r\n            notify(\"Please enter min quantity.\")\r\n        } else if (state.max_qty == \"\") {\r\n            notify(\"Please enter max quantity.\")\r\n        } else if (state.amount == \"\") {\r\n            notify(\"Please enter amount\")\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    item_id: state.item_id,\r\n                    amount: state.amount,\r\n                    min_quantity: state.min_qty,\r\n                    max_quantity: state.max_qty,\r\n                    type: state.discount_type\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createDiscount`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.discount_id == 0) {\r\n                        notify(\"This discount is already exist.\")\r\n                        return\r\n                    } else if (data.discount_id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        let list = state.discountList\r\n                        list.push({\r\n                            item_id: state.item_id,\r\n                            amount: state.amount,\r\n                            min_qty: state.min_qty,\r\n                            max_qty: state.max_qty,\r\n                            type: state.discount_type,\r\n                            discount_id: data.discount_id\r\n                        })\r\n                        setState((state) => ({\r\n                            ...state,\r\n                            discountList: list\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onDelete = (discount_id) => {\r\n        console.log(\"Discount ID ==> \", discount_id)\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                discount_id: discount_id\r\n            })\r\n        };\r\n        fetch(`${SERVER_URL}removeDiscount`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                console.log(\"Response Data=============>\", data)\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                let list = state.discountList\r\n                list = list.filter(item => {\r\n                    return item.discount_id != discount_id\r\n                })\r\n                setState((state) => ({\r\n                    ...state,\r\n                    discountList: list\r\n                }))\r\n            })\r\n            .catch(error => {\r\n                notify('Something went wrong!\\n' + error)\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/item\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Item\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Name\" value={state.item_name}\r\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Category Name\" items={state.categoryNameList} value={state.category_name}\r\n                                    handleChange={(e) => handleChange(e, 'category_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Unit Price\" value={state.unit_price}\r\n                                    handleChange={(e) => handleChange(e, 'unit_price')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Unit\" items={state.unitList} value={state.unit}\r\n                                    handleChange={(e) => handleChange(e, 'unit')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Tag\" value={state.tag}\r\n                                    handleChange={(e) => handleChange(e, 'tag')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={6} md={6} lg={6}></Grid>\r\n                            <Grid item xs={6} md={6} lg={6}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        {\r\n                            state.discountList.length != 0 ? <>\r\n                                {\r\n                                    state.discountList.map(item => {\r\n                                        return (\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                    <CustomInput disabled={true} title=\"Discount Type\" value={item.type} />\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                    <CustomInput disabled={true} title=\"Min QTY\" value={item.min_qty} />\r\n                                                </Grid>\r\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                    <CustomInput disabled={true} title=\"Max QTY\" value={item.max_qty} />\r\n                                                </Grid>\r\n                                                {\r\n                                                    item.type == \"UNIT\" ? <>\r\n                                                        <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                            <CustomInput disabled={true} title=\"Free Unit\" value={item.amount} />\r\n                                                        </Grid>\r\n                                                    </> : <>\r\n                                                            <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                                <CustomInput disabled={true} title=\"Percentage\" value={item.amount} />\r\n                                                            </Grid>\r\n                                                        </>\r\n                                                }\r\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => onDelete(item.discount_id)}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )\r\n\r\n                                    })\r\n                                }\r\n                            </> : null\r\n                        }\r\n\r\n                        {\r\n                            state.showDiscount ? <>\r\n                                <Divider />\r\n                                <Grid container spacing={5}>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                        <CustomCombobox req={true} name=\"Discount Type\" items={[\"UNIT\", \"PERCENT\"]} value={state.discount_type}\r\n                                            handleChange={(e) => handleChange(e, 'discount_type')} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                        <CustomInput req={true} title=\"Min QTY\" value={state.min_qty}\r\n                                            handleChange={(e) => handleChange(e, 'min_qty')} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                        <CustomInput req={true} title=\"Max QTY\" value={state.max_qty}\r\n                                            handleChange={(e) => handleChange(e, 'max_qty')} />\r\n                                    </Grid>\r\n                                    {\r\n                                        state.discount_type == \"UNIT\" ? <>\r\n\r\n                                            <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                <CustomInput req={true} title=\"Free Unit\" value={state.amount}\r\n                                                    handleChange={(e) => handleChange(e, 'amount')} />\r\n                                            </Grid>\r\n                                        </> : <>\r\n\r\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                                    <CustomInput req={true} title=\"Percentage\" value={state.amount}\r\n                                                        handleChange={(e) => handleChange(e, 'amount')} />\r\n                                                </Grid>\r\n                                            </>\r\n                                    }\r\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\r\n                                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => onAddDiscount()}>\r\n                                            <AddIcon />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                                : null\r\n                        }\r\n\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddItemPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditItemPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.item\n    const [state, setState] = useState({\n        item_id: update_id,\n        company_entity_name: '',\n        item_name: \"\",\n        company_id: '',\n        category_id: '',\n        category_name: '',\n        unit_price: '',\n        unit: '',\n        tag: '',\n        companyIDList: localStorage.getItem('company_id').split(', '),\n        categoryList: [],\n        categoryNameList: [],\n        unitList: [],\n        showDiscount: false,\n        discount_type: \"UNIT\",\n        min_qty: '',\n        max_qty: '',\n        amount: '',\n        discountList: []\n    })\n\n    useEffect(() => {\n        props.fetchCompany();\n        getUnit()\n        getGroup()\n        getGroupbyId()\n        getDiscount(update_id)\n    }, [])\n\n    const getUnit = () => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        };\n        fetch(`${SERVER_URL}getUnit`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log(\"unitData--> \", data)\n                let list = []\n                data.map(unit => {\n                    list.push(unit.unit_name)\n                })\n                setState((state) => ({\n                    ...state,\n                    unitList: [...list],\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getGroup = () => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        };\n        fetch(`${SERVER_URL}getCategory`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n\n                let list = []\n                data.map(item => {\n                    list.push(item.category_name)\n                })\n                console.log(\"categoryData--> \", list)\n                setState((state) => ({\n                    ...state,\n                    categoryList: data,\n                    categoryNameList: [...list]\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getGroupbyId = () => {\n        let body = {\n            item_id: update_id\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        };\n        fetch(`${SERVER_URL}getItemsbyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log(\"get Data@--> \", data)\n                setState((state) => ({\n                    ...state,\n                    company_entity_name: data.company_entity_name,\n                    item_name: data.item_name,\n                    company_id: data.company_id,\n                    category_id: data.category_id,\n                    category_name: data.category_name,\n                    unit_price: data.unit_price,\n                    unit: data.unit,\n                    tag: data.tag\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getDiscount = (update_id) => {\n        let body = {\n            item_id: update_id\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        };\n        fetch(`${SERVER_URL}getDiscountsbyItemId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log(\"discountList===> \", data)\n                setState((state) => ({\n                    ...state,\n                    discountList: data,\n                    showDiscount: data.length != 0 ? true : false\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const objArray2Array = (original) => {\n        console.log('originall ====> ', state.companyIDList)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    if (state.companyIDList.includes(item.company_id.toString()))\n                        tmp.push(item?.company_entity_name);\n                })\n                console.log('Temp==> ', tmp)\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const companies = objArray2Array(companyData.company)\n\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n        if (object[0] != null) {\n            setState({\n                ...state,\n                company_id: object[0].company_id.toString()\n            })\n        }\n\n    }\n\n    const setGroupIdfromGroupName = (category_name) => {\n        let object = state.categoryList.filter(item => item.category_name == category_name)\n        if (object[0] != null) {\n            console.log(\"object[0].category_id==>\", object[0].category_id)\n            setState({\n                ...state,\n                category_id: object[0].category_id\n            })\n        }\n\n    }\n\n    const handleChange = (e, field) => {\n\n        if (field == 'company_entity_name') {\n            setCompanyIdfromCompanyName(e)\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else if (field == 'category_name') {\n            setGroupIdfromGroupName(e)\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else if (field == 'unit') {\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else if (field == \"discount_type\") {\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const onSave = () => {\n        if (state.company_entity_name == null || state.company_entity_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else if (state.category_name == null || state.category_name == \"\") {\n            notify(\"Please enter group name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    item_id: state.item_id,\n                    item_name: state.item_name,\n                    category_id: state.category_id,\n                    company_id: state.company_id,\n                    unit_price: state.unit_price,\n                    unit: state.unit,\n                    tag: state.tag\n                })\n            };\n            fetch(`${SERVER_URL}updateItem`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.category_id == 0) {\n                        notify(\"This Item is already exist.\")\n                        return\n                    } else if (data.category_id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onAddDiscount = () => {\n        if (state.min_qty == \"\") {\n            notify(\"Please enter min quantity.\")\n        } else if (state.max_qty == \"\") {\n            notify(\"Please enter max quantity.\")\n        } else if (state.amount == \"\") {\n            notify(\"Please enter amount\")\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    item_id: state.item_id,\n                    amount: state.amount,\n                    min_quantity: state.min_qty,\n                    max_quantity: state.max_qty,\n                    type: state.discount_type\n                })\n            };\n            fetch(`${SERVER_URL}createDiscount`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.discount_id == 0) {\n                        notify(\"This discount is already exist.\")\n                        return\n                    } else if (data.discount_id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                        let list = state.discountList\n                        list.push({\n                            item_id: state.item_id,\n                            amount: state.amount,\n                            min_quantity: state.min_qty,\n                            max_quantity: state.max_qty,\n                            type: state.discount_type,\n                            discount_id: data.discount_id\n                        })\n                        setState((state) => ({\n                            ...state,\n                            min_qty: '',\n                            max_qty: '',\n                            amount: '',\n                            discountList: list\n                        }))\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onDelete = (discount_id) => {\n        console.log(\"Discount ID ==> \", discount_id)\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                discount_id: discount_id\n            })\n        };\n        fetch(`${SERVER_URL}removeDiscount`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                let list = state.discountList\n                list = list.filter(item => {\n                    return item.discount_id != discount_id\n                })\n                setState((state) => ({\n                    ...state,\n                    discountList: list\n                }))\n            })\n            .catch(error => {\n                notify('Something went wrong!\\n' + error)\n                console.error('There was an error!', error);\n            });\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/item\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Item\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Item Name\" value={state.item_name}\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Category Name\" items={state.categoryNameList} value={state.category_name}\n                                    handleChange={(e) => handleChange(e, 'category_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n\n\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Unit Price\" value={state.unit_price}\n                                    handleChange={(e) => handleChange(e, 'unit_price')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Unit\" items={state.unitList} value={state.unit}\n                                    handleChange={(e) => handleChange(e, 'unit')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Tag\" value={state.tag}\n                                    handleChange={(e) => handleChange(e, 'tag')} />\n                            </Grid>\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {\n                            state.discountList.length != 0 ? <>\n                                {\n                                    state.discountList.map(item => {\n                                        return (\n                                            <Grid container spacing={1}>\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                    <CustomInput disabled={true} title=\"Discount Type\" value={item.type} />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                    <CustomInput disabled={true} title=\"Min QTY\" value={item.min_quantity} />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                    <CustomInput disabled={true} title=\"Max QTY\" value={item.max_quantity} />\n                                                </Grid>\n                                                {\n                                                    item.type == \"UNIT\" ? <>\n                                                        <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                            <CustomInput disabled={true} title=\"Free Unit\" value={item.amount} />\n                                                        </Grid>\n                                                    </> : <>\n                                                            <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                                <CustomInput disabled={true} title=\"Percentage\" value={item.amount} />\n                                                            </Grid>\n                                                        </>\n                                                }\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => onDelete(item.discount_id)}>\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Grid>\n                                            </Grid>\n                                        )\n\n                                    })\n                                }\n                            </> : null\n                        }\n\n                        {\n                            state.showDiscount ? <>\n                                <Divider />\n                                <Grid container spacing={5}>\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                        <CustomCombobox req={true} name=\"Discount Type\" items={[\"UNIT\", \"PERCENT\"]} value={state.discount_type}\n                                            handleChange={(e) => handleChange(e, 'discount_type')} />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                        <CustomInput req={true} title=\"Min QTY\" value={state.min_qty}\n                                            handleChange={(e) => handleChange(e, 'min_qty')} />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                        <CustomInput req={true} title=\"Max QTY\" value={state.max_qty}\n                                            handleChange={(e) => handleChange(e, 'max_qty')} />\n                                    </Grid>\n                                    {\n                                        state.discount_type == \"UNIT\" ? <>\n\n                                            <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                <CustomInput req={true} title=\"Free Unit\" value={state.amount}\n                                                    handleChange={(e) => handleChange(e, 'amount')} />\n                                            </Grid>\n                                        </> : <>\n\n                                                <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                                    <CustomInput req={true} title=\"Percentage\" value={state.amount}\n                                                        handleChange={(e) => handleChange(e, 'amount')} />\n                                                </Grid>\n                                            </>\n                                    }\n                                    <Grid item xs={12} sm={6} md={6} lg={2} className={classes.formContainer}>\n                                        <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => onAddDiscount()}>\n                                            <AddIcon />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </>\n                                : null\n                        }\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditItemPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { FETCH_DISCOUNT_REQUEST, FETCH_DISCOUNT_SUCCESS, FETCH_DISCOUNT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    discount: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesDiscountReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_DISCOUNT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_DISCOUNT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                discount: action.discount\r\n            }\r\n        case FETCH_DISCOUNT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchDiscountRequest, fetchDiscountSuccess, fetchDiscountError } from \"../../redux/actions/OrderDiscountAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesDiscountReducer from \"../../redux/reducers/SalesDiscountReducer\";\r\n\r\nfunction fetchDiscount() {\r\n    return dispatch => {\r\n        dispatch(fetchDiscountRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getDiscountsbyCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchDiscountSuccess(res));\r\n                console.log(\"Get SalesItem===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDiscountError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchDiscount;","import {\r\n    FETCH_DISCOUNT_REQUEST,\r\n    FETCH_DISCOUNT_SUCCESS,\r\n    FETCH_DISCOUNT_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchDiscountRequest() {\r\n      return {\r\n          type: FETCH_DISCOUNT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchDiscountSuccess(discount) {\r\n    console.log(\"action===>\", discount)\r\n      return {\r\n          type: FETCH_DISCOUNT_SUCCESS,\r\n          discount: discount\r\n      }\r\n  }\r\n  \r\n  export function fetchDiscountError(error) {\r\n      return {\r\n          type: FETCH_DISCOUNT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchDiscount from \"../../../services/salesorder/SalesDiscountService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction DiscountPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const discountData = useSelector(state => state.discount);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    props.fetchDiscount()\n    setDataSource(discountData.discount);\n  }, [])\n\n  const columns = [\n    {\n      name: \"item_name\",\n      label: \"Item Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"min_quantity\",\n      label: \"Min Quantity\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"max_quantity\",\n      label: \"Max Quantity\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"amount\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"discount_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesorder/discount/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = discountData.discount[data.dataIndex].discount_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            discount_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removeDiscount`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      {/* <PageTitle title=\"Discounts\" button={[\"Add New\"]} data={dataSource} category=\"salesorder_discount\" history={history} /> */}\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Discounts\"}\n              // data={dataSource}\n              data={discountData.discount}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  discount: state.discount\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchDiscount: fetchDiscount\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscountPage);\n\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../../services/clientview/ClientViewService\";\r\n// import fetchUserView from \"../../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport DiscountPage from './Discount'\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddDiscountPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    const [state, setState] = useState({\r\n        item_name: '',\r\n        itemList: [],\r\n        itemNameList: [],\r\n        min_quantity: '',\r\n        max_quantity: '',\r\n        amount: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        getItems()\r\n    }, [])\r\n\r\n    const getItems = () => {\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body)\r\n        };\r\n        fetch(`${SERVER_URL}getItemsbyCompanyId`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                console.log(\"groupdData--> \", data)\r\n                let list = []\r\n                data.map(item => {\r\n                    list.push(item.item_name)\r\n                })\r\n                setState({\r\n                    ...state,\r\n                    itemList: data,\r\n                    itemNameList: list,\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    const setItemIdfromItemName = (item_name) => {\r\n        let object = state.itemList.filter(item => item.item_name == item_name)\r\n        if (object[0] != null) {\r\n            console.log(\"object[0].item_id==>\", object[0].item_id)\r\n            setState({\r\n                ...state,\r\n                item_id: object[0].item_id\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e, field) => {\r\n\r\n        if (field == 'item_name') {\r\n            setItemIdfromItemName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.item_name == null || state.item_name == \"\") {\r\n            notify(\"Please enter item name.\")\r\n            return\r\n        } else if (state.amount == null || state.amount == \"\") {\r\n            notify(\"Please enter amount.\")\r\n            return\r\n        } else if (state.min_quantity == null || state.min_quantity == \"\") {\r\n            notify(\"Please enter min quantity.\")\r\n            return\r\n        } else if (state.max_quantity == null || state.max_quantity == \"\") {\r\n            notify(\"Please enter max quantity.\")\r\n            return\r\n        } else if (Number(state.min_quantity) > Number(state.max_quantity)) {\r\n            notify(\"Please enter valid values.\")\r\n            return\r\n        } else if (Number(state.min_quantity) < 0) {\r\n            notify(\"Please enter valid min quality.\")\r\n            return\r\n        } else if (Number(state.max_quantity) < 0) {\r\n            notify(\"Please enter valid max quality.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    item_id: state.item_id,\r\n                    amount: state.amount,\r\n                    min_quantity: state.min_quantity,\r\n                    max_quantity: state.max_quantity\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createDiscount`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.discount_id == 0) {\r\n                        notify(\"This discount is already exist.\")\r\n                        return\r\n                    } else if (data.discount_id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState({\r\n                            ...state,\r\n                            item_id: '',\r\n                            amount: '',\r\n                            min_quantity: '',\r\n                            max_quantity: '',\r\n                            item_name: ''\r\n                        })\r\n\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.item_name == null || state.item_name == \"\") {\r\n            notify(\"Please enter item name.\")\r\n            return\r\n        } else if (state.amount == null || state.amount == \"\") {\r\n            notify(\"Please enter amount.\")\r\n            return\r\n        } else if (state.min_quantity == null || state.min_quantity == \"\") {\r\n            notify(\"Please enter min quantity.\")\r\n            return\r\n        } else if (state.max_quantity == null || state.max_quantity == \"\") {\r\n            notify(\"Please enter max quantity.\")\r\n            return\r\n        } else if (Number(state.min_quantity) > Number(state.max_quantity)) {\r\n            notify(\"Please enter valid values.\")\r\n            return\r\n        } else if (Number(state.min_quantity) < 0) {\r\n            notify(\"Please enter valid min quality.\")\r\n            return\r\n        } else if (Number(state.max_quantity) < 0) {\r\n            notify(\"Please enter valid max quality.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    item_id: state.item_id,\r\n                    amount: state.amount,\r\n                    min_quantity: state.min_quantity,\r\n                    max_quantity: state.max_quantity\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createDiscount`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.discount_id == 0) {\r\n                        notify(\"This discount is already exist.\")\r\n                        return\r\n                    } else if (data.discount_id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        history.push(\"/app/salesorder/item/add\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/item/add\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Item Discount\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Item Name\" items={state.itemNameList} value={state.item_name}\r\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Amount\" value={state.amount}\r\n                                    handleChange={(e) => handleChange(e, 'amount')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Min Quantity\" value={state.min_quantity}\r\n                                    handleChange={(e) => handleChange(e, 'min_quantity')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Max Quantity\" value={state.max_quantity}\r\n                                    handleChange={(e) => handleChange(e, 'max_quantity')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <DiscountPage/>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    // fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddDiscountPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchClientView from \"../../../services/clientview/ClientViewService\";\n// import fetchUserView from \"../../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../../common/config';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nfunction EditDiscountPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    const update_id = props.match.params.discount\n    const [state, setState] = useState({\n        item_name: update_id,\n        itemList: [],\n        itemNameList: [],\n        min_quantity: '',\n        max_quantity: '',\n        amount: ''\n    })\n\n    useEffect(() => {\n        getItems()\n        getDiscountbyId(update_id)\n    }, [])\n\n    const getItems = () => {\n        let body = {\n            company_id: localStorage.getItem('company_id')\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        };\n        fetch(`${SERVER_URL}getItemsbyCompanyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log(\"groupdData--> \", data)\n                let list = []\n                data.map(item => {\n                    list.push(item.item_name)\n                })\n                setState({\n                    ...state,\n                    itemList: data,\n                    itemNameList: list,\n                })\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getDiscountbyId = (update_id) => {\n        let body = {\n            discount_id: update_id\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        };\n        fetch(`${SERVER_URL}getDiscountsbyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log(\"get Data@--> \", data)\n                setState({\n                    ...state,\n                    item_id: data.item_id,\n                    item_name: data.item_name,\n                    min_quantity: data.min_quantity,\n                    max_quantity: data.max_quantity,\n                    amount: data.amount\n                })\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    const handleChange = (e, field) => {\n\n        if (field == \"item_name\") {\n            notify(\"You can't change the item name.\")\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n\n    }\n\n    const onSaveandNew = () => {\n        if (state.item_name == null || state.item_name == \"\") {\n            notify(\"Please enter item name.\")\n            return\n        } else if (state.amount == null || state.amount == \"\") {\n            notify(\"Please enter amount.\")\n            return\n        } else if (state.min_quantity == null || state.min_quantity == \"\") {\n            notify(\"Please enter min quantity.\")\n            return\n        } else if (state.max_quantity == null || state.max_quantity == \"\") {\n            notify(\"Please enter max quantity.\")\n            return\n        } else if (Number(state.min_quantity) > Number(state.max_quantity)) {\n            notify(\"Please enter valid values.\")\n            return\n        } else if (Number(state.min_quantity) < 0) {\n            notify(\"Please enter valid min quality.\")\n            return\n        } else if (Number(state.max_quantity) < 0) {\n            notify(\"Please enter valid max quality.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    discount_id: update_id,\n                    item_id: state.item_id,\n                    amount: state.amount,\n                    min_quantity: state.min_quantity,\n                    max_quantity: state.max_quantity\n                })\n            };\n            fetch(`${SERVER_URL}updateDiscount`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.discount_id == 0) {\n                        notify(\"This discount is already exist.\")\n                        return\n                    } else if (data.discount_id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/discount\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Item Discount\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Item Name\" value={state.item_name}\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Amount\" value={state.amount}\n                                    handleChange={(e) => handleChange(e, 'amount')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Min Quantity\" value={state.min_quantity}\n                                    handleChange={(e) => handleChange(e, 'min_quantity')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Max Quantity\" value={state.max_quantity}\n                                    handleChange={(e) => handleChange(e, 'max_quantity')} />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSaveandNew()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    // userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    // fetchUserView: fetchUserView,\n    fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditDiscountPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { FETCH_PROMOTION_REQUEST, FETCH_PROMOTION_SUCCESS, FETCH_PROMOTION_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    promotion: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesPromotionReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_PROMOTION_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_PROMOTION_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                promotion: action.promotion\r\n            }\r\n        case FETCH_PROMOTION_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchPromotionRequest, fetchPromotionSuccess, fetchPromotionError } from \"../../redux/actions/OrderPromotionAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesPromotionReducer from \"../../redux/reducers/SalesPromotionReducer\";\r\n\r\nfunction fetchPromotion() {\r\n    return dispatch => {\r\n        dispatch(fetchPromotionRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getPromotionsbyCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchPromotionSuccess(res));\r\n                console.log(\"Get SalesItem===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchPromotionError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchPromotion;","import {\r\n    FETCH_PROMOTION_REQUEST,\r\n    FETCH_PROMOTION_SUCCESS,\r\n    FETCH_PROMOTION_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchPromotionRequest() {\r\n      return {\r\n          type: FETCH_PROMOTION_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchPromotionSuccess(promotion) {\r\n    console.log(\"action===>\", promotion)\r\n      return {\r\n          type: FETCH_PROMOTION_SUCCESS,\r\n          promotion: promotion\r\n      }\r\n  }\r\n  \r\n  export function fetchPromotionError(error) {\r\n      return {\r\n          type: FETCH_PROMOTION_ERROR,\r\n          error: error\r\n      }\r\n  }","import { fetchCouponRequest, fetchCouponSuccess, fetchCouponError } from \"../../redux/actions/OrderCouponAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchCoupon() {\r\n    return dispatch => {\r\n        dispatch(fetchCouponRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getCoupons`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchCouponSuccess(res));\r\n                console.log(\"Get SalesItem===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCouponError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchCoupon;","import {\r\n    FETCH_COUPON_REQUEST,\r\n    FETCH_COUPON_SUCCESS,\r\n    FETCH_COUPON_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchCouponRequest() {\r\n      return {\r\n          type: FETCH_COUPON_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchCouponSuccess(coupon) {\r\n    console.log(\"action===>\", coupon)\r\n      return {\r\n          type: FETCH_COUPON_SUCCESS,\r\n          coupon: coupon\r\n      }\r\n  }\r\n  \r\n  export function fetchCouponError(error) {\r\n      return {\r\n          type: FETCH_COUPON_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchPromotion from \"../../../services/salesorder/SalesPromotionService\";\nimport fetchCoupon from \"../../../services/salesorder/SalesCouponService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction PromotionPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([\n    {\n      promotion_id: 1,\n      code: 'AAAAAA',\n      type: 'PERCENT',\n      amount: 10,\n    },\n    {\n      promotion_id: 2,\n      code: 'BBBBBB',\n      type: 'UNIT',\n      amount: 5,\n    },\n    {\n      promotion_id: 3,\n      code: 'CCCCCC',\n      type: 'TOTAL',\n      amount: 560,\n    }\n  ]);\n  const promotionData = useSelector(state => state.promotion);\n  const couponData = useSelector(state => state.coupon);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    props.fetchPromotion()\n    setDataSource(promotionData.promotion);\n    props.fetchCoupon()\n    \n  }, [])\n\n  const columns = [\n    {\n      name: \"type\",\n      label: \"Type\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"promotion_id\",\n      label: \"Edit\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  const coupon_columns = [\n    {\n      name: \"code\",\n      label: \"Code\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"type\",\n      label: \"Type\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"start_date\",\n      label: \"Start Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"end_date\",\n      label: \"Expiration Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"coupon_id\",\n      label: \"Edit\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionCouponEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/salesorder/promotion/\" + i + \"/edit\");\n  }\n\n  const actionCouponEdit = (e, i) => {\n    history.push(\"/app/salesorder/coupon/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = promotionData.promotion[data.dataIndex].promotion_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            promotion_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removePromotion`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const coupon_options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = couponData.coupon[data.dataIndex].coupon_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            coupon_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removeCoupon`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Company Loyalty\" button={[\"Add New\"]} data={dataSource} category=\"salesorder_promotion\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Company Loyalty\"}\n              // data={dataSource}\n              data={promotionData.promotion}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Divider/>\n      <PageTitle title=\"Coupon Loyalty\" button={[\"Add New\"]} data={dataSource} category=\"salesorder_coupon\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Coupon Loyalty\"}\n              // data={dataSource}\n              data={couponData.coupon}\n              columns={coupon_columns}\n              options={coupon_options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  promotion: state.promotion,\n  coupon: state.coupon\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchPromotion: fetchPromotion,\n  fetchCoupon: fetchCoupon\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PromotionPage);\n\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddPromotionPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        code: '',\r\n        typeList: ['PERCENT', 'FLOAT'],\r\n        type: 'PERCENT',\r\n        amount: '',\r\n        client_entity_name: '',\r\n        client_id: '',\r\n        clients: [],\r\n        clientNameList: [],\r\n    })\r\n    useEffect(() => {\r\n        getClient(localStorage.getItem('company_id'));\r\n    }, [])\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    const getClient = (company_id) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                company_id: company_id\r\n            })\r\n        };\r\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                console.log(\"Response Data=============>\", data)\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                // clientData.client = data\r\n                let temp = getClientNameList(data)\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    clients: temp\r\n                }))\r\n\r\n            })\r\n            .catch(error => {\r\n                notify('Something went wrong!\\n' + error)\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    const getClientNameList = (original) => {\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        if (state.type == \"PERCENT\") {\r\n            if (Number(e.target.value) > 100) {\r\n                notify(\"This field should smaller than 100.\")\r\n            } else {\r\n                setState({\r\n                    ...state,\r\n                    [field]: e.target.value,\r\n                })\r\n            }\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [field]: e.target.value,\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleTypeChange = (e, field) => {\r\n\r\n        if (field == \"type\") {\r\n            setState({\r\n                ...state,\r\n                type: e\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleClientChange = (e, field) => {\r\n\r\n        if (field == \"client_entity_name\") {\r\n            if (state.clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_entity_name: e,\r\n                    client_id: state.clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        console.log(state.client_entity_name, state.client_id)\r\n        if (state.amount == null || state.amount == '') {\r\n            notify(\"Please enter amount.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    type: state.type,\r\n                    amount: state.amount,\r\n                    client_id: state.client_id\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createPromotion`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.promotion_id == 0) {\r\n                        notify(\"This promotion code is already exist.\")\r\n                        return\r\n                    } else if (data.promotion_id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            ...state,\r\n                            amount: \"\",\r\n                            client_id: ''\r\n                        }))\r\n\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.amount == null || state.amount == '') {\r\n            notify(\"Please enter amount.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    type: state.type,\r\n                    amount: state.amount,\r\n                    client_id: state.client_id\r\n                })\r\n            };\r\n            console.log(\"Body ===> \", requestOptions)\r\n            fetch(`${SERVER_URL}createPromotion`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.promotion_id == 0) {\r\n                        notify(\"This promotion code is already exist.\")\r\n                        return\r\n                    } else if (data.promotion_id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        history.push(\"/app/salesorder/promotion\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/promotion\");\r\n    }\r\n\r\n    // const clients = clients.map(item => {\r\n    //     return item?.value\r\n    // })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Company Loyalty\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Type\" items={state.typeList} value={state.type}\r\n                                    handleChange={(e) => handleTypeChange(e, 'type')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title={state.type == 'FLAT' ? 'Amount(Price)' : 'Amount(%)'} value={state.amount}\r\n                                    handleChange={(e) => handleChange(e, 'amount')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={false} name=\"Client Name\" items={state.clients.map(item => {\r\n                                    return item?.value\r\n                                })} value={state.client_entity_name}\r\n                                    handleChange={(e) => handleClientChange(e, 'client_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddPromotionPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchClientView from \"../../../services/clientview/ClientViewService\";\nimport { SERVER_URL } from '../../../common/config';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nfunction EditPromotionPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n\n    // input form datas\n    const update_id = props.match.params.promotion\n    const [state, setState] = useState({\n        promotion_id: update_id,\n        typeList: ['PERCENT', 'FLAT'],\n        type: 'PERCENT',\n        amount: '',\n        client_entity_name: '',\n        client_id: '',\n        clients: [],\n        clientNameList: [],\n    })\n    useEffect(() => {\n        getPromotion(update_id)\n        getClient(localStorage.getItem('company_id'));\n    }, [])\n\n    const getPromotion = (update_id) => {\n        let body = {\n            promotion_id: update_id\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        };\n        fetch(`${SERVER_URL}getPromotionsbyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState({\n                    ...state,\n                    type: data.type,\n                    amount: data.amount,\n                    client_id: data.client_id,\n                    client_entity_name: data.client_entity_name\n                })\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n    //Show notification\n    const notify = (message) => toast(message);\n\n    const getClient = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                // clientData.client = data\n                let temp = getClientNameList(data)\n                setState(prevState => ({\n                    ...prevState,\n                    clients: temp\n                }))\n\n            })\n            .catch(error => {\n                notify('Something went wrong!\\n' + error)\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    //input fields event\n    const handleChange = (e, field) => {\n        if (state.type == \"PERCENT\") {\n            if (Number(e.target.value) > 100) {\n                notify(\"This field should smaller than 100.\")\n            } else {\n                setState({\n                    ...state,\n                    [field]: e.target.value,\n                })\n            }\n        } else {\n            setState({\n                ...state,\n                [field]: e.target.value,\n            })\n        }\n\n    }\n\n    const handleTypeChange = (e, field) => {\n\n        if (field == \"type\") {\n            setState({\n                ...state,\n                type: e\n            })\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_entity_name\") {\n            if (state.clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_entity_name: e,\n                    client_id: state.clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n    const onSaveandNew = () => {\n        if (state.amount == null || state.amount == '') {\n            notify(\"Please enter amount.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    promotion_id: update_id,\n                    type: state.type,\n                    amount: state.amount,\n                    client_id: state.client_id\n                })\n            };\n            fetch(`${SERVER_URL}updatePromotion`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.promotion_id == 0) {\n                        notify(\"This promotion code is already exist.\")\n                        return\n                    } else if (data.promotion_id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/promotion\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Promotion\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            \n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Type\" items={state.typeList} value={state.type}\n                                    handleChange={(e) => handleTypeChange(e, 'type')} />\n                            </Grid>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title={state.type == 'FLAT' ? 'Amount(Price)' : 'Amount(%)'} value={state.amount}\n                                    handleChange={(e) => handleChange(e, 'amount')} />\n                            </Grid>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomCombobox req={false} name=\"Client Name\" items={state.clients.map(item => {\n                                    return item?.value\n                                })} value={state.client_entity_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_entity_name')} />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSaveandNew()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditPromotionPage);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\r\nimport moment from 'moment'\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddCouponPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    // input form datas\r\n    const curDate = new Date()\r\n    const [state, setState] = useState({\r\n        code: '',\r\n        typeList: ['PERCENT', 'FLOAT', 'UNIT'],\r\n        type: 'PERCENT',\r\n        amount: '',\r\n        start_date: moment(new Date(curDate.getFullYear(), curDate.getMonth(), 1)).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        end_date: moment(new Date(curDate.getFullYear(), curDate.getMonth() + 1, 0)).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    })\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        if (state.type == \"PERCENT\") {\r\n            if (Number(e.target.value) > 100) {\r\n                notify(\"This field should smaller than 100.\")\r\n            } else {\r\n                setState({\r\n                    ...state,\r\n                    [field]: e.target.value,\r\n                })\r\n            }\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [field]: e.target.value,\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleTypeChange = (e, field) => {\r\n\r\n        if (field == \"type\") {\r\n            setState({\r\n                ...state,\r\n                type: e\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, field) => {\r\n        setState(prevState => ({\r\n            ...prevState, [field]: moment(date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\r\n        }))\r\n    };\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.code == null || state.code == '') {\r\n            notify(\"Please enter code.\")\r\n            return\r\n        } else if (state.amount == null || state.amount == '') {\r\n            notify(\"Please enter amount.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    code: state.code,\r\n                    type: state.type,\r\n                    amount: state.amount,\r\n                    start_date: state.start_date,\r\n                    end_date: state.end_date\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createCoupon`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.coupon_id == 0) {\r\n                        notify(\"This promotion code is already exist.\")\r\n                        return\r\n                    } else if (data.coupon_id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            ...state,\r\n                            code: \"\",\r\n                            amount: \"\",\r\n                        }))\r\n\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.amount == null || state.amount == '') {\r\n            notify(\"Please enter amount.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    code: state.code,\r\n                    type: state.type,\r\n                    amount: state.amount,\r\n                    start_date: state.start_date,\r\n                    end_date: state.end_date\r\n                })\r\n            };\r\n            console.log(\"Body ===> \", requestOptions)\r\n            fetch(`${SERVER_URL}createCoupon`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.coupon_id == 0) {\r\n                        notify(\"This promotion code is already exist.\")\r\n                        return\r\n                    } else if (data.coupon_id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        history.push(\"/app/salesorder/promotion\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/promotion\");\r\n    }\r\n\r\n    // const clients = clients.map(item => {\r\n    //     return item?.value\r\n    // })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Coupon Loyalty\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Code\" value={state.code}\r\n                                    handleChange={(e) => handleChange(e, 'code')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Type\" items={state.typeList} value={state.type}\r\n                                    handleChange={(e) => handleTypeChange(e, 'type')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title={state.type == 'FLAT' ? 'Amount(price)' : (state.type == 'PERCENT' ? 'Amount(%)' : 'Amount(price)')} value={state.amount}\r\n                                    handleChange={(e) => handleChange(e, 'amount')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomDatePicker title=\"Start Date\" selectedDate={state.start_date} handleChange={(e) => handleDateChange(e, 'start_date')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomDatePicker title=\"Expiration Date\" selectedDate={state.end_date} handleChange={(e) => handleDateChange(e, 'end_date')} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddCouponPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../../common/config';\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport moment from 'moment'\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nfunction EditCouponPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n\n    // input form datas\n    const update_id = props.match.params.coupon\n    const [state, setState] = useState({\n        coupon_id: update_id,\n        code: '',\n        typeList: ['PERCENT', 'FLOAT', 'UNIT'],\n        type: 'PERCENT',\n        amount: '',\n        start_date: '',\n        end_date: ''\n    })\n    useEffect(() => {\n        getCoupon(update_id)\n    }, [])\n\n    const getCoupon = (update_id) => {\n        let body = {\n            coupon_id: update_id\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        };\n        fetch(`${SERVER_URL}getCouponsbyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log(\"_____________________\", data)\n                setState({\n                    ...state,\n                    code: data.code,\n                    type: data.type,\n                    amount: data.amount,\n                    start_date: data.start_date,\n                    end_date: data.end_date\n                })\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n    //Show notification\n    const notify = (message) => toast(message);\n\n    //input fields event\n    const handleChange = (e, field) => {\n        if (state.type == \"PERCENT\") {\n            if (Number(e.target.value) > 100) {\n                notify(\"This field should smaller than 100.\")\n            } else {\n                setState({\n                    ...state,\n                    [field]: e.target.value,\n                })\n            }\n        } else {\n            setState({\n                ...state,\n                [field]: e.target.value,\n            })\n        }\n\n    }\n\n    const handleTypeChange = (e, field) => {\n\n        if (field == \"type\") {\n            setState({\n                ...state,\n                type: e\n            })\n        }\n    }\n\n    const handleDateChange = (date, field) => {\n        setState(prevState => ({\n            ...prevState, [field]: moment(date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n        }))\n    };\n\n    const onSave = () => {\n        if (state.code == null || state.code == '') {\n            notify(\"Please enter code.\")\n            return\n        } else if (state.amount == null || state.amount == '') {\n            notify(\"Please enter amount.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    coupon_id: state.coupon_id,\n                    code: state.code,\n                    type: state.type,\n                    amount: state.amount,\n                    start_date: state.start_date,\n                    end_date: state.end_date\n                })\n            };\n            fetch(`${SERVER_URL}updateCoupon`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.coupon_id == 0) {\n                        notify(\"This promotion code is already exist.\")\n                        return\n                    } else if (data.coupon_id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/promotion\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Coupon\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Code\" value={state.code}\n                                    handleChange={(e) => handleChange(e, 'code')} />\n                            </Grid>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Type\" items={state.typeList} value={state.type}\n                                    handleChange={(e) => handleTypeChange(e, 'type')} />\n                            </Grid>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title={state.type == 'FLAT' ? 'Amount(price)' : (state.type == 'PERCENT' ? 'Amount(%)' : 'Amount(price)')} value={state.amount}\n                                    handleChange={(e) => handleChange(e, 'amount')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomDatePicker title=\"Start Date\" selectedDate={state.start_date} handleChange={(e) => handleDateChange(e, 'start_date')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomDatePicker title=\"Expiration Date\" selectedDate={state.end_date} handleChange={(e) => handleDateChange(e, 'end_date')} />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditCouponPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n    widgetWrapper: {\r\n        display: \"flex\",\r\n        color: '#fff',\r\n        // minHeight: \"100%\",\r\n    },\r\n    incomeWidget: {\r\n        backgroundImage:\r\n            'linear-gradient( 90deg, #00A3EE 0%, rgb(255,255,255) 150%)',\r\n    },\r\n    expenseWidget: {\r\n        backgroundImage:\r\n            'linear-gradient( 90deg, #F03434 0%, rgb(255,255,255) 150%)',\r\n    },\r\n    profitWidget: {\r\n        backgroundImage:\r\n            'linear-gradient( 90deg, #70A456 0%, rgb(255,255,255) 150%)',\r\n    },\r\n    widgetHeader: {\r\n        padding: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n        color: '#fff',\r\n        /* display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\", */\r\n    },\r\n    widgetRoot: {\r\n        boxShadow: theme.customShadows.widget,\r\n        position: 'relative',\r\n    },\r\n    widgetBody: {\r\n        paddingBottom: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n        paddingLeft: theme.spacing(3),\r\n    },\r\n    noPadding: {\r\n        padding: 0,\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        overflow: \"hidden\",\r\n    },\r\n    moreButton: {\r\n        // margin: -theme.spacing(1),\r\n        position: 'absolute',\r\n        right: 0,\r\n        padding: 0,\r\n        width: 40,\r\n        height: 40,\r\n        // color: theme.palette.text.hint,\r\n        color: '#fff',\r\n        /* \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: \"rgba(255, 255, 255, 0.35)\",\r\n        }, */\r\n    },\r\n    iconArea: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        paddingRight: 10,\r\n    },\r\n    iconContainer: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 60,\r\n        backgroundColor: '#fff',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    incomeIcon: {\r\n        color: '#00A3EE',\r\n    },\r\n    expenseIcon: {\r\n        color: '#F03434',\r\n    },\r\n    profitIcon: {\r\n        color: '#70A456',\r\n    },\r\n    totalRight: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Paper,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n    Divider,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\nimport moment from 'moment'\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function TotalWidget({\r\n    children,\r\n    title,\r\n    noBodyPadding,\r\n    bodyClass,\r\n    disableWidgetMenu,\r\n    header,\r\n    sales_target,\r\n    current_total_sales,\r\n    date,\r\n    ...props\r\n}) {\r\n    var classes = useStyles();\r\n    const createIcon = (title) => {\r\n        switch (title) {\r\n            case \"Sales Target\":\r\n                return (\r\n                    <div className={classes.iconContainer}>\r\n                        <Icons.LocalAtm className={classes.incomeIcon} />\r\n                    </div>\r\n                )\r\n            case \"Current Total Sales\":\r\n                return (\r\n                    <div className={classes.iconContainer}>\r\n                        <Icons.ShoppingCart className={classes.expenseIcon} />\r\n                    </div>\r\n                )\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.widgetWrapper}>\r\n            <Paper className={classes.paper} classes={{\r\n                root: classnames(classes.widgetRoot,\r\n                    { [classes.incomeWidget]: title === \"Sales Target\" },\r\n                    { [classes.expenseWidget]: title === \"Current Total Sales\" },\r\n                )\r\n            }}>\r\n                <div className={classes.widgetHeader}>\r\n                    <Grid container>\r\n                        <Grid item lg={8} md={8} sm={8} xs={6}>\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h4\" color=\"inherit\">\r\n                                    {title}\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                            { title == \"Sales Target\" ?\r\n                                <React.Fragment>\r\n                                    <Typography variant=\"h6\">\r\n                                        {moment(new Date()).format('YYYY-MM')}\r\n                                </Typography>\r\n                                </React.Fragment> : <React.Fragment>\r\n                                    <Typography variant=\"h6\">\r\n                                        {moment(new Date()).format('YYYY-MM-DD')}\r\n                                </Typography>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                        </Grid>\r\n                        <Grid item className={classes.iconArea} lg={4} md={4} sm={4} xs={6}>\r\n                            {createIcon(title)}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <Grid container className={classes.widgetHeader}>\r\n                    \r\n                    <Grid item lg={6} md={6} sm={6} xs={6} className={classes.totalRight}>\r\n                        <Typography variant=\"h3\" color=\"inherit\">\r\n                            {title == \"Sales Target\" ? sales_target : current_total_sales }\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <div\r\n                    className={classnames(classes.widgetBody, {\r\n                        [classes.noPadding]: noBodyPadding,\r\n                        [bodyClass]: bodyClass,\r\n                    })}\r\n                >\r\n                    {children}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  \r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Widget from \"../../../../../components/Widget/Widget\";\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport default function CashFlow({\r\n    title,\r\n    data,\r\n    ...props\r\n}) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <Widget title={title} disableWidgetMenu={true}>\r\n            <div>\r\n                <Line data={data} />\r\n            </div>\r\n        </Widget>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n    \r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TableContainer, TableHead, TableRow, TableCell, TableBody, Table, Paper } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Widget from \"../../../../../components/Widget/Widget\";\r\n\r\nexport default function TopWidget({\r\n    data,\r\n    title,\r\n    type,\r\n    ...props\r\n}) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <Widget title={title} disableWidgetMenu={true}>\r\n            <div>\r\n                <TableContainer>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Ranking</TableCell>\r\n                                <TableCell>{type==\"Unit\"?'Category Name': 'Name'}</TableCell>\r\n                                <TableCell align=\"right\">Amount</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data.map((row, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell>{type==\"Unit\"?row.full_name:row.full_name}</TableCell>\r\n                                    <TableCell align=\"right\">{type==\"Unit\"?row.net_total+\" Units\":\"Rp \" + row.net_total}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </Widget>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { SERVER_URL } from '../../../common/config';\n\nfunction CompanyTarget({\n  companyTarget,\n  ...props\n}) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    // props.fetchSalesClientView()\n    // setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"full_name\",\n      label: \"Company User\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"net_total\",\n      label: \"Current Sales\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_target\",\n      label: \"Sales Target\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Company Target\"}\n              data={companyTarget}\n              // data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyTarget);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { SERVER_URL } from '../../../common/config';\n\nfunction ItemTarget({\n  itemTarget,\n  type,\n  ...props\n}) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  useEffect(() => {\n    console.log(\"===========>\", itemTarget)\n  }, [])\n  const columns = [\n    {\n      name: \"full_name\",\n      label: \"Item Category\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"net_total\",\n      label: \"Current Sales\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: type=\"Unit\"?\"unit\":\"amount\",\n      label: \"Sales Target\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Item Target\"}\n              data={itemTarget}\n              // data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ItemTarget);\n\n","import { FETCH_GROUP_REQUEST, FETCH_GROUP_SUCCESS, FETCH_GROUP_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    group: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesGroupReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_GROUP_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_GROUP_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                group: action.group\r\n            }\r\n        case FETCH_GROUP_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchGroupRequest, fetchGroupSuccess, fetchGroupError } from \"../../redux/actions/OrderGroupAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesGroupReducer from \"../../redux/reducers/SalesGroupReducer\";\r\n\r\nfunction fetchGroup() {\r\n    return dispatch => {\r\n        dispatch(fetchGroupRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getCategory`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchGroupSuccess(res));\r\n                console.log(\"Get SalesItem===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchGroupError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchGroup;","import {\r\n    FETCH_GROUP_REQUEST,\r\n    FETCH_GROUP_SUCCESS,\r\n    FETCH_GROUP_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchGroupRequest() {\r\n      return {\r\n          type: FETCH_GROUP_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchGroupSuccess(group) {\r\n    console.log(\"action===>\", group)\r\n      return {\r\n          type: FETCH_GROUP_SUCCESS,\r\n          group: group\r\n      }\r\n  }\r\n  \r\n  export function fetchGroupError(error) {\r\n      return {\r\n          type: FETCH_GROUP_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Typography, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport { DatePicker } from \"@material-ui/pickers\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\nimport TotalWidget from \"./components/TotalWidget/TotalWidget\";\nimport CashFlow from \"./components/CashFlow/CashFlow\";\nimport TopWidget from \"./components/TopWidget/TopWidget\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CompanyTarget from './CompanyTarget'\nimport ItemTarget from './ItemTarget'\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport fetchGroup from \"../../../services/salesorder/SalesGroupService\";\nimport { PresentToAll } from \"@material-ui/icons\";\n\nfunction TargetPage(props) {\n  let history = useHistory();\n  var classes = useStyles();\n  const [activate, setActivate] = useState(true)\n  // const [company, setCompany] = useState('Default')\n  const [item, setItem] = useState('Default')\n  const companyData = useSelector(state => state.company);\n  const groupData = useSelector(state => state.group);\n  const curDate = new Date()\n  const [state, setState] = useState({\n    top3Data: [],\n    graphData: [],\n    // date: curDate,\n    start_date: new Date(curDate.getFullYear(), curDate.getMonth(), 1),\n    end_date: curDate,\n    company_id: localStorage.getItem('company_id'),\n    company_entity_name: 'All',\n    companyIDList: localStorage.getItem('company_id').split(', '),\n    item_id: '0',\n    item_name: 'All',\n    category: 'Amount',\n    sales_target: '',\n    current_total_sales: '',\n    companyTarget: [],\n    itemTarget: [],\n  })\n  const categoryList = [\n    'Amount',\n    'Unit'\n  ]\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    props.fetchGroup()\n    console.log(groupData)\n    if (activate) {\n      getSalesTargetbyCompanyId(state.company_id)\n      getCurrentSalesbyCompanyID(state.company_id, state.start_date, state.end_date)\n      getUsersTargetbyCompanyID(state.company_id, state.start_date, state.end_date)\n      setState(prevState => ({\n        ...prevState,\n        category: \"Amount\",\n      }))\n      for (let i = 0; i < curDate.getMonth() + 1; i++) {\n\n        let s_date1 = new Date(curDate.getFullYear(), i, 1)\n        let e_date1 = new Date(curDate.getFullYear(), i + 1, 0)\n        getGraphData(state.company_id, s_date1, e_date1)\n      }\n    } else {\n      getCategorySalesTarget(state.item_id)\n    }\n\n  }, [])\n\n  const getCompanyList = (original) => {\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        if (state.companyIDList.length != 1) {\n          tmp.push(\"All\")\n        }\n        original.map(item => {\n          if (state.companyIDList.includes(item?.company_id.toString())) {\n            tmp.push(item?.company_entity_name);\n          }\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const getItemList = (original) => {\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        if (original.length != 1) {\n          tmp.push(\"All\")\n        }\n        original.map(item => {\n          tmp.push(item?.category_name);\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companyList = getCompanyList(companyData.company)\n\n  const itemList = getItemList(groupData.group)\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let com_id = ''\n    if (company_entity_name == \"All\") {\n      com_id = state.companyIDList.join(', ');\n      setState((prevState) => ({\n        ...prevState,\n        company_id: com_id,\n        category: \"Amount\",\n      }))\n      state.graphData = []\n\n      getSalesTargetbyCompanyId(com_id)\n      getCurrentSalesbyCompanyID(com_id, state.start_date, state.end_date)\n      getUsersTargetbyCompanyID(com_id, state.start_date, state.end_date)\n      for (let i = 0; i < state.end_date.getMonth() + 1; i++) {\n\n        let s_date1 = new Date(state.end_date.getFullYear(), i, 1)\n        let e_date1 = new Date(state.end_date.getFullYear(), i + 1, 0)\n        getGraphData(com_id, s_date1, e_date1)\n      }\n    } else {\n      let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n      if (object[0] != null) {\n        com_id = object[0].company_id.toString()\n        setState((prevState) => ({\n          ...prevState,\n          company_id: com_id,\n          category: \"Amount\",\n        }))\n        state.graphData = []\n        getSalesTargetbyCompanyId(com_id)\n        getCurrentSalesbyCompanyID(com_id, state.start_date, state.end_date)\n        getUsersTargetbyCompanyID(com_id, state.start_date, state.end_date)\n\n        for (let i = 0; i < state.end_date.getMonth() + 1; i++) {\n\n          let s_date1 = new Date(state.end_date.getFullYear(), i, 1)\n          let e_date1 = new Date(state.end_date.getFullYear(), i + 1, 0)\n          getGraphData(com_id, s_date1, e_date1)\n        }\n      }\n    }\n  }\n\n  const getSalesTargetbyCompanyId = async (company_id) => {\n    setTimeout(() => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          company_id: company_id\n        })\n      };\n      fetch(`${SERVER_URL}getSalesTargetbyCompanyID`, requestOptions)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          if (!response.ok) {\n            // get error message from body or default to response status\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          }\n          setState((prevState) => ({\n            ...prevState,\n            sales_target: data.sales_target\n          }))\n\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }, 500)\n  }\n\n  const getCurrentSalesbyCompanyID = async (company_id, start_date, end_date) => {\n    setTimeout(() => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          company_id: company_id,\n          start_date: start_date,\n          end_date: end_date\n        })\n      };\n      fetch(`${SERVER_URL}getCurrentSalesbyCompanyID`, requestOptions)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          if (!response.ok) {\n            // get error message from body or default to response status\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          }\n          setState((prevState) => ({\n            ...prevState,\n            current_total_sales: data.current_total\n          }))\n\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }, 500)\n  }\n\n  const getCurrentSalesbyCategoryID = async (category_id, start_date, end_date) => {\n    setTimeout(() => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          category_id: category_id,\n          start_date: start_date,\n          end_date: end_date,\n          type: state.category\n        })\n      };\n      fetch(`${SERVER_URL}getCurrentSalesbyCategoryID`, requestOptions)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          if (!response.ok) {\n            // get error message from body or default to response status\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          }\n          setState((prevState) => ({\n            ...prevState,\n            current_total_sales: data.quantity\n          }))\n\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }, 500)\n  }\n\n  const getUsersTargetbyCompanyID = async (company_id, start_date, end_date) => {\n    setTimeout(() => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          company_id: company_id,\n          start_date: start_date,\n          end_date: end_date\n        })\n      };\n      fetch(`${SERVER_URL}getUsersTargetbyCompanyID`, requestOptions)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          if (!response.ok) {\n            // get error message from body or default to response status\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          }\n          setState((prevState) => ({\n            ...prevState,\n            companyTarget: [...data],\n            // groupData: [...[]],\n            top3Data: data.length > 3 ? data.slice(0, 3) : data\n          }))\n\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }, 500)\n  }\n\n  const getGraphData = async (company_id, start_date, end_date) => {\n    setTimeout(() => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          company_id: company_id,\n          start_date: start_date,\n          end_date: end_date\n        })\n      };\n      fetch(`${SERVER_URL}getCurrentSalesbyCompanyID`, requestOptions)\n        .then(async response => {\n          const data = await response.json();\n\n          if (!response.ok) {\n            // get error message from body or default to response status\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          }\n          console.log(\"Data==========>\", data)\n          let tmp = state.graphData\n          tmp.push(data.current_total)\n          setState((prevState) => ({\n            ...prevState,\n            graphData: [...tmp]\n          }))\n          // state.graphData.push(data.current_total)\n\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }, 500)\n  }\n\n  const getCategorySalesTarget = (item_id) => {\n    setTimeout(() => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          category_id: item_id,\n          type: state.category\n        })\n      };\n      fetch(`${SERVER_URL}getCategorySalesTarget`, requestOptions)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          if (!response.ok) {\n            // get error message from body or default to response status\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          }\n          setState((prevState) => ({\n            ...prevState,\n            sales_target: data.sales_target\n          }))\n\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }, 500)\n  }\n\n  const getItemCategoryTarget = () => {\n    setTimeout(() => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          start_date: state.start_date,\n          end_date: state.end_date,\n          type: state.category\n        })\n      };\n      fetch(`${SERVER_URL}getItemCategoryTarget`, requestOptions)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Item Target Data=============>\", data)\n          if (!response.ok) {\n            // get error message from body or default to response status\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          }\n          setState((prevState) => ({\n            ...prevState,\n            itemTarget: [...data],\n            top3Data: data.length > 3 ? data.slice(0, 3) : data\n          }))\n\n        })\n        .catch(error => {\n          console.error('There was an error!', error);\n        });\n    }, 500)\n  }\n\n  const setItemIdfromItemName = (item_name) => {\n    let item_id = ''\n    if (item_name == \"All\") {\n      item_id = '0'\n      setState((state) => ({\n        ...state,\n        item_id: item_id\n      }))\n      getCategorySalesTarget(item_id)\n      getCurrentSalesbyCategoryID(item_id, state.start_date, state.end_date)\n    } else {\n      let object = groupData.group.filter(item => item.category_name == item_name)\n      console.log(\"object====>\", object)\n      if (object[0] != null) {\n        item_id = object[0].category_id\n        console.log(\"Item ID====>\", item_id)\n        setState(state => ({\n          ...state,\n          item_id: item_id\n        }))\n        getCategorySalesTarget(item_id)\n        getCurrentSalesbyCategoryID(item_id, state.start_date, state.end_date)\n      }\n    }\n  }\n\n  const handleCompanyChange = (e, field) => {\n    if (field == 'company_entity_name') {\n      setCompanyIdfromCompanyName(e)\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    }\n  }\n\n  const handleItemChange = (e, field) => {\n    if (field == 'item') {\n      setItemIdfromItemName(e)\n      setState(prevState => ({\n        ...prevState, item_name: e\n      }))\n    }\n  }\n\n  const handleDateChange = async (date, field) => {\n\n    let s_date = new Date(curDate.getFullYear(), curDate.getMonth(), 1)\n    let e_date = date\n    setState(prevState => ({\n      ...prevState,\n      start_date: s_date,\n      end_date: e_date,\n    }))\n    state.start_date = s_date\n    state.end_date = e_date\n\n    if (activate) {\n      getUsersTargetbyCompanyID(state.company_id, s_date, e_date)\n\n      state.graphData = []\n      for (let i = 0; i < date.getMonth() + 1; i++) {\n\n        let s_date1 = new Date(date.getFullYear(), i, 1)\n        let e_date1 = new Date(date.getFullYear(), i + 1, 0)\n        getGraphData(state.company_id, s_date1, e_date1)\n\n      }\n    } else {\n      getCurrentSalesbyCategoryID(state.item_id, s_date, e_date)\n      getItemCategoryTarget()\n    }\n\n  };\n\n  const handleCategoryChange = (category, field) => {\n    setState(prevState => ({\n      ...prevState,\n      [field]: category,\n    }))\n    state.category = category\n\n    if (activate == false) {\n      getCategorySalesTarget(state.item_id)\n      getCurrentSalesbyCategoryID(state.item_id, state.start_date, state.end_date)\n      getItemCategoryTarget()\n    }\n\n  };\n\n  return (\n    <>\n      <div>\n        <Grid container spacing={1} >\n          <Grid item\n            lg={3}\n            md={3}\n            sm={3}\n            xs={12}>\n            <Typography variant=\"h3\" size=\"sm\" color=\"initial\" weight=\"bold\">\n              Sales Order Report\n            </Typography>\n          </Grid>\n          <Grid item\n            lg={6}\n            md={6}\n            sm={6}\n            xs={12}>\n          </Grid>\n          <Grid item\n            lg={3}\n            md={3}\n            sm={3}\n            xs={12}\n            style={{ display: 'flex' }}\n          >\n            <Grid item>\n              <Button\n                variant={!activate ? \"outlined\" : \"contained\"}\n                size=\"large\"\n                color=\"primary\"\n                style={{ margin: 5 }}\n                // startIcon={iconVar[item]}\n                onClick={() => {\n                  setActivate(true);\n                  getSalesTargetbyCompanyId(state.company_id)\n                  getCurrentSalesbyCompanyID(state.company_id, state.start_date, state.end_date)\n                  getUsersTargetbyCompanyID(state.company_id, state.start_date, state.end_date)\n                  setState(prevState => ({\n                    ...prevState,\n                    category: \"Amount\",\n                    end_date: curDate\n                  }))\n                  state.graphData = []\n                  for (let i = 0; i < curDate.getMonth() + 1; i++) {\n                    let s_date1 = new Date(curDate.getFullYear(), i, 1)\n                    let e_date1 = new Date(curDate.getFullYear(), i + 1, 0)\n                    getGraphData(state.company_id, s_date1, e_date1)\n                  }\n\n                }}\n              >\n                Company\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant={activate ? \"outlined\" : \"contained\"}\n                size=\"large\"\n                color=\"primary\"\n                style={{ margin: 5 }}\n                // startIcon={iconVar[item]}\n                onClick={() => {\n                  setActivate(false);\n                  getCategorySalesTarget(state.item_id)\n                  getCurrentSalesbyCategoryID(state.item_id, state.start_date, state.end_date)\n                  getItemCategoryTarget()\n                  state.graphData = []\n                  setState(prevState => ({\n                    ...prevState,\n                    category: \"Amount\",\n                    end_date: curDate\n                  }))\n                }}\n              >\n                Item\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n      <div>\n        <Grid container spacing={1} >\n          <Grid item\n            lg={4}\n            md={4}\n            sm={4}\n            xs={12}>\n            {\n              activate ? <CustomCombobox req={true} name=\"Company\"\n                items={companyList} value={state.company_entity_name}\n                handleChange={(e) => handleCompanyChange(e, 'company_entity_name')}\n              /> : <CustomCombobox req={true} name=\"Item\"\n                items={itemList} value={state.item_name}\n                handleChange={(e) => handleItemChange(e, 'item')}\n                />\n            }\n\n          </Grid>\n\n          <Grid item xs={12} sm={4} md={4} lg={4}>\n            <DatePicker className={classes.formControl}\n              required\n              variant=\"inline\"\n              animateYearScrolling\n              autoOk\n              views={[\"year\", \"month\"]}\n              clearable='true'\n              label={\"Date\"}\n              value={state.end_date}\n              onChange={(e) => handleDateChange(e, 'end_date')}\n            />\n          </Grid>\n\n          <Grid item\n            lg={4}\n            md={4}\n            sm={4}\n            xs={12}\n          >\n            <CustomCombobox req={true} name=\"Category\"\n              items={activate ? [\"Amount\"] : categoryList} value={state.category}\n              handleChange={(e) => handleCategoryChange(e, 'category')}\n            />\n          </Grid>\n        </Grid>\n      </div>\n      <Grid container spacing={8}>\n        <Grid item lg={6} md={6} sm={6} xs={12}>\n          <TotalWidget\n            title=\"Current Total Sales\"\n            current_total_sales={state.category == \"Amount\" ? \"Rp \" + state.current_total_sales : state.current_total_sales + \" Unit\"}\n          />\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={12}>\n          <TotalWidget\n            title=\"Sales Target\"\n            sales_target={state.category == \"Amount\" ? \"Rp \" + state.sales_target : state.sales_target + \" Unit\"}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={8}>\n        {activate ? <Grid item lg={6} md={6} sm={6} xs={12}>\n          <CashFlow\n            title=\"Amount\"\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].slice(0, state.graphData.length),\n              datasets: [\n                {\n                  label: 'Sales Target',\n                  fill: false,\n                  lineTension: 0.3,\n                  backgroundColor: '#00A3EE',\n                  borderColor: '#00A3EE',\n                  borderCapStyle: 'butt',\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: 'miter',\n                  pointBorderColor: '#0198C9',\n                  pointBackgroundColor: '#fff',\n                  pointBorderWidth: 1,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: '#0198C9',\n                  pointHoverBorderColor: 'rgba(220,220,220,1)',\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: state.graphData\n                },\n              ]\n            }}\n          ></CashFlow>\n        </Grid> : null}\n        <Grid item lg={6} md={6} sm={6} xs={12}>\n          <TopWidget\n            data={state.top3Data}\n            title={activate ? \"Sales LeaderBoard\" : \"Top Categories\"}\n            type={state.category}\n          >\n          </TopWidget>\n        </Grid>\n      </Grid>\n      {\n        activate ? <CompanyTarget companyTarget={state.companyTarget} /> : <ItemTarget itemTarget={state.itemTarget} type={state.category} />\n      }\n\n\n\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  company: state.company,\n  group: state.group\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany,\n  fetchGroup: fetchGroup\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TargetPage);\n\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchGroup from \"../../../services/salesorder/SalesGroupService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction GroupPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const groupData = useSelector(state => state.group);\n   \n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    props.fetchGroup()\n    setDataSource(groupData.group);\n  }, [])\n\n  const columns = [\n    {\n      name: \"category_name\",\n      label: \"Category Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"category_id\",\n      label: \"Edit\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesorder/group/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = groupData.group[data.dataIndex].order_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            order_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removeOrder`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Category\" button={[\"Add New\"]} data={dataSource} category=\"category\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Category\"}\n              // data={dataSource}\n              data={groupData.group}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      \n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  group: state.group\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup: fetchGroup\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GroupPage);\n\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddGroupPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const companyData = useSelector(state => state.company);\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        category_name: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    const handleChange = (e, field) => {\r\n\r\n        const { name, value } = e.target;\r\n        setState(prevState => ({\r\n            ...prevState, [field]: value\r\n        }))\r\n    }\r\n\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.category_name == null || state.category_name == \"\") {\r\n            notify(\"Please enter category name.\")\r\n            return\r\n        } if (state.company_id == null || state.company_id == \"\") {\r\n            notify(\"Please select company.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    category_name: state.category_name,\r\n                    // sales_target: state.sales_target,\r\n                    // company_id: state.company_id\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createCategory`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.group_id == 0) {\r\n                        notify(\"This category is already exist.\")\r\n                        return\r\n                    } else if (data.group_id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            category_name: '',\r\n                            // sales_target: 0,\r\n                            // company_id: ''\r\n                        }))\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.category_name == null || state.category_name == \"\") {\r\n            notify(\"Please enter category name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    category_name: state.category_name,\r\n                    // sales_target: state.sales_target,\r\n                    // company_id: state.company_id\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}createCategory`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.group_id == 0) {\r\n                        notify(\"This category is already exist.\")\r\n                        return\r\n                    } else if (data.group_id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            category_name: ''\r\n                        }))\r\n                        history.push(\"/app/salesorder/group\");\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/group\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Category\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Categroy Name\" value={state.category_name}\r\n                                    handleChange={(e) => handleChange(e, 'category_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={2} lg={2} className={classes.formContainer}>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={2} lg={2} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Save />}\r\n                                        onClick={() => onSaveandNew()}\r\n                                    >\r\n                                        Save & New\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={2} lg={2} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Save />}\r\n                                        onClick={() => onSaveandBack()}\r\n                                    >\r\n                                        Save & Back\r\n                                        </Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={2} lg={2} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Widget>\r\n                </Grid>\r\n            \r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps\r\n     * @param {*} options\r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddGroupPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../../common/config';\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nfunction EditGroupPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    const companyData = useSelector(state => state.company);\n    // input form datas\n    const update_id = props.match.params.group\n    const [state, setState] = useState({\n        category_id: update_id,\n        category_name: '',\n    })\n\n    useEffect(() => {\n        getGroup(update_id)\n    }, [])\n\n    const getGroup = (category_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                category_id: category_id\n            })\n        };\n        fetch(`${SERVER_URL}getCategorybyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    category_name: data[0].category_name,\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    const handleChange = (e, field) => {\n\n        const { name, value } = e.target;\n        setState(prevState => ({\n            ...prevState, [field]: value\n        }))\n    }\n\n    const onSave = () => {\n        if (state.category_name == null || state.category_name == \"\") {\n            notify(\"Please enter category name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    category_id: update_id,\n                    category_name: state.category_name,\n                })\n\n            };\n            console.log(\"body===> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateCategory`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.category_id == 0) {\n                        notify(\"This category is already exist.\")\n                        return\n                    } else if (data.category_id != 0) {\n                        handleNotificationCall(\"shipped\");\n                    }\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/group\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Category\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Categroy Name\" value={state.category_name}\n                                    handleChange={(e) => handleChange(e, 'category_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={2} md={2} lg={2} className={classes.formContainer}>\n                            </Grid>\n\n                            <Grid item xs={6} md={6} lg={6}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n\n                    </Widget>\n                </Grid>\n\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditGroupPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit, Settings } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchGroup from \"../../../services/salesorder/SalesGroupService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction ItemCategoryPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const groupData = useSelector(state => state.group);\n   \n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    props.fetchGroup()\n    setDataSource(groupData.group);\n  }, [])\n\n  const columns = [\n    {\n      name: \"category_name\",\n      label: \"Category Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"unit\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"amount\",\n      label: \"Amount(Rp)\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"category_id\",\n      label: \"Setting\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Settings style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/salesorder/itemcategory/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = groupData.group[data.dataIndex].order_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            order_id: id\n          })\n        };\n        fetch(`${SERVER_URL}removeOrder`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Item Categories\"/>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Item Categories\"}\n              // data={dataSource}\n              data={groupData.group}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      \n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  group: state.group\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchGroup: fetchGroup\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ItemCategoryPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../../common/config';\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nfunction EditItemCategoryPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    // input form datas\n    const update_id = props.match.params.itemcategory\n    const [state, setState] = useState({\n        category_id: update_id,\n        category_name: '',\n        unit: '',\n        amount: '',\n    })\n\n    useEffect(() => {\n        getGroup(update_id)\n    }, [])\n\n    const getGroup = (category_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                category_id: category_id\n            })\n        };\n        fetch(`${SERVER_URL}getCategorybyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    category_name: data[0].category_name,\n                    unit: data[0].unit,\n                    amount: data[0].amount,\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    const handleChange = (e, field) => {\n\n        const { name, value } = e.target;\n        setState(prevState => ({\n            ...prevState, [field]: value\n        }))\n    }\n\n    const onSave = () => {\n        if ((state.unit == null || state.unit == \"\") && (state.amount == null || state.amount == \"\")) {\n            notify(\"Please fill at lease one.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    category_id: update_id,\n                    unit: state.unit,\n                    amount: state.amount\n                })\n\n            };\n            console.log(\"body===> \", requestOptions.body)\n            fetch(`${SERVER_URL}settingCategory`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.category_id == 0) {\n                        notify(\"This category is already exist.\")\n                        return\n                    } else if (data.category_id != 0) {\n                        handleNotificationCall(\"shipped\");\n                    }\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/itemcategory\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Setting Category Sales Target\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={3} md={3} lg={3} className={classes.formContainer}>\n                                <CustomInput req={true} disabled={true} title=\"Categroy Name\" value={state.category_name} />\n                            </Grid>\n                            <Grid item xs={12} sm={3} md={3} lg={3} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Unit\" value={state.unit}\n                                    handleChange={(e) => handleChange(e, 'unit')} />\n                            </Grid>\n                            <Grid item xs={12} sm={3} md={3} lg={3} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Amount(Rp)\" value={state.amount}\n                                    handleChange={(e) => handleChange(e, 'amount')} />\n                            </Grid>\n\n                            <Grid item xs={6} md={3} lg={3}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n\n                    </Widget>\n                </Grid>\n\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditItemCategoryPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit, Settings } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchUserView from \"../../../services/users/UserViewService\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction CompanyUsersPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userViewData = useSelector(state => state.userview);\n  const companyData = useSelector(state => state.company);\n\n  \n  const [state, setState] = useState({\n    company_id: localStorage.getItem('company_id'),\n    company_entity_name: 'All',\n    companyIDList: localStorage.getItem('company_id').split(', '),\n    userData: []\n  })\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n    getUsersbyCompanyId(state.company_id)\n  }, [])\n\n  const getUsersbyCompanyId = (company_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        company_id: company_id,\n      })\n    };\n    fetch(`${SERVER_URL}getUserById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        if (!response.ok) {\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(state => ({\n          ...state,\n          userData: data\n        }))\n      })\n      .catch(error => {\n        notify('Something went wrong!\\n' + error)\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        if (state.companyIDList.length != 1) {\n          tmp.push(\"All\")\n        }\n        original.map(item => {\n          if (state.companyIDList.includes(item?.company_id.toString())) {\n            tmp.push(item?.company_entity_name);\n          }\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n  const companies = objArray2Array(companyData.company)\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let com_id = ''\n    if (company_entity_name == \"All\") {\n      com_id = state.companyIDList.join(', ');\n      setState({\n        ...state,\n        company_id: com_id\n      })\n      getUsersbyCompanyId(com_id)\n    } else {\n      let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n      if (object[0] != null) {\n        com_id = object[0].company_id.toString()\n        setState({\n          ...state,\n          company_id: com_id\n        })\n        getUsersbyCompanyId(com_id)\n      }\n    }\n  }\n\n  //input fields event\n  const handleChange = (e, field) => {\n\n    let comboFields = ['company_entity_name'];\n    if (comboFields.includes(field)) {\n      setCompanyIdfromCompanyName(e)\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    }\n  }\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_target\",\n      label: \"Amount(Rp)\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"user_id\",\n      label: \"Setting\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Settings style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/salesorder/companyusers/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = userViewData.userview[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Company Users\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <Grid container spacing={1} >\n            <Grid item xs={12} md={4}>\n              <CustomCombobox req={true} name=\"Company\"\n                items={companies} value={companies.length == 1 ? companies[0] : state.company_entity_name}\n                handleChange={(e) => handleChange(e, 'company_entity_name')} />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button\n                variant={'outlined'}\n                size=\"small\"\n                color=\"primary\"\n                style={{ marginTop: 30, marginLeft: 10 }}\n                // startIcon={iconVar[item]}\n                onClick={() => {\n                  history.push(\"/app/salesorder/companyusers/\" + state.company_id + \"/\" + state.company_entity_name + \"/setting\")\n                }}\n              >\n                Setting\n              </Button>\n            </Grid>\n          </Grid>\n\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Company Users\"}\n              // data={dataSource}\n              data={state.userData}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyUsersPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../../common/config';\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nfunction EditCompanyUserPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    // input form datas\n    const update_id = props.match.params.user_id\n    const [state, setState] = useState({\n        user_id: update_id,\n        amount: '',\n    })\n\n    useEffect(() => {\n        getSalesTarget(update_id)\n    }, [])\n\n    const getSalesTarget = (user_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                user_id: user_id\n            })\n        };\n        fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n\n                setState(() => ({\n                    amount: data[0].sales_target,\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    const handleChange = (e, field) => {\n\n        const { name, value } = e.target;\n        setState(prevState => ({\n            ...prevState, [field]: value\n        }))\n    }\n\n    const onSave = () => {\n        if (state.amount == null || state.amount == \"\") {\n            notify(\"Please enter amount.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    user_id: update_id,\n                    sales_target: state.amount\n                })\n\n            };\n            fetch(`${SERVER_URL}updateSalesTarget`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    }\n                    handleNotificationCall(\"shipped\");\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/companyusers\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Set User Sales Target\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n\n                        <Grid container spacing={2}>\n\n                            <Grid item xs={12} sm={3} md={3} lg={3} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Sales Target(Rp)\" value={state.amount}\n                                    handleChange={(e) => handleChange(e, 'amount')} />\n                            </Grid>\n\n                            <Grid item xs={6} md={3} lg={3}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n\n                    </Widget>\n                </Grid>\n\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditCompanyUserPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../../components/Widget/Widget\";\nimport PageTitle from \"../../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction SettingPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.company_id\n    const company_entity_name = props.match.params.company_entity_name\n    const [state, setState] = useState({\n        company_id: update_id,\n        company_entity_name: company_entity_name,\n        sales_target: 0\n    })\n\n    useEffect(() => {\n        getCompanyInfo(update_id)\n    }, [])\n\n    const getCompanyInfo = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getCompanyById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    sales_target: data.sales_target\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    const handleChange = (e, field) => {\n\n        const { name, value } = e.target;\n        setState(prevState => ({\n            ...prevState, [field]: value\n        }))\n    }\n\n    const onSave = () => {\n        if (state.sales_target == null || state.sales_target == \"\") {\n            notify(\"Please enter sales target.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    company_id: state.company_id,\n                    sales_target: state.sales_target\n                })\n            };\n            fetch(`${SERVER_URL}settingSalesTarget`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    }\n                    handleNotificationCall(\"shipped\");\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/companyusers\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Set Company Sales Target\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6} md={6} lg={3} className={classes.formContainer}>\n                                <CustomInput req={true} disabled={true} title=\"Company\" value={state.company_entity_name}\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={3} className={classes.formContainer}>\n                                <CustomInput title=\"Sales Target\" value={state.sales_target} handleChange={(e) => handleChange(e, 'sales_target')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Apply for all users\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SettingPage);","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header/Header\";\nimport Sidebar from \"../Sidebar/Sidebar1\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport UserViewPage from \"../../pages/UserView/UserView\";\nimport ScheduleViewPage from \"../../pages/ScheduleView/ScheduleView\";\nimport ClientViewPage from \"../../pages/ClientView/Client\";\nimport AddClientPage from \"../../pages/ClientView/AddClient\";\nimport EditClientPage from \"../../pages/ClientView/EditClient\";\nimport SalesViewPage from \"../../pages/SalesView/Sales\";\nimport EditSalesPage from \"../../pages/SalesView/EditSales\";\nimport AddSalesPage from \"../../pages/SalesView/AddSales\";\nimport ScheduleReportPage from '../../pages/Report/ScheduleReport/ScheduleReport'\n// import SalesOrderReportPage from '../../pages/Report/SalesOrderReport/SalesOrderReport'\nimport ReviewPage from '../../pages/SalesOrder/Review'\nimport HistoryPage from '../../pages/SalesOrder/History'\nimport ItemPage from '../../pages/SalesOrder/Item/Item'\nimport AddItemPage from '../../pages/SalesOrder/Item/AddItem'\nimport EditItemPage from '../../pages/SalesOrder/Item/EditItem'\nimport DiscountPage from '../../pages/SalesOrder/Discount/Discount'\nimport AddDiscountPage from '../../pages/SalesOrder/Discount/AddDiscount'\nimport EditDiscountPage from '../../pages/SalesOrder/Discount/EditDiscount'\nimport PromotionPage from '../../pages/SalesOrder/Promotion/Promotion'\nimport AddPromotionPage from '../../pages/SalesOrder/Promotion/AddPromotion'\nimport EditPromotionPage from '../../pages/SalesOrder/Promotion/EditPromotion'\nimport AddCouponPage from '../../pages/SalesOrder/Promotion/AddCoupon'\nimport EditCouponPage from '../../pages/SalesOrder/Promotion/EditCoupon'\nimport TargetPage from '../../pages/Report/SalesOrderReport/Target'\nimport GroupPage from '../../pages/SalesOrder/Group/Group'\nimport AddGroupPage from '../../pages/SalesOrder/Group/AddGroup'\nimport EditGroupPage from '../../pages/SalesOrder/Group/EditGroup'\nimport ItemCategoryPage from '../../pages/SalesOrder/ItemCategory/ItemCategory'\nimport EditItemCategoryPage from '../../pages/SalesOrder/ItemCategory/EditItemCategory'\nimport CompanyUsersPage from '../../pages/SalesOrder/CompanyUsers/CompanyUsers'\nimport EditCompanyUserPage from '../../pages/SalesOrder/CompanyUsers/EditCompanyUser'\nimport SettingPage from '../../pages/SalesOrder/CompanyUsers/Setting/Setting'\n// import EditItemPage from '../../pages/SalesOrder/Item/EditItem'\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n\n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer, {\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n          }\n          )}>\n            <Grid>\n              <Switch>\n                \n                <Route exact path=\"/app/userview\" component={UserViewPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/userview\" />}\n                />\n                <Route exact path=\"/app/scheduleview\" component={ScheduleViewPage} />\n                <Route exact path=\"/app/clientview\" component={ClientViewPage} />\n                <Route exact path=\"/app/clientview/add\" component={AddClientPage} />\n                <Route exact path=\"/app/clientview/:clientview/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/salesview\" component={SalesViewPage} />\n                <Route exact path=\"/app/salesview/:salesview/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/salesview/add\" component={AddSalesPage} />\n                <Route exact path=\"/app/schedule_report\" component={ScheduleReportPage} />\n                <Route exact path=\"/app/salesorder_report\" component={TargetPage} />\n                <Route exact path=\"/app/salesorder/review\" component={ReviewPage} />\n                <Route exact path=\"/app/salesorder/history\" component={HistoryPage} />\n                <Route exact path=\"/app/salesorder/item\" component={ItemPage} />\n                <Route exact path=\"/app/salesorder/item/add\" component={AddItemPage} />\n                <Route exact path=\"/app/salesorder/item/:item/edit\" component={EditItemPage} />\n                <Route exact path=\"/app/salesorder/discount\" component={DiscountPage} />\n                <Route exact path=\"/app/salesorder/discount/add\" component={AddDiscountPage} />\n                <Route exact path=\"/app/salesorder/discount/:discount/edit\" component={EditDiscountPage} />\n                <Route exact path=\"/app/salesorder/promotion\" component={PromotionPage} />\n                <Route exact path=\"/app/salesorder/promotion/add\" component={AddPromotionPage} />\n                <Route exact path=\"/app/salesorder/promotion/:promotion/edit\" component={EditPromotionPage} />\n                <Route exact path=\"/app/salesorder/coupon/add\" component={AddCouponPage} />\n                <Route exact path=\"/app/salesorder/coupon/:coupon/edit\" component={EditCouponPage} />\n                {/* <Route exact path=\"/app/salesorder/setting\" component={SettingPage} /> */}\n                <Route exact path=\"/app/salesorder/group\" component={GroupPage} />\n                <Route exact path=\"/app/salesorder/group/add\" component={AddGroupPage} />\n                <Route exact path=\"/app/salesorder/group/:group/edit\" component={EditGroupPage} />\n                <Route exact path=\"/app/salesorder/itemcategory\" component={ItemCategoryPage} />\n                <Route exact path=\"/app/salesorder/itemcategory/:itemcategory/edit\" component={EditItemCategoryPage} />\n                <Route exact path=\"/app/salesorder/companyusers\" component={CompanyUsersPage} />\n                <Route exact path=\"/app/salesorder/companyusers/:company_id/:company_entity_name/setting\" component={SettingPage} />\n                <Route exact path=\"/app/salesorder/companyusers/:user_id/edit\" component={EditCompanyUserPage} />\n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"../../assets/images/logo.png\";\n\nexport default function Success() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n        >\n          Success!\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Your action is done successfully.\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/login\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Go to Login\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n// import background from \"../../assets/images/background.jpg\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotypeContainer: {\n    // backgroundImage: background,\n    backgroundColor: theme.palette.primary.main,\n    width: \"60%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    // width: 165,\n    marginBottom: theme.spacing(4),\n  },\n  logotypeText: {\n    color: \"white\",\n    fontWeight: 500,\n    fontSize: 84,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 48,\n    },\n  },\n  formContainer: {\n    width: \"40%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n  form: {\n    width: 320,\n  },\n  tab: {\n    fontWeight: 400,\n    fontSize: 18,\n  },\n  greeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  subGreeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  googleButton: {\n    marginTop: theme.spacing(6),\n    boxShadow: theme.customShadows.widget,\n    backgroundColor: \"white\",\n    width: \"100%\",\n    textTransform: \"none\",\n  },\n  googleButtonCreating: {\n    marginTop: 0,\n  },\n  googleIcon: {\n    width: 30,\n    marginRight: theme.spacing(2),\n  },\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: \"none\",\n  },\n  formDividerContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  formDividerWord: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  formDivider: {\n    flexGrow: 1,\n    height: 1,\n    backgroundColor: theme.palette.text.hint + \"40\",\n  },\n  errorMessage: {\n    textAlign: \"center\",\n  },\n  textFieldUnderline: {\n    \"&:before\": {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    \"&:after\": {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    \"&:hover:before\": {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  formButtons: {\n    width: \"100%\",\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  forgetButton: {\n    textTransform: \"none\",\n    fontWeight: 400,\n  },\n  loginLoader: {\n    marginLeft: theme.spacing(4),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch, loginUser, signUp } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [confirmValue, setConfirmValue] = useState(\"\");\n  var [phoneNumberValue, setPhoneNumberValue] = useState(\"\");\n  var [companyIDValue, setCompanyIDValue] = useState(\"\");\n\n  //Show notification\n  const notify = (message) => toast(message);\n  \n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  //Login\n  const onLogin = () => {\n    if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } \n    else {\n      loginUser(\n        userDispatch,\n        loginValue,\n        passwordValue,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  //Sign up\n  const onSignup = () => {\n    if (nameValue < 0) {\n      notify(\"Please enter name\");\n      return\n    } else if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (phoneNumberValue.length != 10 ) {\n      notify(\"Please enter valid phone number.\")\n      return\n    } else if (companyIDValue.length < 1 ) {\n      notify(\"Please enter company id.\")\n      return\n    } else if ( passwordValue.length < 6) {\n      notify('Password length should be at least 6 characters.')\n      return\n    } else if ( confirmValue.length < 6) {\n      notify('Please confirm password')\n      return\n    } else if ( passwordValue != confirmValue) {\n      notify('Password is not match.')\n      return\n    } else {\n      signUp(\n        userDispatch,\n        nameValue,\n        passwordValue,\n        loginValue,\n        phoneNumberValue,\n        companyIDValue,\n        true,\n        false,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  return (\n    <Grid container className={classes.container}>\n      <ToastContainer />\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome to ASILE!\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                    <Button\n                      disabled={\n                        loginValue.length === 0 || passwordValue.length === 0\n                      }\n                      onClick={onLogin}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                    >\n                      Login\n                    </Button>\n                  )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h4\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  \n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"phone_number\"\n                margin=\"normal\"\n                placeholder=\"Phone Number\"\n                type=\"number\"\n                onChange={e => setPhoneNumberValue(e.target.value)}\n                fullWidth\n              />\n              <TextField\n                id=\"company_id\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={companyIDValue}\n                onChange={e => setCompanyIDValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Company ID\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <TextField\n                id=\"confirm\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={confirmValue}\n                onChange={e => setConfirmValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                    <Button\n                      onClick={onSignup}\n                      disabled={\n                        loginValue.length === 0 ||\n                        passwordValue.length === 0 ||\n                        nameValue.length === 0\n                      }\n                      size=\"large\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      className={classes.createAccountButton}\n                    >\n                      Create your account\n                    </Button>\n                  )}\n              </div>\n\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2020 Asile. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n// components\nimport Layout from \"./Layout/Layout\";\nimport Layout1 from \"./Layout/Layout1\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Success from \"../pages/success/success\"\nimport Login from \"../pages/login\";\n\n// context\nimport { useUserState } from \"../context/UserContext\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated, adminID } = useUserState();\n  console.log('auth ================> ', isAuthenticated)\n  console.log('auth ================> ', adminID)\n  return (\n    <HashRouter>\n      <Switch>\n        {/* {\n          isAuthenticated == 0 && <Redirect to=\"/login\" />\n        } */}\n\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\n        <PrivateRoute path=\"/app\" component={(adminID == 1) ? Layout : Layout1} />\n        {/* <PrivateRoute path=\"/app1\" component={Layout1} /> */}\n        <PublicRoute path=\"/login\" component={Login} />\n        <PublicRoute path=\"/success\" component={Success} />\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: {\n                    from: props.location,\n                  },\n                }}\n              />\n            )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          ) : (\n              React.createElement(component, props)\n            )\n        }\n      />\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import {data} from \"../fake-datas/AdminData\"\r\nimport { FETCH_ADMIN_REQUEST, FETCH_ADMIN_SUCCESS, FETCH_ADMIN_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    admin: [],\r\n    error: null\r\n}\r\n\r\nexport default function AdminReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_ADMIN_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_ADMIN_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // admin: [...data]\r\n                admin: action.admin\r\n            }\r\n        case FETCH_ADMIN_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","// import {data} from \"../fake-datas/UserData\"\r\nimport { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    user: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USER_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USER_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                user: action.user\r\n            }\r\n        case FETCH_USER_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_COMPANY_REQUEST, FETCH_COMPANY_SUCCESS, FETCH_COMPANY_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    company: [],\r\n    error: null\r\n}\r\n\r\nexport default function CompanyReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_COMPANY_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_COMPANY_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                company: action.company\r\n            }\r\n        case FETCH_COMPANY_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { FETCH_CLIENT_REQUEST, FETCH_CLIENT_SUCCESS, FETCH_CLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    client: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                client: action.client\r\n            }\r\n        case FETCH_CLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { FETCH_SCHEDULE_REQUEST, FETCH_SCHEDULE_SUCCESS, FETCH_SCHEDULE_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    schedule: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULE_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULE_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                schedule: action.schedule\r\n            }\r\n        case FETCH_SCHEDULE_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleReducer;\r\n","// import {data} from \"../fake-datas/UserViewData\"\r\nimport { FETCH_USERVIEW_REQUEST, FETCH_USERVIEW_SUCCESS, FETCH_USERVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    userview: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USERVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USERVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // userview: [...data]\r\n                userview: action.userview\r\n            }\r\n        case FETCH_USERVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: 'error'\r\n                // error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_SCHEDULEVIEW_REQUEST, FETCH_SCHEDULEVIEW_SUCCESS, FETCH_SCHEDULEVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    scheduleview: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleViewReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULEVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULEVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                scheduleview: action.scheduleview\r\n            }\r\n        case FETCH_SCHEDULEVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleViewReducer;\r\n","import { FETCH_SALESCLIENTVIEW_REQUEST, FETCH_SALESCLIENTVIEW_SUCCESS, FETCH_SALESCLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    salesview: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENTVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                salesview: action.salesview\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { FETCH_COUPON_REQUEST, FETCH_COUPON_SUCCESS, FETCH_COUPON_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    coupon: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesCouponReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_COUPON_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_COUPON_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                coupon: action.coupon\r\n            }\r\n        case FETCH_COUPON_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport AdminReducer from './AdminReducer';\r\nimport UserReducer from './UserReducer';\r\nimport CompanyReducer from './CompanyReducer';\r\nimport ClientReducer from './ClientReducer';\r\nimport ClientViewReducer from './ClientViewReducer';\r\nimport SalesReducer from './SalesReducer';\r\nimport ScheduleReducer from './ScheduleReducer'\r\nimport UserViewReducer from './UserViewReducer'\r\nimport ScheduleViewReducer from './ScheduleViewReducer'\r\nimport SalesViewReducer from './SalesViewReducer';\r\nimport SalesReviewReducer from './SalesReviewReducer';\r\nimport SalesHistoryReducer from './SalesHistoryReducer';\r\nimport SalesItemReducer from './SalesItemReducer';\r\nimport SalesDiscountReducer from './SalesDiscountReducer';\r\nimport SalesPromotionReducer from './SalesPromotionReducer';\r\nimport SalesCouponReducer from './SalesCouponReducer';\r\nimport SalesGroupReducer from './SalesGroupReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    //Super Admin Reducer\r\n    admin: AdminReducer,\r\n    user: UserReducer, \r\n    company: CompanyReducer, \r\n    client: ClientReducer,\r\n    sales: SalesReducer,\r\n    schedule: ScheduleReducer,\r\n    //Admin Reducer\r\n    userview: UserViewReducer,\r\n    clientview: ClientViewReducer,\r\n    scheduleview: ScheduleViewReducer,\r\n    salesview: SalesViewReducer,\r\n    salesreview: SalesReviewReducer,\r\n    saleshistory: SalesHistoryReducer,\r\n    salesitem: SalesItemReducer,\r\n    discount: SalesDiscountReducer,\r\n    promotion: SalesPromotionReducer,\r\n    coupon: SalesCouponReducer,\r\n    group: SalesGroupReducer,\r\n\r\n})\r\n\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Themes from \"./themes\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { LayoutProvider } from \"./context/LayoutContext\";\nimport { UserProvider } from \"./context/UserContext\";\nimport { createStore, applyMiddleware, compose  } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from 'redux-thunk'\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\n// pick a date util library\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,composeEnhancers (\n  applyMiddleware(\n    thunkMiddleware,\n  )\n)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <LayoutProvider>\n      <UserProvider>  \n        <ThemeProvider theme={Themes.default}>\n          <CssBaseline />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <App />\n          </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </UserProvider>\n    </LayoutProvider>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}